# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2023 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI
concurrency:
    group: charted-ci-${{ github.ref }}
    cancel-in-progress: true
on:
    workflow_dispatch: {}
    push:
        branches:
            - 'issues/gh-**'
            - 'feat/**'
            - main
        paths-ignore:
            - '.github/**'
            - '.coder/**'
            - '.devcontainer/**'
            - '.vscode/**'
            - 'docs/**'
            - 'scripts/**'
            - '.*ignore'
            - '**.md'
            - renovate.json
            - LICENSE
    pull_request:
        types: [opened, synchronize]
        branches:
            - main
        paths-ignore:
            - '.coder/**'
            - '.devcontainer/**'
            - '.vscode/**'
            - 'docs/**'
            - '.*ignore'
            - '**.md'
            - renovate.json
            - LICENSE
jobs:
    ci:
        name: Rust CI (${{matrix.runner == 'ubuntu-latest' && 'Linux (x86_64)' || matrix.runner == 'self-hosted' && 'Linux (arm64)' || matrix.runner == 'macos-latest' && 'macOS (x86_64)' || matrix.runner == 'windows-latest' && 'Windows' || 'Unknown'}}, Rust ${{matrix.rust-version}})
        runs-on: ${{matrix.runner}}
        strategy:
            fail-fast: true
            matrix:
                runner: [ubuntu-latest, macos-latest, windows-latest]
                rust-version: [stable, nightly]
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Rust toolchain
              uses: dtolnay/rust-toolchain@master
              with:
                toolchain: ${{matrix.rust-version}}
                components: clippy, rustfmt

            - name: Setup Rust cache
              uses: Swatinem/rust-cache@v2

            - name: Build project
              run: cargo build --all-features

            - name: Clippy!
              uses: auguwu/clippy-action@1.3.0
              with:
                all-features: true
                token: ${{github.token}}

            - name: Run tests
              run: cargo test --all-features
