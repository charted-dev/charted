# ğŸ“¦ charted-server: Free, open source, and reliable Helm Chart registry made in Go.
# Copyright 2022 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release workflow
on:
  release:
    types:
      - released

concurrency:
  group: goreleaser
  cancel-in-progress: true

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Login into Docker Hub
        uses: docker/login-action@v1
        with:
          username: auguwu
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login into GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --skip-sign
        env:
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Get release tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true

      - name: Setup Kubernetes workflow
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBECONFIG }}" >> ~/.kube/config

      - name: Set image tag
        run: kubectl set image deployment/charted-server charted-server=noelware/charted-server:${{steps.tag.outputs.tag}}

      - name: Deploy!
        run: kubectl rollout status deployment/charted-server
