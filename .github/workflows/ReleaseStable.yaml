# 🐻‍❄️📦 charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022-2023 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release Workflow (Stable)
on:
    release:
        types:
            - released
permissions:
    contents: write
    packages: write
jobs:
    archives:
        name: Build and publish archive packages [${{matrix.tasks.prettyName}}]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                tasks:
                    - { ext: 'tar.gz', task: 'distTar', prettyName: 'Tarball' }
                    - { ext: 'zip', task: 'distZip', prettyName: 'Zip' }
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Get current release tag
              uses: auguwu/git-tag-action@master
              id: tag

            - name: Setup Java 17
              uses: actions/setup-java@v3
              with:
                  distribution: temurin
                  java-version: 17

            - name: Setup Gradle
              uses: gradle/gradle-build-action@v2

            - name: Validate Gradle Wrapper
              uses: gradle/wrapper-validation-action@v1

            - name: Build artifact
              uses: gradle/gradle-build-action@v2
              with:
                  arguments: :cli:${{matrix.tasks.task}} --no-daemon --scan

            - name: Upload artifact to workflow
              uses: actions/upload-artifact@v3
              with:
                  name: charted-server.${{matrix.tasks.ext}}
                  path: ./cli/build/distributions/charted-server.${{matrix.tasks.ext}}

            - name: Upload artifact to release
              uses: softprops/action-gh-release@v1
              with:
                  files: ./cli/build/distributions/charted-server.${{matrix.tasks.ext}}

            - name: Upload artifacts to Noelware's Artifact Registry (/charted/server/${{steps.tag.outputs.version}})
              uses: Noelware/s3-action@2.2.0
              with:
                  enforce-path-access-style: true
                  files: ./cli/build/distributions/charted-server.${{matrix.tasks.ext}}
                  path-format: $(prefix)/charted/server/${{steps.tag.outputs.version}}/charted-server.${{matrix.tasks.ext}}
                  access-key-id: ${{secrets.S3_ACCESS_KEY}}
                  secret-key: ${{secrets.S3_SECRET_KEY}}
                  endpoint: ${{secrets.S3_ENDPOINT}}
                  region: us-east-1
                  prefix: /noelware/artifacts
                  bucket: august

            - name: Upload artifacts to Noelware's Artifact Registry (/charted/server/latest)
              uses: Noelware/s3-action@2.2.0
              with:
                  enforce-path-access-style: true
                  files: ./cli/build/distributions/charted-server.${{matrix.tasks.ext}}
                  path-format: $(prefix)/charted/server/latest/charted-server.${{matrix.tasks.ext}}
                  access-key-id: ${{secrets.S3_ACCESS_KEY}}
                  secret-key: ${{secrets.S3_SECRET_KEY}}
                  endpoint: ${{secrets.S3_ENDPOINT}}
                  region: us-east-1
                  prefix: /noelware/artifacts
                  bucket: august
    debian-docker-image:
        runs-on: ubuntu-latest
        name: Build Docker image (Debian)
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Get current release tag
              uses: auguwu/git-tag-action@master
              id: tag

            - name: Get commit hash
              id: commit-hash
              run: echo "commit=$(git rev-parse --short=8 $GITHUB_SHA)" >> $GITHUB_OUTPUT

            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v2

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v2

            - name: Login into Noelware's Container Registry
              uses: docker/login-action@v2
              with:
                  registry: cr.noelware.cloud
                  username: noel
                  password: ${{secrets.REGISTRY_PASSWORD}}

            - name: Build and push!
              uses: docker/build-push-action@v4
              with:
                  provenance: false
                  platforms: linux/amd64,linux/arm64
                  cache-from: type=gha,scope=debian
                  cache-to: type=gha,scope=debian
                  context: .
                  file: ./distribution/docker/debian/Dockerfile
                  tags: |
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}},
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.major}},
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.version}},
                      cr.noelware.cloud/charted/server:latest
                  labels: |
                      org.opencontainers.image.title=charted-server
                      org.opencontainers.image.description=📦 You know, for Helm Charts?
                      org.opencontainers.image.version=${{steps.tag.outputs.version}}
                      org.opencontainers.image.revision=${{steps.commit-hash.outputs.commit}}
                      org.opencontainers.image.licenses=Apache-2.0
                      org.opencontainers.image.documentation=https://charts.noelware.org/docs/server/${{steps.tag.outputs.version}}
                      org.opencontainers.image.source=https://github.com/charted-dev/charted
    alpine-docker-image:
        runs-on: ubuntu-latest
        name: Build Docker image (Alpine)
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Get current release tag
              uses: auguwu/git-tag-action@master
              id: tag

            - name: Get commit hash
              id: commit-hash
              run: echo "commit=$(git rev-parse --short=8 $GITHUB_SHA)" >> $GITHUB_OUTPUT

            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v2

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v2

            - name: Login into Noelware's Container Registry
              uses: docker/login-action@v2
              with:
                  registry: cr.noelware.cloud
                  username: noel
                  password: ${{secrets.REGISTRY_PASSWORD}}

            - name: Build and push!
              uses: docker/build-push-action@v4
              with:
                  provenance: false
                  platforms: linux/amd64
                  cache-from: type=gha,scope=alpine
                  cache-to: type=gha,scope=alpine
                  context: .
                  file: ./distribution/docker/alpine/Dockerfile
                  tags: |
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine,
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.major}}-alpine,
                      cr.noelware.cloud/charted/server:${{steps.tag.outputs.version}}-alpine,
                      cr.noelware.cloud/charted/server:latest-alpine
                  labels: |
                      org.opencontainers.image.title=charted-server
                      org.opencontainers.image.description=📦 You know, for Helm Charts?
                      org.opencontainers.image.version=${{steps.tag.outputs.version}}
                      org.opencontainers.image.revision=${{steps.commit-hash.outputs.commit}}
                      org.opencontainers.image.licenses=Apache-2.0
                      org.opencontainers.image.documentation=https://charts.noelware.org/docs/server/${{steps.tag.outputs.version}}
                      org.opencontainers.image.source=https://github.com/charted-dev/charted
    deploy:
        name: Deploy to Kubernetes
        runs-on: ubuntu-latest
        if: ${{ github.repository_owner == 'charted-dev' }}
        needs: [alpine-docker-image]
        steps:
            - name: Get current release tag
              uses: auguwu/git-tag-action@master
              id: tag

            - name: Setup kubeconfig
              run: |
                  if ! [ -d "~/.kube" ]; then
                      mkdir -p ~/.kube
                  fi

                  echo "${{secrets.KUBECONFIG}}" >> ~/.kube/config

            - name: Set image server
              run: kubectl set image deployment/charted-server --namespace=noelware charted-server=cr.noelware.cloud/charted/server:${{steps.tag.outputs.version}}-alpine

            - name: Deploy!
              run: kubectl rollout status deployment/charted-server --namespace=noelware
