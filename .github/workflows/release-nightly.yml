# ðŸ“¦ charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release a new nightly version
on:
  release:
    types:
      - prereleased
permissions:
  contents: write
  packages: write
jobs:
  archives:
    name: Build and publish archive [${{ matrix.task.ext }}]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task:
          - { ext: "tar.gz", task: "distTar" }
          - { ext: "zip", task: "distZip" }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Validate gradle-wrapper.jar
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Lint build tools with Spotless
        run: ./gradlew :build-tools:spotlessCheck --scan --no-daemon

      - name: Lint repository with Spotless
        run: ./gradlew spotlessCheck --scan --no-daemon

      - name: Compile the Kotlin sources for any compiler errors
        run: ./gradlew compileKotlin --scan --no-daemon

      - name: Compile the Java sources for any compiler errors
        run: ./gradlew compileJava --scan --no-daemon

      - name: Build artifact
        run: ./gradlew :server:${{ matrix.task.task }}

      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v3
        with:
          name: charted-server.${{ matrix.task.ext }}
          path: ./server/build/distributions/charted-server.${{ matrix.task.ext }}

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./server/build/distributions/charted-server.${{ matrix.tasks.ext }}

      # This will directly upload to artifacts.noelware.cloud
      # - name: Upload artifacts to Noelware's downloads repository
      #   uses: Noelware/s3-action@master
      #   with:
      #     directories: ./server/build/distributions
      #     access-key: ${{ secrets.S3_ACCESS_KEY }}
      #     secret-key: ${{ secrets.S3_SECRET_KEY }}
      #     bucket: cdn.noelware.org

  migrations:
    runs-on: ubuntu-latest
    name: Cassandra Migrations [${{ matrix.gobuild.os }}/${{ matrix.gobuild.arch }}]
    strategy:
      matrix:
        gobuild:
          - { os: linux, arch: amd64, ext: "" }
          - { os: linux, arch: arm64, ext: "" }
          - { os: windows, arch: amd64, ext: ".exe" }
          - { os: windows, arch: arm64, ext: ".exe" }
          - { os: windows, arch: i386, ext: ".exe" }
          - { os: darwin, arch: amd64, ext: "" }
          - { os: darwin, arch: arm64, ext: "" }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Setup Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build artifact
        working-directory: ./tools/migrations
        run: go build -mod=readonly -ldflags "-s -w" -o ./bin/migrations-${{ matrix.gobuild.os }}-${{ matrix.gobuild.arch }}${{ matrix.gobuild.ext }}
        env:
          GOOS: ${{ matrix.gobuild.os }}
          GOARCH: ${{ matrix.gobuild.arch }}

      - name: Upload artifact to workflow
        uses: actions/upload-artifact@v3
        with:
          name: cassandra-migrations-${{ matrix.gobuild.os }}-${{ matrix.gobuild.arch }}${{ matrix.gobuild.ext }}
          path: ./tools/migrations/bin/migrations-${{ matrix.gobuild.os }}-${{ matrix.gobuild.arch }}${{ matrix.gobuild.ext }}

      - name: Upload artifact to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./tools/migrations/bin/migrations-${{ matrix.gobuild.os }}-${{ matrix.gobuild.arch }}${{ matrix.gobuild.ext }}

      # This will directly upload to artifacts.noelware.cloud
      # - name: Upload artifacts to Noelware's downloads repository
      #   uses: Noelware/s3-action@master
      #   with:
      #     directories: ./tools/migrations
      #     access-key: ${{ secrets.S3_ACCESS_KEY }}
      #     secret-key: ${{ secrets.S3_SECRET_KEY }}
      #     bucket: cdn.noelware.org

  server-docker-image:
    name: Docker Build [server, ${{ matrix.platform.key }}]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - { key: linux/amd64, runner: ubuntu-latest, path: ./distribution/docker/amd64.Dockerfile, tag-suffix: amd64, buildx: true }
          #- { key: linux/arm64, runner: self-hosted, path: ./distribution/docker/arm64.Dockerfile, tag-suffix: arm64, buildx: false }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: Setup Docker layer cache
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx/cache
#          key: ${{ runner.os }}-buildx-cache-${{ matrix.platform.key }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-cache-

      # We only upload stable and nightly releases on the GitHub container registry
      # and not pollute our container registry with nightly releases people
      # might not want.
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: charted-dev
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for platform ${{ matrix.platform.key }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.platform.path }}
          push: true
          cache-from: type=local,src=/tmp/.buildx/cache
          cache-to: type=local,dest=/tmp/.buildx/cache-new,mode=max
          platforms: ${{ matrix.platform.key }}
          tags: |
            ghcr.io/charted-dev/charted:nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-${{ matrix.platform.tag-suffix }}

      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx/cache
#          mv /tmp/.buildx/cache-new /tmp/.buildx/cache

  migrations-docker-image:
    name: Docker Build [cassandra-migrations, ${{ matrix.docker-platform.key }}]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        docker-platform:
          - { key: linux/amd64, suffix: amd64 }
          - { key: linux/arm64, suffix: arm64 }
          - { key: linux/386, suffix: i386 }
          - { key: linux/arm/v7, suffix: armv7 }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

#      - name: Setup Docker layer cache
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx/cache
#          key: ${{ runner.os }}-migrations-buildx-cache-${{ matrix.platform.key }}
#          restore-keys: |
#            ${{ runner.os }}-migrations-buildx-cache-

      # We only upload stable and nightly releases on the GitHub container registry
      # and not pollute our container registry with nightly releases people
      # might not want.
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: charted-dev
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for platform ${{ matrix.docker-platform.key }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./tools/migrations/Dockerfile
          push: true
          cache-from: type=local,src=/tmp/.buildx/cache
          cache-to: type=local,dest=/tmp/.buildx/cache-new,mode=max
          platforms: ${{ matrix.docker-platform.key }}
          tags: |
            ghcr.io/charted-dev/charted/migrations:nightly-${{ matrix.docker-platform.suffix }}
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly-${{ matrix.docker-platform.suffix }}
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-${{ matrix.docker-platform.suffix }}
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-${{ matrix.docker-platform.suffix }}

      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx/cache
#          mv /tmp/.buildx/cache-new /tmp/.buildx/cache

  web-docker-image:
    name: Docker Build [web, ${{ matrix.platform.key }}]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - { key: linux/amd64, runner: ubuntu-latest, path: ./web/distribution/docker/amd64.Dockerfile, suffix: amd64, buildx: true }
          #- { key: linux/arm64, runner: self-hosted, path: ./web/distribution/docker/amd64.Dockerfile, suffix: arm64, buildx: false }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

#      - name: Setup Docker layer cache
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx/cache
#          key: ${{ runner.os }}-web-buildx-cache-${{ matrix.platform.key }}
#          restore-keys: |
#            ${{ runner.os }}-web-buildx-cache-

      # We only upload stable and nightly releases on the GitHub container registry
      # and not pollute our container registry with nightly releases people
      # might not want.
      - name: Login into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: charted-dev
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push for platform ${{ matrix.platform.key }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.platform.path }}
          push: true
          #cache-from: type=local,src=/tmp/.buildx/cache
          #cache-to: type=local,dest=/tmp/.buildx/cache-new,mode=max
          platforms: ${{ matrix.platform.key }}
          tags: |
            ghcr.io/charted-dev/charted/web:nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-${{ matrix.platform.tag-suffix }}
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-${{ matrix.platform.tag-suffix }}

      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx/cache
#          mv /tmp/.buildx/cache-new /tmp/.buildx/cache

  docker-manifests:
    name: Apply Docker Manifests
    runs-on: ubuntu-latest
    needs:
      - server-docker-image
      - migrations-docker-image
      - web-docker-image
    steps:
      - name: Get current git tag
        id: tag
        uses: auguwu/git-tag-action@master

      - name: Login into GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: charted-dev
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "[server] Apply manifest for \"nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted:nightly
          extra-images: |
            ghcr.io/charted-dev/charted:nightly-amd64,
            ghcr.io/charted-dev/charted:nightly-arm64

      - name: "[server] Apply manifest for \"${{ steps.tag.outputs.major }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly-amd64,
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly-arm64

      - name: "[server] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-amd64,
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-arm64

      - name: "[server] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-amd64,
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-arm64

      - name: "[migrations] Apply manifest for \"nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/migrations:nightly
          extra-images: |
            ghcr.io/charted-dev/charted/migrations:nightly-amd64,
            ghcr.io/charted-dev/charted/migrations:nightly-arm64,
            ghcr.io/charted-dev/charted/migrations:nightly-i386,
            ghcr.io/charted-dev/charted/migrations:nightly-armv7

      - name: "[migrations] Apply manifest for \"${{ steps.tag.outputs.major }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly-amd64,
            ghcr.io/charted-dev/charted:${{ steps.tag.outputs.major }}-nightly-arm64,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly-i386,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly-armv7

      - name: "[migrations] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-amd64,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-arm64,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-i386,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-armv7

      - name: "[migrations] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-amd64,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-arm64,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-i386,
            ghcr.io/charted-dev/charted/migrations:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-armv7

      - name: "[webui] Apply manifest for \"nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/web:nightly
          extra-images: |
            ghcr.io/charted-dev/charted/web:nightly-amd64,
            ghcr.io/charted-dev/charted/web:nightly-arm64

      - name: "[webui] Apply manifest for \"${{ steps.tag.outputs.major }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly-amd64,
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly-arm64

      - name: "[webui] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-amd64,
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}-nightly-arm64

      - name: "[webui] Apply manifest for \"${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly\" tag"
        uses: Noelware/docker-manifest-action@master
        with:
          push: true
          base-image: ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}-nightly
          extra-images: |
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-amd64,
            ghcr.io/charted-dev/charted/web:${{ steps.tag.outputs.major }}.${{ steps.tag.outputs.minor }}.${{ steps.tag.outputs.patch }}-nightly-arm64
