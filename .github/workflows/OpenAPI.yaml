# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022-2023 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Cron Jobs
on:
    push:
        branches:
            - main
        paths-ignore:
            - .github/**
            - .vscode/**
            - assets/**
            - .gitignore
            - '**.md'
            - LICENSE
            - renovate.json
    schedule:
        - cron: '* * 0 0 0'
jobs:
    openapi:
        name: Generate OpenAPI document
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis
                options: >-
                    --health-cmd "redis-cli ping"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: charted
                    POSTGRES_USERNAME: charted
                    POSTGRES_DATABASE: charted
                options: >-
                    --health-cmd pg_isready -U charted
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Setup Java ${{matrix.java-version}}
              uses: actions/setup-java@v3
              with:
                  java-version: ${{matrix.java-version}}
                  distribution: temurin
                  architecture: ${{matrix.runner == 'self-hosted' && 'aarch64' || 'amd64'}}

            - name: Setup Gradle
              uses: gradle/gradle-build-action@v2

            - name: Validate Gradle Wrapper
              uses: gradle/wrapper-validation-action@v1

            - name: Build CLI project
              uses: gradle/gradle-build-action@v2
              with:
                  arguments: :cli:installDist --scan

            - name: Generate OpenAPI document
              run: ./scripts/generate-openapi.sh

            - name: Apply Spotless
              uses: gradle/gradle-build-action@v2
              with:
                  arguments: spotlessApply --scan

            - name: Commit!
              continue-on-error: true
              run: |
                  git config user.email noelbot@users.noreply.github.com
                  git config user.name "Noel[bot]"
                  git commit -am "[automated] Generate OpenAPI documentation"
                  git push
