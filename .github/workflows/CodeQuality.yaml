# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022-2023 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Code Quality
on:
    workflow_dispatch: {}
    schedule:
        - cron: 0 0 * * *
    push:
        branches:
            - issue/gh-**
            - feat/**
            - main
        paths-ignore:
            - 'scripts/*.sh'
            - .github/**
            - .vscode/**
            - .coder/**
            - assets/**
            - .*ignore
            - '**.md'
            - LICENSE
            - renovate.json
jobs:
    codeql:
        name: CodeQL (Java ${{matrix.java-version}} [${{matrix.languages}}])
        runs-on: ubuntu-latest
        strategy:
            matrix:
                java-version: [17, 20]
                languages: [java, kotlin]
        permissions:
            security-events: write
            contents: read
            actions: read
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: Setup Java ${{matrix.java-version}}
              uses: actions/setup-java@v3
              with:
                  java-version: ${{matrix.java-version}}
                  distribution: temurin

            - name: Setup latest Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: latest

            # Similar to the linting/spotless workflow,
            # we will use the 'Noelware/setup-protoc' action to obtain protoc,
            # and pass in the `CHARTED_PROTOC` environment variable.
            - name: Setup protoc
              uses: Noelware/setup-protoc@1.1.0
              id: protoc
              with:
                  repo-token: ${{secrets.GITHUB_TOKEN}}

            - name: Update GitHub env
              run: echo "CHARTED_PROTOC_PATH=${{steps.protoc.outputs.binary}}" >> $GITHUB_ENV

            - name: Init CodeQL
              uses: github/codeql-action/init@v2
              with:
                  languages: ${{matrix.languages}}

            - name: Autobuild
              uses: github/codeql-action/autobuild@v2

            - name: Analyze
              uses: github/codeql-action/analyze@v2
    qodana:
        name: Qodana
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  submodules: recursive

            - name: Perform Qodana scan
              uses: JetBrains/qodana-action@v2023.1.4
              env:
                  QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
              with:
                  args: --baseline,qodana.sarif.json,--save-report

            - name: Upload Sarif Results to GitHub
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: ${{runner.temp}}/qodana/results/qodana.sarif.json
