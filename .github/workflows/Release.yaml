# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2024 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release CI (Stable)
on:
    push:
        tags:
            - 'v?[0-9]+.[0-9]+.[0-9]'
jobs:
    binaries:
        name: Build `cli` and `helm-plugin` binaries
        runs-on: ${{matrix.runner}}
        strategy:
            fail-fast: true
            matrix:
                runner: [ubuntu-latest, macos-latest, windows-latest]
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

    #         - name: Checkout source code
    #           uses: actions/checkout@v3

    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Setup Bazel cache
    #           uses: actions/cache@v3
    #           with:
    #             path: |
    #                 ${{runner.temp}}/_bazel_${{runner.os}}_${{runner.arch}}
    #                 ${{matrix.data.runner}}
    #             restore-keys: bazel-cache-${{matrix.data.runner}}-
    #             key: bazel-cache-${{matrix.data.runner}}-${{ hashFiles('WORKSPACE', 'BUILD.bazel', '.bazelversion') }}

    #         - name: Build release binary
    #           id: binary
    #           run: |
    #             echo "===> Building release binary..."
    #             bazel ${{env.BAZEL_ARGS}} ${{matrix.data.bazel-args}} build //cli

    #             echo "===> Marking location as an output"
    #             echo "location=${{github.workspace}}/bazel-bin/cli/cli" >> $GITHUB_OUTPUT

    #         - name: Build Helm plugin binary
    #           id: helm-binary
    #           run: |
    #             bazel ${{env.BAZEL_ARGS}} ${{matrix.data.bazel-args}} build //tools/helm-plugin

    #             echo "===> Marking location as an output"
    #             echo "location=${{github.workspace}}/bazel-bin/tools/helm-plugin/helm-plugin" >> $GITHUB_OUTPUT

    #         - name: Shutdown Bazel server
    #           run: bazel shutdown

    #         - name: Upload to S3 bucket (/charted/server/${{steps.tag.outputs.version}})
    #           uses: Noelware/s3-action@2.2.1
    #           with:
    #             enforce-path-access-style: true
    #             access-key-id: ${{secrets.S3_ACCESS_KEY}}
    #             path-format: $(prefix)/charted/server/${{steps.tag.outputs.version}}/charted-${{matrix.data.os}}-${{matrix.data.arch}}${{matrix.data.ext}}
    #             secret-key: ${{secrets.S3_SECRET_KEY}}
    #             endpoint: ${{secrets.S3_ENDPOINT}}
    #             region: us-east-1
    #             prefix: /noelware/artifacts
    #             bucket: august
    #             files: ${{steps.binary.outputs.location}}

    #         - name: Upload to S3 bucket (/charted/server/latest)
    #           uses: Noelware/s3-action@2.2.1
    #           with:
    #             enforce-path-access-style: true
    #             access-key-id: ${{secrets.S3_ACCESS_KEY}}
    #             path-format: $(prefix)/charted/server/latest/charted-${{matrix.data.os}}-${{matrix.data.arch}}${{matrix.data.ext}}
    #             secret-key: ${{secrets.S3_SECRET_KEY}}
    #             endpoint: ${{secrets.S3_ENDPOINT}}
    #             region: us-east-1
    #             prefix: /noelware/artifacts
    #             bucket: august
    #             files: ${{steps.binary.outputs.location}}

    #         - name: Upload to S3 bucket (/charted/helm-plugin/${{steps.tag.outputs.version}})
    #           uses: Noelware/s3-action@2.2.1
    #           with:
    #             enforce-path-access-style: true
    #             access-key-id: ${{secrets.S3_ACCESS_KEY}}
    #             path-format: $(prefix)/charted/helm-plugin/${{steps.tag.outputs.version}}/charted-helm-plugin-${{matrix.data.os}}-${{matrix.data.arch}}${{matrix.data.ext}}
    #             secret-key: ${{secrets.S3_SECRET_KEY}}
    #             endpoint: ${{secrets.S3_ENDPOINT}}
    #             region: us-east-1
    #             prefix: /noelware/artifacts
    #             bucket: august
    #             files: ${{steps.helm-binary.outputs.location}}

    #         - name: Upload to S3 bucket (/charted/helm-plugin/latest)
    #           uses: Noelware/s3-action@2.2.1
    #           with:
    #             enforce-path-access-style: true
    #             access-key-id: ${{secrets.S3_ACCESS_KEY}}
    #             path-format: $(prefix)/charted/helm-plugin/latest/charted-helm-plugin-${{matrix.data.os}}-${{matrix.data.arch}}${{matrix.data.ext}}
    #             secret-key: ${{secrets.S3_SECRET_KEY}}
    #             endpoint: ${{secrets.S3_ENDPOINT}}
    #             region: us-east-1
    #             prefix: /noelware/artifacts
    #             bucket: august
    #             files: ${{steps.helm-binary.outputs.location}}
    # docker-debian:
    #     name: Build Debian image
    #     runs-on: ${{matrix.runner}}
    #     strategy:
    #         fail-fast: true
    #         matrix:
    #             runner: [ubuntu-latest, self-hosted]
    #             include:
    #                 - runner: ubuntu-latest
    #                   platform: linux/amd64
    #                   arch: amd64
    #                 - runner: self-hosted
    #                   platform: linux/arm64
    #                   arch: arm64
    #     steps:
    #         - name: Checkout source code
    #           uses: actions/checkout@v3

    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Setup Docker buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Login
    #           uses: docker/login-action@v2
    #           with:
    #             registry: docker.noelware.org
    #             username: noelbot
    #             password: ${{secrets.REGISTRY_PASSWORD}}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #             provenance: false
    #             platforms: ${{matrix.platform}}
    #             context: .
    #             cache-from: type=gha,scope=debian-${{matrix.arch}}
    #             file: ./distribution/docker/debian.Dockerfile
    #             tags: |
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:latest-${{matrix.arch}}
    # docker-alpine:
    #     name: Build Alpine image
    #     runs-on: ${{matrix.runner}}
    #     strategy:
    #         fail-fast: true
    #         matrix:
    #             runner: [ubuntu-latest]
    #             include:
    #                 - runner: ubuntu-latest
    #                   platform: linux/amd64
    #                   arch: amd64
    #     steps:
    #         - name: Checkout source code
    #           uses: actions/checkout@v3

    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Setup Docker buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Login
    #           uses: docker/login-action@v2
    #           with:
    #             registry: docker.noelware.org
    #             username: noelbot
    #             password: ${{secrets.REGISTRY_PASSWORD}}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #             provenance: false
    #             platforms: ${{matrix.platform}}
    #             context: .
    #             cache-from: type=gha,scope=alpine-${{matrix.arch}}
    #             file: ./distribution/docker/alpine.Dockerfile
    #             tags: |
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-alpine-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:alpine-${{matrix.arch}}
    # docker-manifests:
    #     name: Merge Manifests
    #     runs-on: ubuntu-latest
    #     needs: [docker-alpine, docker-debian]
    #     if: ${{github.repository == 'charted-dev/charted'}}
    #     steps:
    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Login
    #           uses: docker/login-action@v2
    #           with:
    #             registry: docker.noelware.org
    #             username: noelbot
    #             password: ${{secrets.REGISTRY_PASSWORD}}

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:latest]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:latest
    #             inputs: docker.noelware.org/charted/charted:latest-amd64,docker.noelware.org/charted/charted:latest-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-amd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-amd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-amd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:alpine]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:alpine
    #             inputs: docker.noelware.org/charted/charted:alpine-amd64,docker.noelware.org/charted/charted:alpine-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-alpine]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-alpine
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-alpine-amd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-alpine-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}--alpineamd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine-arm64
    #             push: true

    #         - name: Merge Manifests [docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine]
    #           uses: Noelware/docker-manifest-action@0.4.0
    #           with:
    #             images: docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine
    #             inputs: docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine-amd64,docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine-arm64
    #             push: true
    # helm-docker-debian:
    #     name: Build Docker image (helm-plugin, Debian)
    #     runs-on: ${{matrix.runner}}
    #     needs: [binary]
    #     strategy:
    #         fail-fast: true
    #         matrix:
    #             runner: [ubuntu-latest, self-hosted]
    #             include:
    #                 - runner: ubuntu-latest
    #                   platform: linux/amd64
    #                   arch: amd64
    #                 - runner: self-hosted
    #                   platform: linux/arm64
    #                   arch: arm64
    #     steps:
    #         - name: Checkout source code
    #           uses: actions/checkout@v3

    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Setup Docker buildx
    #           uses: docker/setup-buildx-action@v2

    #         - name: Login
    #           uses: docker/login-action@v2
    #           with:
    #             registry: docker.noelware.org
    #             username: noelbot
    #             password: ${{secrets.REGISTRY_PASSWORD}}

    #         - name: Build and push
    #           uses: docker/build-push-action@v4
    #           with:
    #             provenance: false
    #             platforms: ${{matrix.platform}}
    #             context: .
    #             cache-from: type=gha,scope=helm-debian-${{matrix.arch}}
    #             file: ./distribution/docker/debian.Dockerfile
    #             tags: |
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:${{steps.tag.outputs.major}}-${{matrix.arch}},
    #                 docker.noelware.org/charted/charted:latest-${{matrix.arch}}
    # sentry:
    #     name: Create Sentry release
    #     runs-on: ubuntu-latest
    #     if: ${{github.repository == 'charted-dev/charted'}}
    #     steps:
    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Create!
    #           uses: getsentry/action-release@v1
    #           env:
    #             SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
    #             SENTRY_PROJECT: charted-server
    #             SENTRY_URL: https://sentry.noelware.cloud
    #           with:
    #             environment: production
    #             version: ${{steps.tag.outputs.version}}
    # prod:
    #     name: Push to Production
    #     runs-on: ubuntu-latest
    #     if: ${{github.repository == 'charted-dev/charted'}}
    #     needs: [sentry, docker-manifests]
    #     steps:
    #         - name: Get current release tag
    #           uses: auguwu/git-tag-action@master
    #           id: tag

    #         - name: Update ~/.kube/config file
    #           run: echo "${{secrets.KUBECONFIG}}" >> ~/.kube/config

    #         - name: Rollout
    #           run: kubectl set image deployment/charted-server charted-server=docker.noelware.org/charted/charted:${{steps.tag.outputs.version}}-alpine

    #         - name: Wait for completion!
    #           run: kubectl rollout status deployment/charted-server
