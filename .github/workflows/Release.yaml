# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2025 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release / Stable
on:
    push:
        tags:
            - 'v?[0-9]+.[0-9]+.[0-9]'
jobs:
    binaries:
        name: "Rust / Build :: ${{matrix.runner == 'ubuntu-24.04' && 'Linux (x64)' || matrix.runner == 'linux-aarch64' && 'Linux (aarch64)' || matrix.runner == 'macos-latest' && 'macOS (x64)' || matrix.runner == 'macos-14-xlarge' && 'macOS (aarch64)' || matrix.runner == 'windows-latest' && 'Windows (x64)'}}"
        runs-on: ${{matrix.runner}}
        if: ${{github.repository == 'charted-dev/charted'}}
        strategy:
            fail-fast: true
            matrix:
                include:
                    - runner: ubuntu-24.04
                      os: linux
                      arch: x86_64

                    - runner: linux-aarch64
                      os: linux
                      arch: aarch64

                    - runner: macos-latest
                      os: darwin
                      arch: x86_64

                    - runner: macos-14-xlarge
                      os: darwin
                      arch: aarch64

                    - runner: windows-latest
                      os: windows
                      arch: x86_64
        env:
            CARGOFLAGS: -Zbuild-std=std,panic_abort -Zbuild-std-features=optimize_for_size,panic_immediate_abort,backtrace
        steps:
            - uses: actions/checkout@v4
            - uses: oven-sh/setup-bun@v2
            - uses: Swatinem/rust-cache@v2
            - uses: auguwu/git-tag-action@master
              id: tag

            - name: 'Windows: Setup vcpkg'
              if: ${{matrix.runner == 'windows-latest'}}
              run: ./src/ci/windows/Setup-Vcpkg.ps1

            - name: 'Windows: Setup vcpkg cache'
              if: ${{matrix.runner == 'windows-latest'}}
              uses: actions/cache@v4
              with:
                  key: vcpkg-cache
                  path: |
                      ${{env.VCPKG_ROOT}}

            - name: 'Windows: Install libraries'
              if: ${{matrix.runner == 'windows-latest'}}
              run: ./src/ci/windows/Install-Libraries.ps1

            - name: 'Windows: Install `nasm` for `aws-lc-sys`'
              if: ${{matrix.runner == 'windows-latest'}}
              uses: ilammy/setup-nasm@v1

            - run: "./src/ci/${{matrix.os == 'darwin' && 'macos' || matrix.os}}/${{matrix.os == 'windows' && 'Release.ps1' || 'release'}}"
              env:
                  RUSTFLAGS: ''
                  CARGOFLAGS: ${{env.CARGOFLAGS}}

            - name: Upload (/charted/server/${{steps.tag.outputs.version}})
              uses: Noelware/s3-action@2.3.1
              with:
                  enforce-path-access-style: true
                  access-key-id: ${{secrets.S3_ACCESS_KEY}}
                  path-format: "$(prefix)/charted/server/${{steps.tag.outputs.version}}/charted-${{matrix.os}}-${{matrix.arch}}${{matrix.os == 'windows' && '.exe' || ''}}"
                  secret-key: ${{secrets.S3_SECRET_KEY}}
                  directories: ./.result
                  endpoint: ${{secrets.S3_ENDPOINT}}
                  region: us-east-1
                  prefix: /noelware/artifacts
                  bucket: august

            - name: Upload (/charted/server/latest)
              uses: Noelware/s3-action@2.3.1
              with:
                  enforce-path-access-style: true
                  access-key-id: ${{secrets.S3_ACCESS_KEY}}
                  path-format: "$(prefix)/charted/server/latest/charted-${{matrix.os}}-${{matrix.arch}}${{matrix.os == 'windows' && '.exe' || ''}}"
                  secret-key: ${{secrets.S3_SECRET_KEY}}
                  directories: ./.result
                  endpoint: ${{secrets.S3_ENDPOINT}}
                  region: us-east-1
                  prefix: /noelware/artifacts
                  bucket: august

            - name: Make `versions.json` file
              run: src/ci/other/buildVersionsJson.js
    docker:
        name: 'Docker / Build [${{matrix.kind}}]'
        runs-on: ${{matrix.runner}}
        if: ${{github.repository == 'charted-dev/charted'}}
        outputs:
            docker-meta: ${{steps.meta.outputs.json}}
        strategy:
            fail-fast: true
            matrix:
                runner: [ubuntu-24.04, linux-aarch64]
                kind: [alpine, debian]
                include:
                    - runner: ubuntu-24.04
                      arch: amd64
                    - runner: linux-aarch64
                      arch: arm64
        steps:
            - uses: actions/checkout@v4
            - uses: auguwu/git-tag-action@master
              id: tag
            - name: Get commit hash
              id: commit-hash
              run: echo "commit=$(git rev-parse --short=8 $GITHUB_SHA)" >> $GITHUB_OUTPUT

            - uses: docker/setup-buildx-action@v3
            - uses: docker/login-action@v3
              with:
                  registry: docker.noelware.org
                  username: noelbot
                  password: ${{secrets.REGISTRY_PASSWORD}}

            - uses: docker/metadata-action@v5
              id: meta
              with:
                  flavor: |
                      latest=true
                      suffix=${{matrix.kind == 'alpine' && 'alpine-'}}${{matrix.arch}}
                  tags: |
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                  images: |
                      docker.noelware.org/charted/server
                  labels: |
                      org.opencontainers.image.title=charted-server
                      org.opencontainers.image.description="üêª‚Äç‚ùÑÔ∏èüì¶ Free, open source, and reliable Helm Chart registry made in Rust"
                      org.opencontainers.image.version=${{steps.tag.outputs.version}}
                      org.opencontainers.image.revision=${{steps.commit-hash.outputs.commit}}
                      org.opencontainers.image.licenses=Apache-2.0
                      org.opencontainers.image.documentation=https://charts.noelware.org/docs/server/${{steps.tag.outputs.version}}
                      org.opencontainers.image.source=https://github.com/charted-dev/charted/tree/${{steps.commit-hash.outputs.commit}}
            - uses: docker/bake-action@v6
              with:
                  targets: ${{matrix.kind}}-${{matrix.arch == 'amd64' && 'x86_64' || 'aarch64'}}
                  files: |
                      ./docker-bake.hcl
                      cwd://${{steps.meta.outputs.bake-file}}
    manifests:
        name: 'Docker / Manifests'
        runs-on: ubuntu-latest
        needs: [docker]
        if: ${{github.repository == 'charted-dev/charted'}}
        steps:
            - uses: docker/setup-buildx-action@v3
            - uses: docker/login-action@v3
              with:
                  registry: docker.noelware.org
                  username: noelbot
                  password: ${{secrets.REGISTRY_PASSWORD}}

    #     steps:
    #         - uses: auguwu/git-tag-action@master
    #           id: tag

    #         - uses: docker/login-action@v3
    #           with:
    #               registry: docker.noelware.org
    #               username: noelbot
    #               password: ${{secrets.REGISTRY_PASSWORD}}

    #         - name: 'docker.noelware.org/charted/server:latest'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:latest
    #               inputs: docker.noelware.org/charted/server:latest-amd64,docker.noelware.org/charted/server:latest-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.version}}'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.version}}
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.major}}'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:alpine'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:alpine
    #               inputs: docker.noelware.org/charted/server:alpine-amd64,docker.noelware.org/charted/server:alpine-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-alpine'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-alpine
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-alpine-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.version}}-alpine-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.major}}.${{steps.tag.outputs.minor}}-alpine-arm64
    #               push: true

    #         - name: 'docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-alpine'
    #           uses: Noelware/docker-manifest-action@0.4.3
    #           with:
    #               images: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-alpine
    #               inputs: docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-alpine-amd64,docker.noelware.org/charted/server:${{steps.tag.outputs.major}}-alpine-arm64
    #               push: true
    sentry:
        name: Sentry
        runs-on: ubuntu-24.04
        if: ${{github.repository == 'charted-dev/charted'}}
        steps:
            - uses: auguwu/git-tag-action@master
              id: tag

            - uses: getsentry/action-release@v3
              env:
                  SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
                  SENTRY_PROJECT: charted-server
                  SENTRY_URL: https://sentry.noelware.org
              with:
                  environment: production
                  release: ${{steps.tag.outputs.version}}
