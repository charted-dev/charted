# ðŸ“¦ charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022-2023 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Linting and Unit Testing
on:
  workflow_dispatch: {}
  pull_request:
    types: [opened, synchronize]
    branches:
      - 'issue/gh-**'
      - 'feat/**'
      - nightly
      - main

    paths-ignore:
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'
  push:
    branches:
      - 'issue/gh-**'
      - 'feat/**'
      - nightly
      - main

    paths-ignore:
      - '.github/**'
      - '.husky/**'
      - '.vscode/**'
      - 'assets/**'
      - 'locales/**'
      - 'docker/**'
      - '.dockerignore'
      - '.eslintignore'
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - 'renovate.json'
jobs:
  spotless:
    name: Spotless [${{matrix.runner}}, Java ${{matrix.java-version}}]
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        java-version: [17, 19]
        runner: [windows-latest, ubuntu-latest, macos-latest, self-hosted]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Java ${{matrix.java-version}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{matrix.java-version}}
          distribution: temurin
          architecture: ${{matrix.runner == 'self-hosted' && 'aarch64' || 'amd64'}}

      # Node.js is required for Spotless to install Prettier
      - name: Setup Node.js v19x
        uses: actions/setup-node@v3
        with:
          node-version: 19.x
          architecture: ${{matrix.runner == 'self-hosted' && 'arm64' || 'x64'}}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Lint code-base with Spotless
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessCheck --no-daemon --scan

      - name: Compiles Kotlin source sets
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileKotlin --no-daemon --scan

      - name: Compiles Java source sets
        uses: gradle/gradle-build-action@v2
        with:
          arguments: compileJava --no-daemon --scan

      - name: Run unit and integration tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test --no-daemon --scan
  helm-plugin-ci:
    name: Helm Plugin CI [${{matrix.runner}}, ${{matrix.toolchain}}]
    runs-on: ${{matrix.runner}}
    strategy:
      matrix:
        runner: [self-hosted, ubuntu-latest]
        toolchain: [nightly, stable]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
          components: rustfmt, clippy

      # We need a Java installation so that the build script for the Helm Plugin can work.
      - name: Setup Java 19
        uses: actions/setup-java@v3
        with:
          java-version: 19
          distribution: temurin

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Check for compile errors
        working-directory: ./tools/helm-plugin
        run: cargo build
        env:
          CARGO_INCREMENTAL: 1

  # Clippy is disabled for now until further notice
  #      - name: Clippy
  #        uses: actions-rs/clippy-check@v1
  #        with:
  #          token: ${{secrets.GITHUB_TOKEN}}
  #          args: --all-features
  goci:
    name: ClickHouse Migrations CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-ch-migrations-1.19-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-ch-migrations-1.19-go-

      - name: Install dependencies
        working-directory: ./databases/clickhouse/migrations
        run: go mod download

      - name: Lint with golangci
        uses: golangci/golangci-lint-action@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          skip-cache: false
          working-directory: ./databases/clickhouse/migrations
          args: --issues-exit-code=1
          only-new-issues: false
          skip-pkg-cache: true
          skip-build-cache: true
