# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2025 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build binary composite
on:
    workflow_call:
        inputs:
            runner:
                type: string
                required: true
            target:
                type: string
                required: true
            cargoflags:
                type: string
                required: true
            rustflags:
                type: string
                required: true
            cross:
                type: boolean
                required: true
            ext:
                type: string
                required: true
            binary:
                type: string
                required: true
jobs:
    build:
        name: 'Build [${{matrix.runner}}: ${{matrix.target}}]'
        runs-on: ${{matrix.runner}}
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Get tag
              uses: auguwu/git-tag-action@master
              id: tag

            - name: Remove `rust-toolchain.toml`
              run: rm rust-toolchain.toml

            - name: Setup Rust toolchain
              uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: stable
                  components: clippy, rustfmt
                  target: ${{matrix.target}}

            - name: Install `cross`
              uses: taiki-e/cache-cargo-install-action@v2
              if: matrix.cross
              with:
                  tool: cross

            - name: Install `mold` on Linux
              if: matrix.runner == 'ubuntu-latest'
              uses: rui314/setup-mold@v1

            - name: Setup Rust cache
              uses: Swatinem/rust-cache@v2

            - name: Setup `VCPKG_ROOT` environment variable
              if: matrix.runner == 'windows-latest'
              id: vcpkg
              run: |
                  echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
                  echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

            - name: Setup vcpkg cache
              if: matrix.runner == 'windows-latest'
              uses: actions/cache@v4
              with:
                  key: vcpkg-cache
                  path: |
                      ${{steps.vcpkg.outputs.VCPKG_ROOT}}

            - name: Install OpenSSL on Windows with `vcpkg`
              if: matrix.runner == 'windows-latest'
              run: vcpkg install openssl:x64-windows-static-md

            - name: Install `protoc`
              uses: Noelware/setup-protoc@1.2.0
              with:
                  repo-token: ${{github.token}}

            - name: Build!
              run: ./scripts/release${{matrix.runner == 'windows-latest' && '.ps1' || '.sh'}}
              env:
                  BUILDTARGET: ${{matrix.target}}
                  BUILDFLAGS: ${{matrix.flags}}
                  BUILDARGS: ${{matrix.cargoflags}}
                  RUSTFLAGS: ${{matrix.rustflags}}
                  BINARY: ${{matrix.binary}}
                  CARGO: "${{matrix.cross && 'cross' || 'cargo'}}"
