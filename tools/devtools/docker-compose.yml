# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2023 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

x-healthchecks: &healthcheck
  start_period: 10s
  interval: 30s
  timeout: 60s
  retries: 10
x-container-defaults: &container
  restart: unless-stopped
  networks: [fluff]
version: "3.8"
services:
  redis:
    <<: *container
    container_name: charted_redis
    image: bitnami/redis:7.2.3
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./docker/redis:/bitnami/redis
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "redis-cli", "PING"]
  postgresql:
    <<: *container
    container_name: charted_postgresql
    image: bitnami/postgresql:15.5.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_LOG_TIMEZONE=America/Los_Angeles
      - POSTGRESQL_TIMEZONE=America/Los_Angeles
      - POSTGRESQL_PASSWORD=charted
      - POSTGRESQL_USERNAME=charted
      - POSTGRESQL_DATABASE=charted
    volumes:
      - ./docker/postgresql:/bitnami/postgresql
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "pg_isready", "-U", "charted"]
  elasticsearch:
    <<: *container
    container_name: charted_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"
    volumes:
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data
      - type: bind
        source: ./docker/elasticsearch/config
        target: /usr/share/elasticsearch/config
    profiles: [elasticsearch]
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "curl", "-fsu", "elastic:changeme", "http://localhost:9200/_cluster/health?wait_for_status=green&timeout=1s"]
  meilisearch:
    <<: *container
    container_name: charted_meilisearch
    image: getmeili/meilisearch:v1.5
    profiles: [meilisearch]
    ports:
      - "7700:7700"
    environment:
      - MEILI_MASTER_KEY=${MASTER_KEY}
    healthcheck:
      <<: *healthcheck
      test: ["CMD", "curl", "-fs", "http://localhost:7700/health"]
networks:
  fluff:
    external: true
    driver: bridge
