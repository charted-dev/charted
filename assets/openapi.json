{
    "openapi": "3.1.0",
    "info": {
        "title": "charted-server",
        "description": "üêª‚Äç‚ùÑÔ∏èüì¶ Free, open-source way to distribute Helm charts across the world",
        "termsOfService": "https://charts.noelware.org/legal/tos",
        "contact": {
            "name": "Noelware, LLC.",
            "url": "https://noelware.org",
            "email": "team@noelware.org"
        },
        "license": {
            "name": "Apache 2.0 License",
            "identifier": "Apache-2.0"
        },
        "version": "0.1.0"
    },
    "servers": [
        {
            "url": "https://charts.noelware.org/api/v{version}",
            "description": "Production Server",
            "variables": {
                "version": {
                    "default": "1",
                    "description": "Revision of the HTTP specification",
                    "enum": ["1"]
                }
            }
        }
    ],
    "paths": {},
    "components": {
        "responses": {
            "ApiErrorResponse": {
                "description": "API response that is returned during a error path",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    "description": "List of errors that happened. This can be represented as a stacktrace"
                                },
                                "success": {
                                    "type": "boolean",
                                    "description": "Whether if this request was a success or not (always false)",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            },
            "ApiKeyResponse": {
                "description": "Response datatype for object `ApiKeyResponse`.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": ["success"],
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/ApiKey"
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    "description": "The error trace for the request that was processed by\nthe API server.\n\nThe `success` field will always be set to `false` when\nthe `errors` field is avaliable."
                                },
                                "success": {
                                    "type": "boolean",
                                    "description": "Was the request that was processed a success?"
                                }
                            }
                        }
                    }
                }
            },
            "EmptyApiResponse": {
                "description": "API response that doesn't contain any data",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "success": {
                                    "type": "boolean",
                                    "description": "Whether if this request was a success"
                                }
                            }
                        }
                    }
                }
            },
            "OrganizationResponse": {
                "description": "Response datatype for object `OrganizationResponse`.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": ["success"],
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    "description": "The error trace for the request that was processed by\nthe API server.\n\nThe `success` field will always be set to `false` when\nthe `errors` field is avaliable."
                                },
                                "success": {
                                    "type": "boolean",
                                    "description": "Was the request that was processed a success?"
                                }
                            }
                        }
                    }
                }
            },
            "RepositoryResponse": {
                "description": "Response datatype for object `RepositoryResponse`.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": ["success"],
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/Repository"
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    "description": "The error trace for the request that was processed by\nthe API server.\n\nThe `success` field will always be set to `false` when\nthe `errors` field is avaliable."
                                },
                                "success": {
                                    "type": "boolean",
                                    "description": "Was the request that was processed a success?"
                                }
                            }
                        }
                    }
                }
            },
            "UserResponse": {
                "description": "Response datatype for object `UserResponse`.",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "required": ["success"],
                            "properties": {
                                "data": {
                                    "$ref": "#/components/schemas/User"
                                },
                                "errors": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Error"
                                    },
                                    "description": "The error trace for the request that was processed by\nthe API server.\n\nThe `success` field will always be set to `false` when\nthe `errors` field is avaliable."
                                },
                                "success": {
                                    "type": "boolean",
                                    "description": "Was the request that was processed a success?"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Endpoints that create, modify, delete, or fetch user metadata"
        },
        {
            "name": "Users/Avatars",
            "description": "Endpoints that can create, modify, delete, and fetch user avatars"
        },
        {
            "name": "Users/Sessions",
            "description": "Endpoints that allow to login as a user and get an access token."
        },
        {
            "name": "API Keys",
            "description": "Endpoints that allow authenticating users with a secret key that is trusted by the server."
        },
        {
            "name": "Repositories",
            "description": "Endpoints that create, modify, delete, or fetch user/organization repository metadata"
        },
        {
            "name": "Repository/Releases",
            "description": "Endpoints that create, modify, delete, or fetch user/organization repository releases"
        },
        {
            "name": "Repository/Members",
            "description": "Endpoints that create, modify, delete, or fetch user/organization repository members"
        },
        {
            "name": "Organizations",
            "description": "Endpoints that create, modify, delete, or fetch organization metadata"
        },
        {
            "name": "Organization/Members",
            "description": "Endpoints that create, modify, delete, or fetch organization members"
        }
    ],
    "externalDocs": {
        "url": "https://charts.noelware.org/docs/server/latest",
        "description": null
    }
}
