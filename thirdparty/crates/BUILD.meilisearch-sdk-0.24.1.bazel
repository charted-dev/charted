###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################

load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT
# ])

rust_library(
    name = "meilisearch_sdk",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
        "isahc-static-curl",
    ],
    crate_root = "src/lib.rs",
    edition = "2018",
    proc_macro_deps = [
        "@crate_index__async-trait-0.1.73//:async_trait",
        "@crate_index__meilisearch-index-setting-macro-0.24.1//:meilisearch_index_setting_macro",
    ],
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=meilisearch-sdk",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.24.1",
    deps = [
        "@crate_index__either-1.9.0//:either",
        "@crate_index__iso8601-0.6.1//:iso8601",
        "@crate_index__jsonwebtoken-8.3.0//:jsonwebtoken",
        "@crate_index__log-0.4.20//:log",
        "@crate_index__serde-1.0.185//:serde",
        "@crate_index__serde_json-1.0.105//:serde_json",
        "@crate_index__thiserror-1.0.47//:thiserror",
        "@crate_index__time-0.3.25//:time",
        "@crate_index__yaup-0.2.1//:yaup",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@crate_index__futures-0.3.28//:futures",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__futures-io-0.3.28//:futures_io",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__isahc-1.7.2//:isahc",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__uuid-1.4.1//:uuid",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__futures-0.3.28//:futures",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__futures-io-0.3.28//:futures_io",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__isahc-1.7.2//:isahc",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__uuid-1.4.1//:uuid",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@crate_index__futures-0.3.28//:futures",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__futures-io-0.3.28//:futures_io",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__isahc-1.7.2//:isahc",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__uuid-1.4.1//:uuid",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@crate_index__futures-0.3.28//:futures",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__futures-io-0.3.28//:futures_io",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__isahc-1.7.2//:isahc",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__uuid-1.4.1//:uuid",  # cfg(not(target_arch = "wasm32"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__futures-0.3.28//:futures",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__futures-io-0.3.28//:futures_io",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__isahc-1.7.2//:isahc",  # cfg(not(target_arch = "wasm32"))
            "@crate_index__uuid-1.4.1//:uuid",  # cfg(not(target_arch = "wasm32"))
        ],
        "//conditions:default": [],
    }),
)
