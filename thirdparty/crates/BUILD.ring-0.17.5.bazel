###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "ring",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "std",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=ring",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.17.5",
    deps = [
        "@crate_index__getrandom-0.2.10//:getrandom",
        "@crate_index__ring-0.17.5//:build_script_build",
        "@crate_index__untrusted-0.9.0//:untrusted",
    ] + select({
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__libc-0.2.149//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crate_index__spin-0.9.8//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux", target_os = "windows"))))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@crate_index__spin-0.9.8//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux", target_os = "windows"))))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@crate_index__spin-0.9.8//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux", target_os = "windows"))))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__libc-0.2.149//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crate_index__spin-0.9.8//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux", target_os = "windows"))))
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "ring_build_script",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "std",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2021",
    links = "ring_core_0_17_5",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=ring",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.17.5",
    visibility = ["//visibility:private"],
    deps = [
        "@crate_index__cc-1.0.83//:cc",
    ],
)

alias(
    name = "build_script_build",
    actual = "ring_build_script",
    tags = ["manual"],
)
