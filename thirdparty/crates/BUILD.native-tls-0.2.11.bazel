###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT/Apache-2.0
# ])

rust_library(
    name = "native_tls",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_root = "src/lib.rs",
    edition = "2015",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=native-tls",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.2.11",
    deps = [
        "@crate_index__native-tls-0.2.11//:build_script_build",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@crate_index__lazy_static-1.4.0//:lazy_static",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__libc-0.2.151//:libc",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__security-framework-2.9.2//:security_framework",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__security-framework-sys-2.9.1//:security_framework_sys",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__tempfile-3.9.0//:tempfile",  # cfg(any(target_os = "macos", target_os = "ios"))
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__log-0.4.20//:log",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-0.10.61//:openssl",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-probe-0.1.5//:openssl_probe",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@crate_index__lazy_static-1.4.0//:lazy_static",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__libc-0.2.151//:libc",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__security-framework-2.9.2//:security_framework",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__security-framework-sys-2.9.1//:security_framework_sys",  # cfg(any(target_os = "macos", target_os = "ios"))
            "@crate_index__tempfile-3.9.0//:tempfile",  # cfg(any(target_os = "macos", target_os = "ios"))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@crate_index__schannel-0.1.22//:schannel",  # cfg(target_os = "windows")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__log-0.4.20//:log",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-0.10.61//:openssl",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-probe-0.1.5//:openssl_probe",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "native-tls_build_script",
    srcs = glob(["**/*.rs"]),
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2015",
    link_deps = select({
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
        ],
        "//conditions:default": [],
    }),
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=native-tls",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.2.11",
    visibility = ["//visibility:private"],
)

alias(
    name = "build_script_build",
    actual = "native-tls_build_script",
    tags = ["manual"],
)
