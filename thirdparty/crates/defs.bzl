###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

def _flatten_dependency_maps(all_dependency_maps):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a Bazel package
        # name of the workspace this file is defined in.
        "workspace_member_package": {

            # Not all dependencies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}

    for workspace_deps_map in all_dependency_maps:
        for pkg_name, conditional_deps_map in workspace_deps_map.items():
            if pkg_name not in dependencies:
                non_frozen_map = dict()
                for key, values in conditional_deps_map.items():
                    non_frozen_map.update({key: dict(values.items())})
                dependencies.setdefault(pkg_name, non_frozen_map)
                continue

            for condition, deps_map in conditional_deps_map.items():
                # If the condition has not been recorded, do so and continue
                if condition not in dependencies[pkg_name]:
                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))
                    continue

                # Alert on any miss-matched dependencies
                inconsistent_entries = []
                for crate_name, crate_label in deps_map.items():
                    existing = dependencies[pkg_name][condition].get(crate_name)
                    if existing and existing != crate_label:
                        inconsistent_entries.append((crate_name, existing, crate_label))
                    dependencies[pkg_name][condition].update({crate_name: crate_label})

    return dependencies

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES,
        _NORMAL_DEV_DEPENDENCIES,
        _PROC_MACRO_DEPENDENCIES,
        _PROC_MACRO_DEV_DEPENDENCIES,
        _BUILD_DEPENDENCIES,
        _BUILD_PROC_MACRO_DEPENDENCIES,
    ]).pop(package_name, {})

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)
    if normal_dev:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)
    if proc_macro:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)
    if proc_macro_dev:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)
    if build:
        all_dependency_maps.append(_BUILD_DEPENDENCIES)
    if build_proc_macro:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)

    # Default to always using normal dependencies
    if not all_dependency_maps:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)

    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)

    if not dependencies:
        if dependencies == None:
            fail("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")
        else:
            return []

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    for condition, deps in dependencies.items():
        crate_deps += selects.with_or({
            tuple(_CONDITIONS[condition]): deps.values(),
            "//conditions:default": [],
        })

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normal dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal:
        all_aliases_maps.append(_NORMAL_ALIASES)
    if normal_dev:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES)
    if proc_macro:
        all_aliases_maps.append(_PROC_MACRO_ALIASES)
    if proc_macro_dev:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)
    if build:
        all_aliases_maps.append(_BUILD_ALIASES)
    if build_proc_macro:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)

    # Default to always using normal aliases
    if not all_aliases_maps:
        all_aliases_maps.append(_NORMAL_ALIASES)
        all_aliases_maps.append(_PROC_MACRO_ALIASES)

    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)

    if not aliases:
        return dict()

    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not len(aliases.keys()) == 1:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": dict(common_items)}
    for condition, deps in aliases.items():
        condition_triples = _CONDITIONS[condition]
        for triple in condition_triples:
            if triple in crate_aliases:
                crate_aliases[triple].update(deps)
            else:
                crate_aliases.update({triple: dict(deps.items() + common_items)})

    return select(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "cli": {
        _COMMON_CONDITION: {
            "ansi_term": "@crate_index__ansi_term-0.12.1//:ansi_term",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "clap": "@crate_index__clap-4.3.23//:clap",
            "clap_complete": "@crate_index__clap_complete-4.3.2//:clap_complete",
            "color-eyre": "@crate_index__color-eyre-0.6.2//:color_eyre",
            "dotenv": "@crate_index__dotenv-0.15.0//:dotenv",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "mimalloc": "@crate_index__mimalloc-0.1.37//:mimalloc",
            "num_cpus": "@crate_index__num_cpus-1.16.0//:num_cpus",
            "promptly": "@crate_index__promptly-0.3.1//:promptly",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "serde_yaml": "@crate_index__serde_yaml-0.9.25//:serde_yaml",
            "simple_tables": "@crate_index__simple_tables-0.3.0//:simple_tables",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "sysinfo": "@crate_index__sysinfo-0.29.8//:sysinfo",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "tracing-subscriber": "@crate_index__tracing-subscriber-0.3.17//:tracing_subscriber",
        },
    },
    "crates/avatars": {
        _COMMON_CONDITION: {
            "bytes": "@crate_index__bytes-1.4.0//:bytes",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "remi-core": "@crate_index__remi-core-0.4.0//:remi_core",
            "reqwest": "@crate_index__reqwest-0.11.18//:reqwest",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/common": {
        _COMMON_CONDITION: {
            "argon2": "@crate_index__argon2-0.5.1//:argon2",
            "axum": "@crate_index__axum-0.6.20//:axum",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "hex": "@crate_index__hex-0.4.3//:hex",
            "humantime": "@crate_index__humantime-2.1.0//:humantime",
            "md-5": "@crate_index__md-5-0.10.5//:md5",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "rand": "@crate_index__rand-0.8.5//:rand",
            "regex": "@crate_index__regex-1.9.3//:regex",
            "semver": "@crate_index__semver-1.0.18//:semver",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "thiserror": "@crate_index__thiserror-1.0.47//:thiserror",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "utoipa": "@crate_index__utoipa-3.5.0//:utoipa",
            "validator": "@crate_index__validator-0.16.1//:validator",
        },
    },
    "crates/config": {
        _COMMON_CONDITION: {
            "aws-sdk-s3": "@crate_index__aws-sdk-s3-0.28.0//:aws_sdk_s3",
            "base64": "@crate_index__base64-0.21.2//:base64",
            "clap": "@crate_index__clap-4.3.23//:clap",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "lazy_static": "@crate_index__lazy_static-1.4.0//:lazy_static",
            "merge-struct": "@crate_index__merge-struct-0.1.0//:merge_struct",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "regex": "@crate_index__regex-1.9.3//:regex",
            "remi-fs": "@crate_index__remi-fs-0.4.0//:remi_fs",
            "remi-s3": "@crate_index__remi-s3-0.4.0//:remi_s3",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_yaml": "@crate_index__serde_yaml-0.9.25//:serde_yaml",
            "thiserror": "@crate_index__thiserror-1.0.47//:thiserror",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/database": {
        _COMMON_CONDITION: {
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "sentry": "@crate_index__sentry-0.31.5//:sentry",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
        _COMMON_CONDITION: {
            "axum": "@crate_index__axum-0.6.20//:axum",
            "bytes": "@crate_index__bytes-1.4.0//:bytes",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "flate2": "@crate_index__flate2-1.0.27//:flate2",
            "itertools": "@crate_index__itertools-0.11.0//:itertools",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "regex": "@crate_index__regex-1.9.3//:regex",
            "remi-core": "@crate_index__remi-core-0.4.0//:remi_core",
            "semver": "@crate_index__semver-1.0.18//:semver",
            "sentry": "@crate_index__sentry-0.31.5//:sentry",
            "serde_yaml": "@crate_index__serde_yaml-0.9.25//:serde_yaml",
            "tar": "@crate_index__tar-0.4.40//:tar",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/logging": {
        _COMMON_CONDITION: {
            "ansi_term": "@crate_index__ansi_term-0.12.1//:ansi_term",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "sentry-tracing": "@crate_index__sentry-tracing-0.31.5//:sentry_tracing",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "tracing-log": "@crate_index__tracing-log-0.1.3//:tracing_log",
            "tracing-subscriber": "@crate_index__tracing-subscriber-0.3.17//:tracing_subscriber",
        },
    },
    "crates/metrics": {
        _COMMON_CONDITION: {
            "dyn-clone": "@crate_index__dyn-clone-1.0.13//:dyn_clone",
            "erased-serde": "@crate_index__erased-serde-0.3.31//:erased_serde",
            "prometheus-client": "@crate_index__prometheus-client-0.21.2//:prometheus_client",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
        },
    },
    "crates/openapi": {
        _COMMON_CONDITION: {
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "utoipa": "@crate_index__utoipa-3.5.0//:utoipa",
        },
    },
    "crates/proc-macros": {
        _COMMON_CONDITION: {
            "axum": "@crate_index__axum-0.6.20//:axum",
            "heck": "@crate_index__heck-0.4.1//:heck",
            "proc-macro2": "@crate_index__proc-macro2-1.0.66//:proc_macro2",
            "quote": "@crate_index__quote-1.0.33//:quote",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "syn": "@crate_index__syn-2.0.29//:syn",
            "utoipa": "@crate_index__utoipa-3.5.0//:utoipa",
        },
    },
    "crates/redis": {
        _COMMON_CONDITION: {
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "redis": "@crate_index__redis-0.23.2//:redis",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/search": {
        _COMMON_CONDITION: {
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "serde": "@crate_index__serde-1.0.186//:serde",
        },
    },
    "crates/search/elasticsearch": {
        _COMMON_CONDITION: {
            "elasticsearch": "@crate_index__elasticsearch-8.5.0-alpha.1//:elasticsearch",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "url": "@crate_index__url-2.4.0//:url",
        },
    },
    "crates/search/meilisearch": {
        _COMMON_CONDITION: {
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "meilisearch-sdk": "@crate_index__meilisearch-sdk-0.24.1//:meilisearch_sdk",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
        },
    },
    "crates/sessions": {
        _COMMON_CONDITION: {
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "redis": "@crate_index__redis-0.23.2//:redis",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tokio-util": "@crate_index__tokio-util-0.7.8//:tokio_util",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "utoipa": "@crate_index__utoipa-3.5.0//:utoipa",
            "uuid": "@crate_index__uuid-1.4.1//:uuid",
        },
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
        _COMMON_CONDITION: {
            "argon2": "@crate_index__argon2-0.5.1//:argon2",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "jsonwebtoken": "@crate_index__jsonwebtoken-8.3.0//:jsonwebtoken",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "sentry": "@crate_index__sentry-0.31.5//:sentry",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "uuid": "@crate_index__uuid-1.4.1//:uuid",
        },
    },
    "crates/storage": {
        _COMMON_CONDITION: {
            "bytes": "@crate_index__bytes-1.4.0//:bytes",
            "remi-core": "@crate_index__remi-core-0.4.0//:remi_core",
            "remi-fs": "@crate_index__remi-fs-0.4.0//:remi_fs",
            "remi-s3": "@crate_index__remi-s3-0.4.0//:remi_s3",
            "serde": "@crate_index__serde-1.0.186//:serde",
        },
    },
    "server": {
        _COMMON_CONDITION: {
            "ansi_term": "@crate_index__ansi_term-0.12.1//:ansi_term",
            "argon2": "@crate_index__argon2-0.5.1//:argon2",
            "axum": "@crate_index__axum-0.6.20//:axum",
            "base64": "@crate_index__base64-0.21.2//:base64",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "erased-serde": "@crate_index__erased-serde-0.3.31//:erased_serde",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "futures-util": "@crate_index__futures-util-0.3.28//:futures_util",
            "jsonwebtoken": "@crate_index__jsonwebtoken-8.3.0//:jsonwebtoken",
            "mime": "@crate_index__mime-0.3.17//:mime",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "prometheus-client": "@crate_index__prometheus-client-0.21.2//:prometheus_client",
            "remi-core": "@crate_index__remi-core-0.4.0//:remi_core",
            "rust-embed": "@crate_index__rust-embed-8.0.0//:rust_embed",
            "sentry": "@crate_index__sentry-0.31.5//:sentry",
            "sentry-eyre": "@crate_index__sentry-eyre-0.1.0//:sentry_eyre",
            "sentry-tower": "@crate_index__sentry-tower-0.31.5//:sentry_tower",
            "sentry-tracing": "@crate_index__sentry-tracing-0.31.5//:sentry_tracing",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "serde_path_to_error": "@crate_index__serde_path_to_error-0.1.14//:serde_path_to_error",
            "serde_yaml": "@crate_index__serde_yaml-0.9.25//:serde_yaml",
            "sqlx": "@crate_index__sqlx-0.7.1//:sqlx",
            "testcontainers": "@crate_index__testcontainers-0.14.0//:testcontainers",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tower": "@crate_index__tower-0.4.13//:tower",
            "tower-http": "@crate_index__tower-http-0.4.3//:tower_http",
            "tower-layer": "@crate_index__tower-layer-0.3.2//:tower_layer",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "tracing-log": "@crate_index__tracing-log-0.1.3//:tracing_log",
            "tracing-subscriber": "@crate_index__tracing-subscriber-0.3.17//:tracing_subscriber",
            "utoipa": "@crate_index__utoipa-3.5.0//:utoipa",
            "validator": "@crate_index__validator-0.16.1//:validator",
        },
    },
    "tools/devtools": {
        _COMMON_CONDITION: {
            "clap": "@crate_index__clap-4.3.23//:clap",
            "clap_complete": "@crate_index__clap_complete-4.3.2//:clap_complete",
            "color-eyre": "@crate_index__color-eyre-0.6.2//:color_eyre",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "itertools": "@crate_index__itertools-0.11.0//:itertools",
            "promptly": "@crate_index__promptly-0.3.1//:promptly",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "simple_tables": "@crate_index__simple_tables-0.3.0//:simple_tables",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "toml": "@crate_index__toml-0.7.6//:toml",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "tracing-subscriber": "@crate_index__tracing-subscriber-0.3.17//:tracing_subscriber",
            "which": "@crate_index__which-4.4.0//:which",
        },
    },
    "tools/helm-plugin": {
        _COMMON_CONDITION: {
            "ansi_term": "@crate_index__ansi_term-0.12.1//:ansi_term",
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "clap": "@crate_index__clap-4.3.23//:clap",
            "clap_complete": "@crate_index__clap_complete-4.3.2//:clap_complete",
            "color-eyre": "@crate_index__color-eyre-0.6.2//:color_eyre",
            "dirs": "@crate_index__dirs-5.0.1//:dirs",
            "dotenv": "@crate_index__dotenv-0.15.0//:dotenv",
            "eyre": "@crate_index__eyre-0.6.8//:eyre",
            "once_cell": "@crate_index__once_cell-1.18.0//:once_cell",
            "reqwest": "@crate_index__reqwest-0.11.18//:reqwest",
            "serde": "@crate_index__serde-1.0.186//:serde",
            "serde_json": "@crate_index__serde_json-1.0.105//:serde_json",
            "serde_yaml": "@crate_index__serde_yaml-0.9.25//:serde_yaml",
            "sysinfo": "@crate_index__sysinfo-0.29.8//:sysinfo",
            "tokio": "@crate_index__tokio-1.32.0//:tokio",
            "tracing": "@crate_index__tracing-0.1.37//:tracing",
            "tracing-subscriber": "@crate_index__tracing-subscriber-0.3.17//:tracing_subscriber",
            "url": "@crate_index__url-2.4.0//:url",
            "which": "@crate_index__which-4.4.0//:which",
        },
    },
}

_NORMAL_ALIASES = {
    "cli": {
        _COMMON_CONDITION: {
        },
    },
    "crates/avatars": {
        _COMMON_CONDITION: {
        },
    },
    "crates/common": {
        _COMMON_CONDITION: {
        },
    },
    "crates/config": {
        _COMMON_CONDITION: {
        },
    },
    "crates/database": {
        _COMMON_CONDITION: {
        },
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
        _COMMON_CONDITION: {
        },
    },
    "crates/logging": {
        _COMMON_CONDITION: {
        },
    },
    "crates/metrics": {
        _COMMON_CONDITION: {
        },
    },
    "crates/openapi": {
        _COMMON_CONDITION: {
        },
    },
    "crates/proc-macros": {
        _COMMON_CONDITION: {
        },
    },
    "crates/redis": {
        _COMMON_CONDITION: {
        },
    },
    "crates/search": {
        _COMMON_CONDITION: {
        },
    },
    "crates/search/elasticsearch": {
        _COMMON_CONDITION: {
        },
    },
    "crates/search/meilisearch": {
        _COMMON_CONDITION: {
        },
    },
    "crates/sessions": {
        _COMMON_CONDITION: {
        },
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
        _COMMON_CONDITION: {
        },
    },
    "crates/storage": {
        _COMMON_CONDITION: {
        },
    },
    "server": {
        _COMMON_CONDITION: {
        },
    },
    "tools/devtools": {
        _COMMON_CONDITION: {
        },
    },
    "tools/helm-plugin": {
        _COMMON_CONDITION: {
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_NORMAL_DEV_ALIASES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "cli": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/avatars": {
    },
    "crates/common": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
            "paste": "@crate_index__paste-1.0.14//:paste",
        },
    },
    "crates/config": {
        _COMMON_CONDITION: {
            "paste": "@crate_index__paste-1.0.14//:paste",
        },
    },
    "crates/database": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
        _COMMON_CONDITION: {
            "async-recursion": "@crate_index__async-recursion-1.0.4//:async_recursion",
        },
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
        _COMMON_CONDITION: {
            "async-recursion": "@crate_index__async-recursion-1.0.4//:async_recursion",
        },
    },
    "crates/search": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/search/elasticsearch": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/search/meilisearch": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/sessions": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "crates/storage": {
    },
    "server": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
            "paste": "@crate_index__paste-1.0.14//:paste",
        },
    },
    "tools/devtools": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
    "tools/helm-plugin": {
        _COMMON_CONDITION: {
            "async-trait": "@crate_index__async-trait-0.1.73//:async_trait",
        },
    },
}

_PROC_MACRO_ALIASES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_BUILD_DEPENDENCIES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
        _COMMON_CONDITION: {
            "chrono": "@crate_index__chrono-0.4.26//:chrono",
            "rustc_version": "@crate_index__rustc_version-0.4.0//:rustc_version",
        },
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_BUILD_ALIASES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
        _COMMON_CONDITION: {
        },
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "cli": {
    },
    "crates/avatars": {
    },
    "crates/common": {
    },
    "crates/config": {
    },
    "crates/database": {
    },
    "crates/emails": {
    },
    "crates/helm-charts": {
    },
    "crates/logging": {
    },
    "crates/metrics": {
    },
    "crates/openapi": {
    },
    "crates/proc-macros": {
    },
    "crates/redis": {
    },
    "crates/search": {
    },
    "crates/search/elasticsearch": {
    },
    "crates/search/meilisearch": {
    },
    "crates/sessions": {
    },
    "crates/sessions/integrations": {
    },
    "crates/sessions/integrations/github": {
    },
    "crates/sessions/ldap": {
    },
    "crates/sessions/local": {
    },
    "crates/storage": {
    },
    "server": {
    },
    "tools/devtools": {
    },
    "tools/helm-plugin": {
    },
}

_CONDITIONS = {
    "aarch64-apple-darwin": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "aarch64-linux-android": [],
    "aarch64-pc-windows-gnullvm": [],
    "aarch64-unknown-linux-gnu": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(any(target_os = \"android\", target_os = \"linux\"), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": [],
    "cfg(all(not(rustix_use_libc), not(miri), target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(not(windows), any(rustix_use_libc, miri, not(all(target_os = \"linux\", target_endian = \"little\", any(target_arch = \"arm\", all(target_arch = \"aarch64\", target_pointer_width = \"64\"), target_arch = \"riscv64\", all(rustix_use_experimental_asm, target_arch = \"powerpc64\"), all(rustix_use_experimental_asm, target_arch = \"mips\"), all(rustix_use_experimental_asm, target_arch = \"mips32r6\"), all(rustix_use_experimental_asm, target_arch = \"mips64\"), all(rustix_use_experimental_asm, target_arch = \"mips64r6\"), target_arch = \"x86\", all(target_arch = \"x86_64\", target_pointer_width = \"64\")))))))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(all(target_arch = \"aarch64\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"aarch64\", target_os = \"linux\"))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu"],
    "cfg(all(target_arch = \"aarch64\", target_vendor = \"apple\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin"],
    "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))": [],
    "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))": [],
    "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"gnu\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86\", target_env = \"msvc\", not(windows_raw_dylib)))": [],
    "cfg(all(target_arch = \"x86_64\", target_env = \"gnu\", not(target_abi = \"llvm\"), not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(all(target_arch = \"x86_64\", target_env = \"msvc\", not(windows_raw_dylib)))": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(all(unix, not(target_os = \"macos\")))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"aarch64\", target_arch = \"x86\", target_arch = \"x86_64\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"aarch64\", target_arch = \"x86_64\", target_arch = \"x86\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))": ["@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", all(any(target_arch = \"aarch64\", target_arch = \"arm\"), any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"android\", target_os = \"linux\"))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))": [],
    "cfg(any(target_os = \"macos\", target_os = \"ios\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(any(unix, target_os = \"fuchsia\", target_os = \"vxworks\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(unix, target_os = \"redox\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(unix, target_os = \"wasi\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(any(windows, target_os = \"linux\", target_os = \"android\"))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(all(target_arch = \"arm\", target_os = \"none\")))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(any(target_os = \"unknown\", target_arch = \"wasm32\")))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(any(target_os = \"windows\", target_os = \"macos\", target_os = \"ios\")))": ["@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(any(windows, target_os = \"hermit\", target_os = \"unknown\")))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_arch = \"wasm32\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_family = \"wasm\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(target_os = \"redox\"))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-pc-windows-msvc", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(not(windows))": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(target_arch = \"wasm32\")": [],
    "cfg(target_env = \"msvc\")": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(target_feature = \"atomics\")": [],
    "cfg(target_os = \"android\")": [],
    "cfg(target_os = \"dragonfly\")": [],
    "cfg(target_os = \"haiku\")": [],
    "cfg(target_os = \"hermit\")": [],
    "cfg(target_os = \"macos\")": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:x86_64-apple-darwin"],
    "cfg(target_os = \"redox\")": [],
    "cfg(target_os = \"wasi\")": [],
    "cfg(target_os = \"windows\")": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "cfg(tokio_taskdump)": [],
    "cfg(tokio_unstable)": [],
    "cfg(tracing_unstable)": [],
    "cfg(unix)": ["@rules_rust//rust/platform:aarch64-apple-darwin", "@rules_rust//rust/platform:aarch64-unknown-linux-gnu", "@rules_rust//rust/platform:x86_64-apple-darwin", "@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "i686-pc-windows-gnu": [],
    "x86_64-apple-darwin": ["@rules_rust//rust/platform:x86_64-apple-darwin"],
    "x86_64-pc-windows-gnu": [],
    "x86_64-pc-windows-gnullvm": [],
    "x86_64-pc-windows-msvc": ["@rules_rust//rust/platform:x86_64-pc-windows-msvc"],
    "x86_64-unknown-linux-gnu": ["@rules_rust//rust/platform:x86_64-unknown-linux-gnu"],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates"""
    maybe(
        http_archive,
        name = "crate_index__addr2line-0.20.0",
        sha256 = "f4fa78e18c64fce05e902adecd7a5eed15a5e0a3439f7b0e169f0252214865e3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/addr2line/0.20.0/download"],
        strip_prefix = "addr2line-0.20.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.addr2line-0.20.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__adler-1.0.2",
        sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/adler/1.0.2/download"],
        strip_prefix = "adler-1.0.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.adler-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ahash-0.8.3",
        sha256 = "2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ahash/0.8.3/download"],
        strip_prefix = "ahash-0.8.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ahash-0.8.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aho-corasick-1.0.4",
        sha256 = "6748e8def348ed4d14996fa801f4122cd763fff530258cdc03f64b25f89d3a5a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aho-corasick/1.0.4/download"],
        strip_prefix = "aho-corasick-1.0.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aho-corasick-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__allocator-api2-0.2.16",
        sha256 = "0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/allocator-api2/0.2.16/download"],
        strip_prefix = "allocator-api2-0.2.16",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.allocator-api2-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__android-tzdata-0.1.1",
        sha256 = "e999941b234f3131b00bc13c22d06e8c5ff726d1b6318ac7eb276997bbb4fef0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/android-tzdata/0.1.1/download"],
        strip_prefix = "android-tzdata-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.android-tzdata-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__android_system_properties-0.1.5",
        sha256 = "819e7219dbd41043ac279b19830f2efc897156490d7fd6ea916720117ee66311",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/android_system_properties/0.1.5/download"],
        strip_prefix = "android_system_properties-0.1.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.android_system_properties-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ansi_term-0.12.1",
        sha256 = "d52a9bb7ec0cf484c551830a7ce27bd20d67eac647e1befb56b0be4ee39a55d2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ansi_term/0.12.1/download"],
        strip_prefix = "ansi_term-0.12.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ansi_term-0.12.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__anstream-0.3.2",
        sha256 = "0ca84f3628370c59db74ee214b3263d58f9aadd9b4fe7e711fd87dc452b7f163",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anstream/0.3.2/download"],
        strip_prefix = "anstream-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.anstream-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__anstyle-1.0.1",
        sha256 = "3a30da5c5f2d5e72842e00bcb57657162cdabef0931f40e2deb9b4140440cecd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anstyle/1.0.1/download"],
        strip_prefix = "anstyle-1.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.anstyle-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__anstyle-parse-0.2.1",
        sha256 = "938874ff5980b03a87c5524b3ae5b59cf99b1d6bc836848df7bc5ada9643c333",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anstyle-parse/0.2.1/download"],
        strip_prefix = "anstyle-parse-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.anstyle-parse-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__anstyle-query-1.0.0",
        sha256 = "5ca11d4be1bab0c8bc8734a9aa7bf4ee8316d462a08c6ac5052f888fef5b494b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anstyle-query/1.0.0/download"],
        strip_prefix = "anstyle-query-1.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.anstyle-query-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__anstyle-wincon-1.0.2",
        sha256 = "c677ab05e09154296dd37acecd46420c17b9713e8366facafa8fc0885167cf4c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anstyle-wincon/1.0.2/download"],
        strip_prefix = "anstyle-wincon-1.0.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.anstyle-wincon-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__arc-swap-1.6.0",
        sha256 = "bddcadddf5e9015d310179a59bb28c4d4b9920ad0f11e8e14dbadf654890c9a6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/arc-swap/1.6.0/download"],
        strip_prefix = "arc-swap-1.6.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.arc-swap-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__argon2-0.5.1",
        sha256 = "b2e554a8638bdc1e4eae9984845306cc95f8a9208ba8d49c3859fd958b46774d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/argon2/0.5.1/download"],
        strip_prefix = "argon2-0.5.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.argon2-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__async-channel-1.9.0",
        sha256 = "81953c529336010edd6d8e358f886d9581267795c61b19475b71314bffa46d35",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-channel/1.9.0/download"],
        strip_prefix = "async-channel-1.9.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.async-channel-1.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__async-compression-0.4.1",
        sha256 = "62b74f44609f0f91493e3082d3734d98497e094777144380ea4db9f9905dd5b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-compression/0.4.1/download"],
        strip_prefix = "async-compression-0.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.async-compression-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__async-recursion-1.0.4",
        sha256 = "0e97ce7de6cf12de5d7226c73f5ba9811622f4db3a5b91b55c53e987e5f91cba",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-recursion/1.0.4/download"],
        strip_prefix = "async-recursion-1.0.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.async-recursion-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__async-trait-0.1.73",
        sha256 = "bc00ceb34980c03614e35a3a4e218276a0a824e911d07651cd0d858a51e8c0f0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-trait/0.1.73/download"],
        strip_prefix = "async-trait-0.1.73",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.async-trait-0.1.73.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__atoi-2.0.0",
        sha256 = "f28d99ec8bfea296261ca1af174f24225171fea9664ba9003cbebee704810528",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/atoi/2.0.0/download"],
        strip_prefix = "atoi-2.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.atoi-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__autocfg-1.1.0",
        sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/autocfg/1.1.0/download"],
        strip_prefix = "autocfg-1.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.autocfg-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-config-0.55.3",
        sha256 = "bcdcf0d683fe9c23d32cf5b53c9918ea0a500375a9fb20109802552658e576c9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-config/0.55.3/download"],
        strip_prefix = "aws-config-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-config-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-credential-types-0.55.3",
        sha256 = "1fcdb2f7acbc076ff5ad05e7864bdb191ca70a6fd07668dc3a1a8bcd051de5ae",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-credential-types/0.55.3/download"],
        strip_prefix = "aws-credential-types-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-credential-types-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-endpoint-0.55.3",
        sha256 = "8cce1c41a6cfaa726adee9ebb9a56fcd2bbfd8be49fd8a04c5e20fd968330b04",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-endpoint/0.55.3/download"],
        strip_prefix = "aws-endpoint-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-endpoint-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-http-0.55.3",
        sha256 = "aadbc44e7a8f3e71c8b374e03ecd972869eb91dd2bc89ed018954a52ba84bc44",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-http/0.55.3/download"],
        strip_prefix = "aws-http-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-http-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-sdk-s3-0.28.0",
        sha256 = "fba197193cbb4bcb6aad8d99796b2291f36fa89562ded5d4501363055b0de89f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-sdk-s3/0.28.0/download"],
        strip_prefix = "aws-sdk-s3-0.28.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-sdk-s3-0.28.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-sdk-sso-0.28.0",
        sha256 = "c8b812340d86d4a766b2ca73f740dfd47a97c2dff0c06c8517a16d88241957e4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-sdk-sso/0.28.0/download"],
        strip_prefix = "aws-sdk-sso-0.28.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-sdk-sso-0.28.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-sdk-sts-0.28.0",
        sha256 = "265fac131fbfc188e5c3d96652ea90ecc676a934e3174eaaee523c6cec040b3b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-sdk-sts/0.28.0/download"],
        strip_prefix = "aws-sdk-sts-0.28.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-sdk-sts-0.28.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-sig-auth-0.55.3",
        sha256 = "3b94acb10af0c879ecd5c7bdf51cda6679a0a4f4643ce630905a77673bfa3c61",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-sig-auth/0.55.3/download"],
        strip_prefix = "aws-sig-auth-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-sig-auth-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-sigv4-0.55.3",
        sha256 = "9d2ce6f507be68e968a33485ced670111d1cbad161ddbbab1e313c03d37d8f4c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-sigv4/0.55.3/download"],
        strip_prefix = "aws-sigv4-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-sigv4-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-async-0.55.3",
        sha256 = "13bda3996044c202d75b91afeb11a9afae9db9a721c6a7a427410018e286b880",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-async/0.55.3/download"],
        strip_prefix = "aws-smithy-async-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-async-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-checksums-0.55.3",
        sha256 = "07ed8b96d95402f3f6b8b57eb4e0e45ee365f78b1a924faf20ff6e97abf1eae6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-checksums/0.55.3/download"],
        strip_prefix = "aws-smithy-checksums-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-checksums-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-client-0.55.3",
        sha256 = "0a86aa6e21e86c4252ad6a0e3e74da9617295d8d6e374d552be7d3059c41cedd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-client/0.55.3/download"],
        strip_prefix = "aws-smithy-client-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-client-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-eventstream-0.55.3",
        sha256 = "460c8da5110835e3d9a717c61f5556b20d03c32a1dec57f8fc559b360f733bb8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-eventstream/0.55.3/download"],
        strip_prefix = "aws-smithy-eventstream-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-eventstream-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-http-0.55.3",
        sha256 = "2b3b693869133551f135e1f2c77cb0b8277d9e3e17feaf2213f735857c4f0d28",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-http/0.55.3/download"],
        strip_prefix = "aws-smithy-http-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-http-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-http-tower-0.55.3",
        sha256 = "3ae4f6c5798a247fac98a867698197d9ac22643596dc3777f0c76b91917616b9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-http-tower/0.55.3/download"],
        strip_prefix = "aws-smithy-http-tower-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-http-tower-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-json-0.55.3",
        sha256 = "23f9f42fbfa96d095194a632fbac19f60077748eba536eb0b9fecc28659807f8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-json/0.55.3/download"],
        strip_prefix = "aws-smithy-json-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-json-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-query-0.55.3",
        sha256 = "98819eb0b04020a1c791903533b638534ae6c12e2aceda3e6e6fba015608d51d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-query/0.55.3/download"],
        strip_prefix = "aws-smithy-query-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-query-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-types-0.55.3",
        sha256 = "16a3d0bf4f324f4ef9793b86a1701d9700fbcdbd12a846da45eed104c634c6e8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-types/0.55.3/download"],
        strip_prefix = "aws-smithy-types-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-types-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-smithy-xml-0.55.3",
        sha256 = "b1b9d12875731bd07e767be7baad95700c3137b56730ec9ddeedb52a5e5ca63b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-smithy-xml/0.55.3/download"],
        strip_prefix = "aws-smithy-xml-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-smithy-xml-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__aws-types-0.55.3",
        sha256 = "6dd209616cc8d7bfb82f87811a5c655dc97537f592689b18743bddf5dc5c4829",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aws-types/0.55.3/download"],
        strip_prefix = "aws-types-0.55.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.aws-types-0.55.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__axum-0.6.20",
        sha256 = "3b829e4e32b91e643de6eafe82b1d90675f5874230191a4ffbc1b336dec4d6bf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/axum/0.6.20/download"],
        strip_prefix = "axum-0.6.20",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.axum-0.6.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__axum-core-0.3.4",
        sha256 = "759fa577a247914fd3f7f76d62972792636412fbfd634cd452f6a385a74d2d2c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/axum-core/0.3.4/download"],
        strip_prefix = "axum-core-0.3.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.axum-core-0.3.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__axum-macros-0.3.8",
        sha256 = "cdca6a10ecad987bda04e95606ef85a5417dcaac1a78455242d72e031e2b6b62",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/axum-macros/0.3.8/download"],
        strip_prefix = "axum-macros-0.3.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.axum-macros-0.3.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__backtrace-0.3.68",
        sha256 = "4319208da049c43661739c5fade2ba182f09d1dc2299b32298d3a31692b17e12",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/backtrace/0.3.68/download"],
        strip_prefix = "backtrace-0.3.68",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.backtrace-0.3.68.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__base64-0.11.0",
        sha256 = "b41b7ea54a0c9d92199de89e20e58d49f02f8e699814ef3fdf266f6f748d15c7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64/0.11.0/download"],
        strip_prefix = "base64-0.11.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.base64-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__base64-0.13.1",
        sha256 = "9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64/0.13.1/download"],
        strip_prefix = "base64-0.13.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.base64-0.13.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__base64-0.21.2",
        sha256 = "604178f6c5c21f02dc555784810edfb88d34ac2c73b2eae109655649ee73ce3d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64/0.21.2/download"],
        strip_prefix = "base64-0.21.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.base64-0.21.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__base64-simd-0.8.0",
        sha256 = "339abbe78e73178762e23bea9dfd08e697eb3f3301cd4be981c0f78ba5859195",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64-simd/0.8.0/download"],
        strip_prefix = "base64-simd-0.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.base64-simd-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__base64ct-1.6.0",
        sha256 = "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64ct/1.6.0/download"],
        strip_prefix = "base64ct-1.6.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.base64ct-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bitflags-1.3.2",
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bitflags/1.3.2/download"],
        strip_prefix = "bitflags-1.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bitflags-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bitflags-2.4.0",
        sha256 = "b4682ae6287fcf752ecaabbfcc7b6f9b72aa33933dc23a554d853aea8eea8635",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bitflags/2.4.0/download"],
        strip_prefix = "bitflags-2.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bitflags-2.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__blake2-0.10.6",
        sha256 = "46502ad458c9a52b69d4d4d32775c788b7a1b85e8bc9d482d92250fc0e3f8efe",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/blake2/0.10.6/download"],
        strip_prefix = "blake2-0.10.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.blake2-0.10.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__block-buffer-0.10.4",
        sha256 = "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/block-buffer/0.10.4/download"],
        strip_prefix = "block-buffer-0.10.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.block-buffer-0.10.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bollard-0.11.1",
        sha256 = "c92fed694fd5a7468c971538351c61b9c115f1ae6ed411cd2800f0f299403a4b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bollard/0.11.1/download"],
        strip_prefix = "bollard-0.11.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bollard-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bollard-stubs-1.41.0",
        sha256 = "ed2f2e73fffe9455141e170fb9c1feb0ac521ec7e7dcd47a7cab72a658490fb8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bollard-stubs/1.41.0/download"],
        strip_prefix = "bollard-stubs-1.41.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bollard-stubs-1.41.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bumpalo-3.13.0",
        sha256 = "a3e2c3daef883ecc1b5d58c15adae93470a91d425f3532ba1695849656af3fc1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bumpalo/3.13.0/download"],
        strip_prefix = "bumpalo-3.13.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bumpalo-3.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__byteorder-1.4.3",
        sha256 = "14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/byteorder/1.4.3/download"],
        strip_prefix = "byteorder-1.4.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.byteorder-1.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bytes-1.4.0",
        sha256 = "89b2fd2a0dcf38d7971e2194b6b6eebab45ae01067456a7fd93d5547a61b70be",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bytes/1.4.0/download"],
        strip_prefix = "bytes-1.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bytes-1.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__bytes-utils-0.1.3",
        sha256 = "e47d3a8076e283f3acd27400535992edb3ba4b5bb72f8891ad8fbe7932a7d4b9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bytes-utils/0.1.3/download"],
        strip_prefix = "bytes-utils-0.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.bytes-utils-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__castaway-0.1.2",
        sha256 = "a2698f953def977c68f935bb0dfa959375ad4638570e969e2f1e9f433cbf1af6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/castaway/0.1.2/download"],
        strip_prefix = "castaway-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.castaway-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__cc-1.0.83",
        sha256 = "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cc/1.0.83/download"],
        strip_prefix = "cc-1.0.83",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.cc-1.0.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__cfg-if-1.0.0",
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cfg-if/1.0.0/download"],
        strip_prefix = "cfg-if-1.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.cfg-if-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__chrono-0.4.26",
        sha256 = "ec837a71355b28f6556dbd569b37b3f363091c0bd4b2e735674521b4c5fd9bc5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/chrono/0.4.26/download"],
        strip_prefix = "chrono-0.4.26",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.chrono-0.4.26.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clap-4.3.23",
        sha256 = "03aef18ddf7d879c15ce20f04826ef8418101c7e528014c3eeea13321047dca3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clap/4.3.23/download"],
        strip_prefix = "clap-4.3.23",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clap-4.3.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clap_builder-4.3.23",
        sha256 = "f8ce6fffb678c9b80a70b6b6de0aad31df727623a70fd9a842c30cd573e2fa98",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clap_builder/4.3.23/download"],
        strip_prefix = "clap_builder-4.3.23",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clap_builder-4.3.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clap_complete-4.3.2",
        sha256 = "5fc443334c81a804575546c5a8a79b4913b50e28d69232903604cada1de817ce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clap_complete/4.3.2/download"],
        strip_prefix = "clap_complete-4.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clap_complete-4.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clap_derive-4.3.12",
        sha256 = "54a9bb5758fc5dfe728d1019941681eccaf0cf8a4189b692a0ee2f2ecf90a050",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clap_derive/4.3.12/download"],
        strip_prefix = "clap_derive-4.3.12",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clap_derive-4.3.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clap_lex-0.5.0",
        sha256 = "2da6da31387c7e4ef160ffab6d5e7f00c42626fe39aea70a7b0f1773f7dd6c1b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clap_lex/0.5.0/download"],
        strip_prefix = "clap_lex-0.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clap_lex-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__clipboard-win-4.5.0",
        sha256 = "7191c27c2357d9b7ef96baac1773290d4ca63b24205b82a3fd8a0637afcf0362",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/clipboard-win/4.5.0/download"],
        strip_prefix = "clipboard-win-4.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.clipboard-win-4.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__color-eyre-0.6.2",
        sha256 = "5a667583cca8c4f8436db8de46ea8233c42a7d9ae424a82d338f2e4675229204",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/color-eyre/0.6.2/download"],
        strip_prefix = "color-eyre-0.6.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.color-eyre-0.6.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__color-spantrace-0.2.0",
        sha256 = "1ba75b3d9449ecdccb27ecbc479fdc0b87fa2dd43d2f8298f9bf0e59aacc8dce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/color-spantrace/0.2.0/download"],
        strip_prefix = "color-spantrace-0.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.color-spantrace-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__colorchoice-1.0.0",
        sha256 = "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/colorchoice/1.0.0/download"],
        strip_prefix = "colorchoice-1.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.colorchoice-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__combine-4.6.6",
        sha256 = "35ed6e9d84f0b51a7f52daf1c7d71dd136fd7a3f41a8462b8cdb8c78d920fad4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/combine/4.6.6/download"],
        strip_prefix = "combine-4.6.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.combine-4.6.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__concurrent-queue-2.2.0",
        sha256 = "62ec6771ecfa0762d24683ee5a32ad78487a3d3afdc0fb8cae19d2c5deb50b7c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/concurrent-queue/2.2.0/download"],
        strip_prefix = "concurrent-queue-2.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.concurrent-queue-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__const-oid-0.9.5",
        sha256 = "28c122c3980598d243d63d9a704629a2d748d101f278052ff068be5a4423ab6f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/const-oid/0.9.5/download"],
        strip_prefix = "const-oid-0.9.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.const-oid-0.9.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__convert_case-0.6.0",
        sha256 = "ec182b0ca2f35d8fc196cf3404988fd8b8c739a4d270ff118a398feb0cbec1ca",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/convert_case/0.6.0/download"],
        strip_prefix = "convert_case-0.6.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.convert_case-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__core-foundation-0.9.3",
        sha256 = "194a7a9e6de53fa55116934067c844d9d749312f75c6f6d0980e8c252f8c2146",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/core-foundation/0.9.3/download"],
        strip_prefix = "core-foundation-0.9.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.core-foundation-0.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__core-foundation-sys-0.8.4",
        sha256 = "e496a50fda8aacccc86d7529e2c1e0892dbd0f898a6b5645b5561b89c3210efa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/core-foundation-sys/0.8.4/download"],
        strip_prefix = "core-foundation-sys-0.8.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.core-foundation-sys-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__cpufeatures-0.2.9",
        sha256 = "a17b76ff3a4162b0b27f354a0c87015ddad39d35f9c0c36607a3bdd175dde1f1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cpufeatures/0.2.9/download"],
        strip_prefix = "cpufeatures-0.2.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.cpufeatures-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crc-3.0.1",
        sha256 = "86ec7a15cbe22e59248fc7eadb1907dab5ba09372595da4d73dd805ed4417dfe",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crc/3.0.1/download"],
        strip_prefix = "crc-3.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crc-3.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crc-catalog-2.2.0",
        sha256 = "9cace84e55f07e7301bae1c519df89cdad8cc3cd868413d3fdbdeca9ff3db484",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crc-catalog/2.2.0/download"],
        strip_prefix = "crc-catalog-2.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crc-catalog-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crc32c-0.6.4",
        sha256 = "d8f48d60e5b4d2c53d5c2b1d8a58c849a70ae5e5509b08a48d047e3b65714a74",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crc32c/0.6.4/download"],
        strip_prefix = "crc32c-0.6.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crc32c-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crc32fast-1.3.2",
        sha256 = "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crc32fast/1.3.2/download"],
        strip_prefix = "crc32fast-1.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crc32fast-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crossbeam-channel-0.5.8",
        sha256 = "a33c2bf77f2df06183c3aa30d1e96c0695a313d4f9c453cc3762a6db39f99200",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crossbeam-channel/0.5.8/download"],
        strip_prefix = "crossbeam-channel-0.5.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crossbeam-channel-0.5.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crossbeam-deque-0.8.3",
        sha256 = "ce6fd6f855243022dcecf8702fef0c297d4338e226845fe067f6341ad9fa0cef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crossbeam-deque/0.8.3/download"],
        strip_prefix = "crossbeam-deque-0.8.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crossbeam-deque-0.8.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crossbeam-epoch-0.9.15",
        sha256 = "ae211234986c545741a7dc064309f67ee1e5ad243d0e48335adc0484d960bcc7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crossbeam-epoch/0.9.15/download"],
        strip_prefix = "crossbeam-epoch-0.9.15",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crossbeam-epoch-0.9.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crossbeam-queue-0.3.8",
        sha256 = "d1cfb3ea8a53f37c40dea2c7bedcbd88bdfae54f5e2175d6ecaff1c988353add",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crossbeam-queue/0.3.8/download"],
        strip_prefix = "crossbeam-queue-0.3.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crossbeam-queue-0.3.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crossbeam-utils-0.8.16",
        sha256 = "5a22b2d63d4d1dc0b7f1b6b2747dd0088008a9be28b6ddf0b1e7d335e3037294",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crossbeam-utils/0.8.16/download"],
        strip_prefix = "crossbeam-utils-0.8.16",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crossbeam-utils-0.8.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__crypto-common-0.1.6",
        sha256 = "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/crypto-common/0.1.6/download"],
        strip_prefix = "crypto-common-0.1.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.crypto-common-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__curl-0.4.44",
        sha256 = "509bd11746c7ac09ebd19f0b17782eae80aadee26237658a6b4808afb5c11a22",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/curl/0.4.44/download"],
        strip_prefix = "curl-0.4.44",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.curl-0.4.44.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__curl-sys-0.4.65-curl-8.2.1",
        sha256 = "961ba061c9ef2fe34bbd12b807152d96f0badd2bebe7b90ce6c8c8b7572a0986",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/curl-sys/0.4.65+curl-8.2.1/download"],
        strip_prefix = "curl-sys-0.4.65+curl-8.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.curl-sys-0.4.65+curl-8.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling-0.13.4",
        sha256 = "a01d95850c592940db9b8194bc39f4bc0e89dee5c4265e4b1807c34a9aba453c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling/0.13.4/download"],
        strip_prefix = "darling-0.13.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling-0.13.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling-0.14.4",
        sha256 = "7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling/0.14.4/download"],
        strip_prefix = "darling-0.14.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling-0.14.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling_core-0.13.4",
        sha256 = "859d65a907b6852c9361e3185c862aae7fafd2887876799fa55f5f99dc40d610",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling_core/0.13.4/download"],
        strip_prefix = "darling_core-0.13.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling_core-0.13.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling_core-0.14.4",
        sha256 = "109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling_core/0.14.4/download"],
        strip_prefix = "darling_core-0.14.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling_core-0.14.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling_macro-0.13.4",
        sha256 = "9c972679f83bdf9c42bd905396b6c3588a843a17f0f16dfcfa3e2c5d57441835",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling_macro/0.13.4/download"],
        strip_prefix = "darling_macro-0.13.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling_macro-0.13.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__darling_macro-0.14.4",
        sha256 = "a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/darling_macro/0.14.4/download"],
        strip_prefix = "darling_macro-0.14.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.darling_macro-0.14.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__debugid-0.8.0",
        sha256 = "bef552e6f588e446098f6ba40d89ac146c8c7b64aade83c051ee00bb5d2bc18d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/debugid/0.8.0/download"],
        strip_prefix = "debugid-0.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.debugid-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__der-0.7.8",
        sha256 = "fffa369a668c8af7dbf8b5e56c9f744fbd399949ed171606040001947de40b1c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/der/0.7.8/download"],
        strip_prefix = "der-0.7.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.der-0.7.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__deranged-0.3.8",
        sha256 = "f2696e8a945f658fd14dc3b87242e6b80cd0f36ff04ea560fa39082368847946",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/deranged/0.3.8/download"],
        strip_prefix = "deranged-0.3.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.deranged-0.3.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__derive_builder-0.12.0",
        sha256 = "8d67778784b508018359cbc8696edb3db78160bab2c2a28ba7f56ef6932997f8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/derive_builder/0.12.0/download"],
        strip_prefix = "derive_builder-0.12.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.derive_builder-0.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__derive_builder_core-0.12.0",
        sha256 = "c11bdc11a0c47bc7d37d582b5285da6849c96681023680b906673c5707af7b0f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/derive_builder_core/0.12.0/download"],
        strip_prefix = "derive_builder_core-0.12.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.derive_builder_core-0.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__derive_builder_macro-0.12.0",
        sha256 = "ebcda35c7a396850a55ffeac740804b40ffec779b98fffbb1738f4033f0ee79e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/derive_builder_macro/0.12.0/download"],
        strip_prefix = "derive_builder_macro-0.12.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.derive_builder_macro-0.12.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__digest-0.10.7",
        sha256 = "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/digest/0.10.7/download"],
        strip_prefix = "digest-0.10.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.digest-0.10.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dirs-5.0.1",
        sha256 = "44c45a9d03d6676652bcb5e724c7e988de1acad23a711b5217ab9cbecbec2225",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dirs/5.0.1/download"],
        strip_prefix = "dirs-5.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dirs-5.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dirs-next-2.0.0",
        sha256 = "b98cf8ebf19c3d1b223e151f99a4f9f0690dca41414773390fc824184ac833e1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dirs-next/2.0.0/download"],
        strip_prefix = "dirs-next-2.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dirs-next-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dirs-sys-0.4.1",
        sha256 = "520f05a5cbd335fae5a99ff7a6ab8627577660ee5cfd6a94a6a929b52ff0321c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dirs-sys/0.4.1/download"],
        strip_prefix = "dirs-sys-0.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dirs-sys-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dirs-sys-next-0.1.2",
        sha256 = "4ebda144c4fe02d1f7ea1a7d9641b6fc6b580adcfa024ae48797ecdeb6825b4d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dirs-sys-next/0.1.2/download"],
        strip_prefix = "dirs-sys-next-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dirs-sys-next-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dotenv-0.15.0",
        sha256 = "77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dotenv/0.15.0/download"],
        strip_prefix = "dotenv-0.15.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dotenv-0.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dotenvy-0.15.7",
        sha256 = "1aaf95b3e5c8f23aa320147307562d361db0ae0d51242340f558153b4eb2439b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dotenvy/0.15.7/download"],
        strip_prefix = "dotenvy-0.15.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dotenvy-0.15.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dtoa-1.0.9",
        sha256 = "dcbb2bf8e87535c23f7a8a321e364ce21462d0ff10cb6407820e8e96dfff6653",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dtoa/1.0.9/download"],
        strip_prefix = "dtoa-1.0.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dtoa-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__dyn-clone-1.0.13",
        sha256 = "bbfc4744c1b8f2a09adc0e55242f60b1af195d88596bd8700be74418c056c555",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/dyn-clone/1.0.13/download"],
        strip_prefix = "dyn-clone-1.0.13",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.dyn-clone-1.0.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__either-1.9.0",
        sha256 = "a26ae43d7bcc3b814de94796a5e736d4029efb0ee900c12e2d54c993ad1a1e07",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/either/1.9.0/download"],
        strip_prefix = "either-1.9.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.either-1.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__elasticsearch-8.5.0-alpha.1",
        sha256 = "40d9bd57d914cc66ce878f098f63ed7b5d5b64c30644a5adb950b008f874a6c6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/elasticsearch/8.5.0-alpha.1/download"],
        strip_prefix = "elasticsearch-8.5.0-alpha.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.elasticsearch-8.5.0-alpha.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__encoding_rs-0.8.32",
        sha256 = "071a31f4ee85403370b58aca746f01041ede6f0da2730960ad001edc2b71b394",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/encoding_rs/0.8.32/download"],
        strip_prefix = "encoding_rs-0.8.32",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.encoding_rs-0.8.32.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__endian-type-0.1.2",
        sha256 = "c34f04666d835ff5d62e058c3995147c06f42fe86ff053337632bca83e42702d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/endian-type/0.1.2/download"],
        strip_prefix = "endian-type-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.endian-type-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__equivalent-1.0.1",
        sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/equivalent/1.0.1/download"],
        strip_prefix = "equivalent-1.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.equivalent-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__erased-serde-0.3.31",
        sha256 = "6c138974f9d5e7fe373eb04df7cae98833802ae4b11c24ac7039a21d5af4b26c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/erased-serde/0.3.31/download"],
        strip_prefix = "erased-serde-0.3.31",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.erased-serde-0.3.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__errno-0.3.2",
        sha256 = "6b30f669a7961ef1631673d2766cc92f52d64f7ef354d4fe0ddfd30ed52f0f4f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/errno/0.3.2/download"],
        strip_prefix = "errno-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.errno-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__errno-dragonfly-0.1.2",
        sha256 = "aa68f1b12764fab894d2755d2518754e71b4fd80ecfb822714a1206c2aab39bf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/errno-dragonfly/0.1.2/download"],
        strip_prefix = "errno-dragonfly-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.errno-dragonfly-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__error-code-2.3.1",
        sha256 = "64f18991e7bf11e7ffee451b5318b5c1a73c52d0d0ada6e5a3017c8c1ced6a21",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/error-code/2.3.1/download"],
        strip_prefix = "error-code-2.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.error-code-2.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__etcetera-0.8.0",
        sha256 = "136d1b5283a1ab77bd9257427ffd09d8667ced0570b6f938942bc7568ed5b943",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/etcetera/0.8.0/download"],
        strip_prefix = "etcetera-0.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.etcetera-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__event-listener-2.5.3",
        sha256 = "0206175f82b8d6bf6652ff7d71a1e27fd2e4efde587fd368662814d6ec1d9ce0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/event-listener/2.5.3/download"],
        strip_prefix = "event-listener-2.5.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.event-listener-2.5.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__eyre-0.6.8",
        sha256 = "4c2b6b5a29c02cdc822728b7d7b8ae1bab3e3b05d44522770ddd49722eeac7eb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/eyre/0.6.8/download"],
        strip_prefix = "eyre-0.6.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.eyre-0.6.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__fastrand-1.9.0",
        sha256 = "e51093e27b0797c359783294ca4f0a911c270184cb10f85783b118614a1501be",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fastrand/1.9.0/download"],
        strip_prefix = "fastrand-1.9.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.fastrand-1.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__fastrand-2.0.0",
        sha256 = "6999dc1837253364c2ebb0704ba97994bd874e8f195d665c50b7548f6ea92764",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fastrand/2.0.0/download"],
        strip_prefix = "fastrand-2.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.fastrand-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__fd-lock-3.0.13",
        sha256 = "ef033ed5e9bad94e55838ca0ca906db0e043f517adda0c8b79c7a8c66c93c1b5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fd-lock/3.0.13/download"],
        strip_prefix = "fd-lock-3.0.13",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.fd-lock-3.0.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__file-format-0.18.0",
        sha256 = "fd991bcfc01ee8f9ed83108da842aeddfca8a9550962cbffc9579050109c2aa9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/file-format/0.18.0/download"],
        strip_prefix = "file-format-0.18.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.file-format-0.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__filetime-0.2.22",
        sha256 = "d4029edd3e734da6fe05b6cd7bd2960760a616bd2ddd0d59a0124746d6272af0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/filetime/0.2.22/download"],
        strip_prefix = "filetime-0.2.22",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.filetime-0.2.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__findshlibs-0.10.2",
        sha256 = "40b9e59cd0f7e0806cca4be089683ecb6434e602038df21fe6bf6711b2f07f64",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/findshlibs/0.10.2/download"],
        strip_prefix = "findshlibs-0.10.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.findshlibs-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__flate2-1.0.27",
        sha256 = "c6c98ee8095e9d1dcbf2fcc6d95acccb90d1c81db1e44725c6a984b1dbdfb010",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/flate2/1.0.27/download"],
        strip_prefix = "flate2-1.0.27",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.flate2-1.0.27.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__flume-0.10.14",
        sha256 = "1657b4441c3403d9f7b3409e47575237dac27b1b5726df654a6ecbf92f0f7577",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/flume/0.10.14/download"],
        strip_prefix = "flume-0.10.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.flume-0.10.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__fnv-1.0.7",
        sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fnv/1.0.7/download"],
        strip_prefix = "fnv-1.0.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.fnv-1.0.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__foreign-types-0.3.2",
        sha256 = "f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/foreign-types/0.3.2/download"],
        strip_prefix = "foreign-types-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.foreign-types-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__foreign-types-shared-0.1.1",
        sha256 = "00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/foreign-types-shared/0.1.1/download"],
        strip_prefix = "foreign-types-shared-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.foreign-types-shared-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__form_urlencoded-1.2.0",
        sha256 = "a62bc1cf6f830c2ec14a513a9fb124d0a213a629668a4186f329db21fe045652",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/form_urlencoded/1.2.0/download"],
        strip_prefix = "form_urlencoded-1.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.form_urlencoded-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-0.3.28",
        sha256 = "23342abe12aba583913b2e62f22225ff9c950774065e4bfb61a19cd9770fec40",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures/0.3.28/download"],
        strip_prefix = "futures-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-channel-0.3.28",
        sha256 = "955518d47e09b25bbebc7a18df10b81f0c766eaf4c4f1cccef2fca5f2a4fb5f2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-channel/0.3.28/download"],
        strip_prefix = "futures-channel-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-channel-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-core-0.3.28",
        sha256 = "4bca583b7e26f571124fe5b7561d49cb2868d79116cfa0eefce955557c6fee8c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-core/0.3.28/download"],
        strip_prefix = "futures-core-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-core-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-executor-0.3.28",
        sha256 = "ccecee823288125bd88b4d7f565c9e58e41858e47ab72e8ea2d64e93624386e0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-executor/0.3.28/download"],
        strip_prefix = "futures-executor-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-executor-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-intrusive-0.5.0",
        sha256 = "1d930c203dd0b6ff06e0201a4a2fe9149b43c684fd4420555b26d21b1a02956f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-intrusive/0.5.0/download"],
        strip_prefix = "futures-intrusive-0.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-intrusive-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-io-0.3.28",
        sha256 = "4fff74096e71ed47f8e023204cfd0aa1289cd54ae5430a9523be060cdb849964",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-io/0.3.28/download"],
        strip_prefix = "futures-io-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-io-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-lite-1.13.0",
        sha256 = "49a9d51ce47660b1e808d3c990b4709f2f415d928835a17dfd16991515c46bce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-lite/1.13.0/download"],
        strip_prefix = "futures-lite-1.13.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-lite-1.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-macro-0.3.28",
        sha256 = "89ca545a94061b6365f2c7355b4b32bd20df3ff95f02da9329b34ccc3bd6ee72",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-macro/0.3.28/download"],
        strip_prefix = "futures-macro-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-macro-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-sink-0.3.28",
        sha256 = "f43be4fe21a13b9781a69afa4985b0f6ee0e1afab2c6f454a8cf30e2b2237b6e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-sink/0.3.28/download"],
        strip_prefix = "futures-sink-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-sink-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-task-0.3.28",
        sha256 = "76d3d132be6c0e6aa1534069c705a74a5997a356c0dc2f86a47765e5617c5b65",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-task/0.3.28/download"],
        strip_prefix = "futures-task-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-task-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__futures-util-0.3.28",
        sha256 = "26b01e40b772d54cf6c6d721c1d1abd0647a0106a12ecaa1c186273392a69533",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-util/0.3.28/download"],
        strip_prefix = "futures-util-0.3.28",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.futures-util-0.3.28.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__generic-array-0.14.7",
        sha256 = "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/generic-array/0.14.7/download"],
        strip_prefix = "generic-array-0.14.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.generic-array-0.14.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__getrandom-0.2.10",
        sha256 = "be4136b2a15dd319360be1c07d9933517ccf0be8f16bf62a3bee4f0d618df427",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/getrandom/0.2.10/download"],
        strip_prefix = "getrandom-0.2.10",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.getrandom-0.2.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__gimli-0.27.3",
        sha256 = "b6c80984affa11d98d1b88b66ac8853f143217b399d3c74116778ff8fdb4ed2e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/gimli/0.27.3/download"],
        strip_prefix = "gimli-0.27.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.gimli-0.27.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__h2-0.3.20",
        sha256 = "97ec8491ebaf99c8eaa73058b045fe58073cd6be7f596ac993ced0b0a0c01049",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/h2/0.3.20/download"],
        strip_prefix = "h2-0.3.20",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.h2-0.3.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hashbrown-0.12.3",
        sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hashbrown/0.12.3/download"],
        strip_prefix = "hashbrown-0.12.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hashbrown-0.12.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hashbrown-0.14.0",
        sha256 = "2c6201b9ff9fd90a5a3bac2e56a830d0caa509576f0e503818ee82c181b3437a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hashbrown/0.14.0/download"],
        strip_prefix = "hashbrown-0.14.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hashbrown-0.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hashlink-0.8.3",
        sha256 = "312f66718a2d7789ffef4f4b7b213138ed9f1eb3aa1d0d82fc99f88fb3ffd26f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hashlink/0.8.3/download"],
        strip_prefix = "hashlink-0.8.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hashlink-0.8.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__headers-0.3.8",
        sha256 = "f3e372db8e5c0d213e0cd0b9be18be2aca3d44cf2fe30a9d46a65581cd454584",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/headers/0.3.8/download"],
        strip_prefix = "headers-0.3.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.headers-0.3.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__headers-core-0.2.0",
        sha256 = "e7f66481bfee273957b1f20485a4ff3362987f85b2c236580d81b4eb7a326429",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/headers-core/0.2.0/download"],
        strip_prefix = "headers-core-0.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.headers-core-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__heck-0.4.1",
        sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/heck/0.4.1/download"],
        strip_prefix = "heck-0.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.heck-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hermit-abi-0.3.2",
        sha256 = "443144c8cdadd93ebf52ddb4056d257f5b52c04d3c804e657d19eb73fc33668b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hermit-abi/0.3.2/download"],
        strip_prefix = "hermit-abi-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hermit-abi-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hex-0.4.3",
        sha256 = "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hex/0.4.3/download"],
        strip_prefix = "hex-0.4.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hex-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hkdf-0.12.3",
        sha256 = "791a029f6b9fc27657f6f188ec6e5e43f6911f6f878e0dc5501396e09809d437",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hkdf/0.12.3/download"],
        strip_prefix = "hkdf-0.12.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hkdf-0.12.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hmac-0.12.1",
        sha256 = "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hmac/0.12.1/download"],
        strip_prefix = "hmac-0.12.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hmac-0.12.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__home-0.5.5",
        sha256 = "5444c27eef6923071f7ebcc33e3444508466a76f7a2b93da00ed6e19f30c1ddb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/home/0.5.5/download"],
        strip_prefix = "home-0.5.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.home-0.5.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hostname-0.3.1",
        sha256 = "3c731c3e10504cc8ed35cfe2f1db4c9274c3d35fa486e3b31df46f068ef3e867",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hostname/0.3.1/download"],
        strip_prefix = "hostname-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hostname-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__http-0.2.9",
        sha256 = "bd6effc99afb63425aff9b05836f029929e345a6148a14b7ecd5ab67af944482",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http/0.2.9/download"],
        strip_prefix = "http-0.2.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.http-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__http-body-0.4.5",
        sha256 = "d5f38f16d184e36f2408a55281cd658ecbd3ca05cce6d6510a176eca393e26d1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http-body/0.4.5/download"],
        strip_prefix = "http-body-0.4.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.http-body-0.4.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__http-range-header-0.3.1",
        sha256 = "add0ab9360ddbd88cfeb3bd9574a1d85cfdfa14db10b3e21d3700dbc4328758f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http-range-header/0.3.1/download"],
        strip_prefix = "http-range-header-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.http-range-header-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__httparse-1.8.0",
        sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httparse/1.8.0/download"],
        strip_prefix = "httparse-1.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.httparse-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__httpdate-1.0.3",
        sha256 = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httpdate/1.0.3/download"],
        strip_prefix = "httpdate-1.0.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.httpdate-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__humantime-2.1.0",
        sha256 = "9a3a5bfb195931eeb336b2a7b4d761daec841b97f947d34394601737a7bba5e4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/humantime/2.1.0/download"],
        strip_prefix = "humantime-2.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.humantime-2.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hyper-0.14.27",
        sha256 = "ffb1cfd654a8219eaef89881fdb3bb3b1cdc5fa75ded05d6933b2b382e395468",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper/0.14.27/download"],
        strip_prefix = "hyper-0.14.27",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hyper-0.14.27.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hyper-rustls-0.23.2",
        sha256 = "1788965e61b367cd03a62950836d5cd41560c3577d90e40e0819373194d1661c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper-rustls/0.23.2/download"],
        strip_prefix = "hyper-rustls-0.23.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hyper-rustls-0.23.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hyper-tls-0.5.0",
        sha256 = "d6183ddfa99b85da61a140bea0efc93fdf56ceaa041b37d553518030827f9905",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper-tls/0.5.0/download"],
        strip_prefix = "hyper-tls-0.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hyper-tls-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__hyperlocal-0.8.0",
        sha256 = "0fafdf7b2b2de7c9784f76e02c0935e65a8117ec3b768644379983ab333ac98c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyperlocal/0.8.0/download"],
        strip_prefix = "hyperlocal-0.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.hyperlocal-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__iana-time-zone-0.1.57",
        sha256 = "2fad5b825842d2b38bd206f3e81d6957625fd7f0a361e345c30e01a0ae2dd613",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iana-time-zone/0.1.57/download"],
        strip_prefix = "iana-time-zone-0.1.57",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.iana-time-zone-0.1.57.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__iana-time-zone-haiku-0.1.2",
        sha256 = "f31827a206f56af32e590ba56d5d2d085f558508192593743f16b2306495269f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iana-time-zone-haiku/0.1.2/download"],
        strip_prefix = "iana-time-zone-haiku-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.iana-time-zone-haiku-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ident_case-1.0.1",
        sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ident_case/1.0.1/download"],
        strip_prefix = "ident_case-1.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ident_case-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__idna-0.4.0",
        sha256 = "7d20d6b07bfbc108882d88ed8e37d39636dcc260e15e30c45e6ba089610b917c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/idna/0.4.0/download"],
        strip_prefix = "idna-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.idna-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__if_chain-1.0.2",
        sha256 = "cb56e1aa765b4b4f3aadfab769793b7087bb03a4ea4920644a6d238e2df5b9ed",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/if_chain/1.0.2/download"],
        strip_prefix = "if_chain-1.0.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.if_chain-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__indenter-0.3.3",
        sha256 = "ce23b50ad8242c51a442f3ff322d56b02f08852c77e4c0b4d3fd684abc89c683",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/indenter/0.3.3/download"],
        strip_prefix = "indenter-0.3.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.indenter-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__indexmap-1.9.3",
        sha256 = "bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/indexmap/1.9.3/download"],
        strip_prefix = "indexmap-1.9.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.indexmap-1.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__indexmap-2.0.0",
        sha256 = "d5477fe2230a79769d8dc68e0eabf5437907c0457a5614a9e8dddb67f65eb65d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/indexmap/2.0.0/download"],
        strip_prefix = "indexmap-2.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.indexmap-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__infer-0.15.0",
        sha256 = "cb33622da908807a06f9513c19b3c1ad50fab3e4137d82a78107d502075aa199",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/infer/0.15.0/download"],
        strip_prefix = "infer-0.15.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.infer-0.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__instant-0.1.12",
        sha256 = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/instant/0.1.12/download"],
        strip_prefix = "instant-0.1.12",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.instant-0.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ipnet-2.8.0",
        sha256 = "28b29a3cd74f0f4598934efe3aeba42bae0eb4680554128851ebbecb02af14e6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ipnet/2.8.0/download"],
        strip_prefix = "ipnet-2.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ipnet-2.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__is-terminal-0.4.9",
        sha256 = "cb0889898416213fab133e1d33a0e5858a48177452750691bde3666d0fdbaf8b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/is-terminal/0.4.9/download"],
        strip_prefix = "is-terminal-0.4.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.is-terminal-0.4.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__isahc-1.7.2",
        sha256 = "334e04b4d781f436dc315cb1e7515bd96826426345d498149e4bde36b67f8ee9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/isahc/1.7.2/download"],
        strip_prefix = "isahc-1.7.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.isahc-1.7.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__iso8601-0.6.1",
        sha256 = "924e5d73ea28f59011fec52a0d12185d496a9b075d360657aed2a5707f701153",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/iso8601/0.6.1/download"],
        strip_prefix = "iso8601-0.6.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.iso8601-0.6.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__itertools-0.10.5",
        sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itertools/0.10.5/download"],
        strip_prefix = "itertools-0.10.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.itertools-0.10.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__itertools-0.11.0",
        sha256 = "b1c173a5686ce8bfa551b3563d0c2170bf24ca44da99c7ca4bfdab5418c3fe57",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itertools/0.11.0/download"],
        strip_prefix = "itertools-0.11.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.itertools-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__itoa-1.0.9",
        sha256 = "af150ab688ff2122fcef229be89cb50dd66af9e01a4ff320cc137eecc9bacc38",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itoa/1.0.9/download"],
        strip_prefix = "itoa-1.0.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.itoa-1.0.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__js-sys-0.3.64",
        sha256 = "c5f195fe497f702db0f318b07fdd68edb16955aed830df8363d837542f8f935a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/js-sys/0.3.64/download"],
        strip_prefix = "js-sys-0.3.64",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.js-sys-0.3.64.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__jsonwebtoken-8.3.0",
        sha256 = "6971da4d9c3aa03c3d8f3ff0f4155b534aad021292003895a469716b2a230378",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/jsonwebtoken/8.3.0/download"],
        strip_prefix = "jsonwebtoken-8.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.jsonwebtoken-8.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__lazy_static-1.4.0",
        sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/lazy_static/1.4.0/download"],
        strip_prefix = "lazy_static-1.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.lazy_static-1.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libc-0.2.147",
        sha256 = "b4668fb0ea861c1df094127ac5f1da3409a82116a4ba74fca2e58ef927159bb3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libc/0.2.147/download"],
        strip_prefix = "libc-0.2.147",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libc-0.2.147.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libm-0.2.7",
        sha256 = "f7012b1bbb0719e1097c47611d3898568c546d597c2e74d66f6087edd5233ff4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libm/0.2.7/download"],
        strip_prefix = "libm-0.2.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libm-0.2.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libmimalloc-sys-0.1.33",
        sha256 = "f4ac0e912c8ef1b735e92369695618dc5b1819f5a7bf3f167301a3ba1cea515e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libmimalloc-sys/0.1.33/download"],
        strip_prefix = "libmimalloc-sys-0.1.33",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libmimalloc-sys-0.1.33.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libnghttp2-sys-0.1.8-1.55.1",
        sha256 = "4fae956c192dadcdb5dace96db71fa0b827333cce7c7b38dc71446f024d8a340",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libnghttp2-sys/0.1.8+1.55.1/download"],
        strip_prefix = "libnghttp2-sys-0.1.8+1.55.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libnghttp2-sys-0.1.8+1.55.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libsqlite3-sys-0.26.0",
        sha256 = "afc22eff61b133b115c6e8c74e818c628d6d5e7a502afea6f64dee076dd94326",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libsqlite3-sys/0.26.0/download"],
        strip_prefix = "libsqlite3-sys-0.26.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libsqlite3-sys-0.26.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__libz-sys-1.1.12",
        sha256 = "d97137b25e321a73eef1418d1d5d2eda4d77e12813f8e6dead84bc52c5870a7b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libz-sys/1.1.12/download"],
        strip_prefix = "libz-sys-1.1.12",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.libz-sys-1.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__linux-raw-sys-0.4.5",
        sha256 = "57bcfdad1b858c2db7c38303a6d2ad4dfaf5eb53dfeb0910128b2c26d6158503",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/linux-raw-sys/0.4.5/download"],
        strip_prefix = "linux-raw-sys-0.4.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.linux-raw-sys-0.4.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__lock_api-0.4.10",
        sha256 = "c1cc9717a20b1bb222f333e6a92fd32f7d8a18ddc5a3191a11af45dcbf4dcd16",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/lock_api/0.4.10/download"],
        strip_prefix = "lock_api-0.4.10",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.lock_api-0.4.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__log-0.4.20",
        sha256 = "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/log/0.4.20/download"],
        strip_prefix = "log-0.4.20",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.log-0.4.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__match_cfg-0.1.0",
        sha256 = "ffbee8634e0d45d258acb448e7eaab3fce7a0a467395d4d9f228e3c1f01fb2e4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/match_cfg/0.1.0/download"],
        strip_prefix = "match_cfg-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.match_cfg-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__matchit-0.7.2",
        sha256 = "ed1202b2a6f884ae56f04cff409ab315c5ce26b5e58d7412e484f01fd52f52ef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/matchit/0.7.2/download"],
        strip_prefix = "matchit-0.7.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.matchit-0.7.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__md-5-0.10.5",
        sha256 = "6365506850d44bff6e2fbcb5176cf63650e48bd45ef2fe2665ae1570e0f4b9ca",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/md-5/0.10.5/download"],
        strip_prefix = "md-5-0.10.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.md-5-0.10.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__meilisearch-index-setting-macro-0.24.1",
        sha256 = "923bb7380030676cfd6563bc09cf88f7150fab55fc881c44e86f4a10c9b7ae2a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/meilisearch-index-setting-macro/0.24.1/download"],
        strip_prefix = "meilisearch-index-setting-macro-0.24.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.meilisearch-index-setting-macro-0.24.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__meilisearch-sdk-0.24.1",
        sha256 = "ff38036cb0ce16609896d1fd90fbce9432a173c744abd3a0d8daf2e4cdbb0d65",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/meilisearch-sdk/0.24.1/download"],
        strip_prefix = "meilisearch-sdk-0.24.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.meilisearch-sdk-0.24.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__memchr-2.5.0",
        sha256 = "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/memchr/2.5.0/download"],
        strip_prefix = "memchr-2.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.memchr-2.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__memoffset-0.6.5",
        sha256 = "5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/memoffset/0.6.5/download"],
        strip_prefix = "memoffset-0.6.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.memoffset-0.6.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__memoffset-0.9.0",
        sha256 = "5a634b1c61a95585bd15607c6ab0c4e5b226e695ff2800ba0cdccddf208c406c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/memoffset/0.9.0/download"],
        strip_prefix = "memoffset-0.9.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.memoffset-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__merge-struct-0.1.0",
        sha256 = "1d82012d21e24135b839b6b9bebd622b7ff0cb40071498bc2d066d3a6d04dd4a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/merge-struct/0.1.0/download"],
        strip_prefix = "merge-struct-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.merge-struct-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__mimalloc-0.1.37",
        sha256 = "4e2894987a3459f3ffb755608bd82188f8ed00d0ae077f1edea29c068d639d98",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mimalloc/0.1.37/download"],
        strip_prefix = "mimalloc-0.1.37",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.mimalloc-0.1.37.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__mime-0.3.17",
        sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mime/0.3.17/download"],
        strip_prefix = "mime-0.3.17",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.mime-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__minimal-lexical-0.2.1",
        sha256 = "68354c5c6bd36d73ff3feceb05efa59b6acb7626617f4962be322a825e61f79a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/minimal-lexical/0.2.1/download"],
        strip_prefix = "minimal-lexical-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.minimal-lexical-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__miniz_oxide-0.7.1",
        sha256 = "e7810e0be55b428ada41041c41f32c9f1a42817901b4ccf45fa3d4b6561e74c7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/miniz_oxide/0.7.1/download"],
        strip_prefix = "miniz_oxide-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.miniz_oxide-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__mio-0.8.8",
        sha256 = "927a765cd3fc26206e66b296465fa9d3e5ab003e651c1b3c060e7956d96b19d2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mio/0.8.8/download"],
        strip_prefix = "mio-0.8.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.mio-0.8.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__multer-2.1.0",
        sha256 = "01acbdc23469fd8fe07ab135923371d5f5a422fbf9c522158677c8eb15bc51c2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/multer/2.1.0/download"],
        strip_prefix = "multer-2.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.multer-2.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__native-tls-0.2.11",
        sha256 = "07226173c32f2926027b63cce4bcd8076c3552846cbe7925f3aaffeac0a3b92e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/native-tls/0.2.11/download"],
        strip_prefix = "native-tls-0.2.11",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.native-tls-0.2.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__nibble_vec-0.1.0",
        sha256 = "77a5d83df9f36fe23f0c3648c6bbb8b0298bb5f1939c8f2704431371f4b84d43",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/nibble_vec/0.1.0/download"],
        strip_prefix = "nibble_vec-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.nibble_vec-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__nix-0.23.2",
        sha256 = "8f3790c00a0150112de0f4cd161e3d7fc4b2d8a5542ffc35f099a2562aecb35c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/nix/0.23.2/download"],
        strip_prefix = "nix-0.23.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.nix-0.23.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__nom-7.1.3",
        sha256 = "d273983c5a657a70a3e8f2a01329822f3b8c8172b73826411a55751e404a0a4a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/nom/7.1.3/download"],
        strip_prefix = "nom-7.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.nom-7.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ntapi-0.4.1",
        sha256 = "e8a3895c6391c39d7fe7ebc444a87eb2991b2a0bc718fdabd071eec617fc68e4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ntapi/0.4.1/download"],
        strip_prefix = "ntapi-0.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ntapi-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__nu-ansi-term-0.46.0",
        sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/nu-ansi-term/0.46.0/download"],
        strip_prefix = "nu-ansi-term-0.46.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.nu-ansi-term-0.46.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num-bigint-0.4.3",
        sha256 = "f93ab6289c7b344a8a9f60f88d80aa20032336fe78da341afc91c8a2341fc75f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-bigint/0.4.3/download"],
        strip_prefix = "num-bigint-0.4.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num-bigint-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num-bigint-dig-0.8.4",
        sha256 = "dc84195820f291c7697304f3cbdadd1cb7199c0efc917ff5eafd71225c136151",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-bigint-dig/0.8.4/download"],
        strip_prefix = "num-bigint-dig-0.8.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num-bigint-dig-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num-integer-0.1.45",
        sha256 = "225d3389fb3509a24c93f5c29eb6bde2586b98d9f016636dff58d7c6f7569cd9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-integer/0.1.45/download"],
        strip_prefix = "num-integer-0.1.45",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num-integer-0.1.45.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num-iter-0.1.43",
        sha256 = "7d03e6c028c5dc5cac6e2dec0efda81fc887605bb3d884578bb6d6bf7514e252",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-iter/0.1.43/download"],
        strip_prefix = "num-iter-0.1.43",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num-iter-0.1.43.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num-traits-0.2.16",
        sha256 = "f30b0abd723be7e2ffca1272140fac1a2f084c77ec3e123c192b66af1ee9e6c2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-traits/0.2.16/download"],
        strip_prefix = "num-traits-0.2.16",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num-traits-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__num_cpus-1.16.0",
        sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num_cpus/1.16.0/download"],
        strip_prefix = "num_cpus-1.16.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.num_cpus-1.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__object-0.31.1",
        sha256 = "8bda667d9f2b5051b8833f59f3bf748b28ef54f850f4fcb389a252aa383866d1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/object/0.31.1/download"],
        strip_prefix = "object-0.31.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.object-0.31.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__once_cell-1.18.0",
        sha256 = "dd8b5dd2ae5ed71462c540258bedcb51965123ad7e7ccf4b9a8cafaa4a63576d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/once_cell/1.18.0/download"],
        strip_prefix = "once_cell-1.18.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.once_cell-1.18.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__openssl-0.10.56",
        sha256 = "729b745ad4a5575dd06a3e1af1414bd330ee561c01b3899eb584baeaa8def17e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl/0.10.56/download"],
        strip_prefix = "openssl-0.10.56",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.openssl-0.10.56.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__openssl-macros-0.1.1",
        sha256 = "a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-macros/0.1.1/download"],
        strip_prefix = "openssl-macros-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.openssl-macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__openssl-probe-0.1.5",
        sha256 = "ff011a302c396a5197692431fc1948019154afc178baf7d8e37367442a4601cf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-probe/0.1.5/download"],
        strip_prefix = "openssl-probe-0.1.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.openssl-probe-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__openssl-sys-0.9.91",
        sha256 = "866b5f16f90776b9bb8dc1e1802ac6f0513de3a7a7465867bfbc563dc737faac",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/openssl-sys/0.9.91/download"],
        strip_prefix = "openssl-sys-0.9.91",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.openssl-sys-0.9.91.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__option-ext-0.2.0",
        sha256 = "04744f49eae99ab78e0d5c0b603ab218f515ea8cfe5a456d7629ad883a3b6e7d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/option-ext/0.2.0/download"],
        strip_prefix = "option-ext-0.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.option-ext-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__os_info-3.7.0",
        sha256 = "006e42d5b888366f1880eda20371fedde764ed2213dc8496f49622fa0c99cd5e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/os_info/3.7.0/download"],
        strip_prefix = "os_info-3.7.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.os_info-3.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__outref-0.5.1",
        sha256 = "4030760ffd992bef45b0ae3f10ce1aba99e33464c90d14dd7c039884963ddc7a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/outref/0.5.1/download"],
        strip_prefix = "outref-0.5.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.outref-0.5.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__overload-0.1.1",
        sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/overload/0.1.1/download"],
        strip_prefix = "overload-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.overload-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__owo-colors-3.5.0",
        sha256 = "c1b04fb49957986fdce4d6ee7a65027d55d4b6d2265e5848bbb507b58ccfdb6f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/owo-colors/3.5.0/download"],
        strip_prefix = "owo-colors-3.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.owo-colors-3.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__parking-2.1.0",
        sha256 = "14f2252c834a40ed9bb5422029649578e63aa341ac401f74e719dd1afda8394e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/parking/2.1.0/download"],
        strip_prefix = "parking-2.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.parking-2.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__parking_lot-0.12.1",
        sha256 = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/parking_lot/0.12.1/download"],
        strip_prefix = "parking_lot-0.12.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.parking_lot-0.12.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__parking_lot_core-0.9.8",
        sha256 = "93f00c865fe7cabf650081affecd3871070f26767e7b2070a3ffae14c654b447",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/parking_lot_core/0.9.8/download"],
        strip_prefix = "parking_lot_core-0.9.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.parking_lot_core-0.9.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__password-hash-0.5.0",
        sha256 = "346f04948ba92c43e8469c1ee6736c7563d71012b17d40745260fe106aac2166",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/password-hash/0.5.0/download"],
        strip_prefix = "password-hash-0.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.password-hash-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__paste-1.0.14",
        sha256 = "de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/paste/1.0.14/download"],
        strip_prefix = "paste-1.0.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.paste-1.0.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pem-1.1.1",
        sha256 = "a8835c273a76a90455d7344889b0964598e3316e2a79ede8e36f16bdcf2228b8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pem/1.1.1/download"],
        strip_prefix = "pem-1.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pem-1.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pem-rfc7468-0.7.0",
        sha256 = "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pem-rfc7468/0.7.0/download"],
        strip_prefix = "pem-rfc7468-0.7.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pem-rfc7468-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__percent-encoding-2.3.0",
        sha256 = "9b2a4787296e9989611394c33f193f676704af1686e70b8f8033ab5ba9a35a94",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/percent-encoding/2.3.0/download"],
        strip_prefix = "percent-encoding-2.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.percent-encoding-2.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pin-project-1.1.3",
        sha256 = "fda4ed1c6c173e3fc7a83629421152e01d7b1f9b7f65fb301e490e8cfc656422",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project/1.1.3/download"],
        strip_prefix = "pin-project-1.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pin-project-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pin-project-internal-1.1.3",
        sha256 = "4359fd9c9171ec6e8c62926d6faaf553a8dc3f64e1507e76da7911b4f6a04405",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-internal/1.1.3/download"],
        strip_prefix = "pin-project-internal-1.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pin-project-internal-1.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pin-project-lite-0.2.12",
        sha256 = "12cc1b0bf1727a77a54b6654e7b5f1af8604923edc8b81885f8ec92f9e3f0a05",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-lite/0.2.12/download"],
        strip_prefix = "pin-project-lite-0.2.12",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pin-project-lite-0.2.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pin-utils-0.1.0",
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-utils/0.1.0/download"],
        strip_prefix = "pin-utils-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pin-utils-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pkcs1-0.7.5",
        sha256 = "c8ffb9f10fa047879315e6625af03c164b16962a5368d724ed16323b68ace47f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pkcs1/0.7.5/download"],
        strip_prefix = "pkcs1-0.7.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pkcs1-0.7.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pkcs8-0.10.2",
        sha256 = "f950b2377845cebe5cf8b5165cb3cc1a5e0fa5cfa3e1f7f55707d8fd82e0a7b7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pkcs8/0.10.2/download"],
        strip_prefix = "pkcs8-0.10.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pkcs8-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__pkg-config-0.3.27",
        sha256 = "26072860ba924cbfa98ea39c8c19b4dd6a4a25423dbdf219c1eca91aa0cf6964",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pkg-config/0.3.27/download"],
        strip_prefix = "pkg-config-0.3.27",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.pkg-config-0.3.27.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__polling-2.8.0",
        sha256 = "4b2d323e8ca7996b3e23126511a523f7e62924d93ecd5ae73b333815b0eb3dce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/polling/2.8.0/download"],
        strip_prefix = "polling-2.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.polling-2.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ppv-lite86-0.2.17",
        sha256 = "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ppv-lite86/0.2.17/download"],
        strip_prefix = "ppv-lite86-0.2.17",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ppv-lite86-0.2.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__proc-macro-error-1.0.4",
        sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/proc-macro-error/1.0.4/download"],
        strip_prefix = "proc-macro-error-1.0.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.proc-macro-error-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__proc-macro-error-attr-1.0.4",
        sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/proc-macro-error-attr/1.0.4/download"],
        strip_prefix = "proc-macro-error-attr-1.0.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.proc-macro-error-attr-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__proc-macro2-1.0.66",
        sha256 = "18fb31db3f9bddb2ea821cde30a9f70117e3f119938b5ee630b7403aa6e2ead9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/proc-macro2/1.0.66/download"],
        strip_prefix = "proc-macro2-1.0.66",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.proc-macro2-1.0.66.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__prometheus-client-0.21.2",
        sha256 = "3c99afa9a01501019ac3a14d71d9f94050346f55ca471ce90c799a15c58f61e2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prometheus-client/0.21.2/download"],
        strip_prefix = "prometheus-client-0.21.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.prometheus-client-0.21.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__prometheus-client-derive-encode-0.4.2",
        sha256 = "440f724eba9f6996b75d63681b0a92b06947f1457076d503a4d2e2c8f56442b8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prometheus-client-derive-encode/0.4.2/download"],
        strip_prefix = "prometheus-client-derive-encode-0.4.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.prometheus-client-derive-encode-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__promptly-0.3.1",
        sha256 = "9acbc6c5a5b029fe58342f58445acb00ccfe24624e538894bc2f04ce112980ba",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/promptly/0.3.1/download"],
        strip_prefix = "promptly-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.promptly-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__quote-1.0.33",
        sha256 = "5267fca4496028628a95160fc423a33e8b2e6af8a5302579e322e4b520293cae",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/quote/1.0.33/download"],
        strip_prefix = "quote-1.0.33",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.quote-1.0.33.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__radix_trie-0.2.1",
        sha256 = "c069c179fcdc6a2fe24d8d18305cf085fdbd4f922c041943e203685d6a1c58fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/radix_trie/0.2.1/download"],
        strip_prefix = "radix_trie-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.radix_trie-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rand-0.8.5",
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand/0.8.5/download"],
        strip_prefix = "rand-0.8.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rand-0.8.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rand_chacha-0.3.1",
        sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"],
        strip_prefix = "rand_chacha-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rand_chacha-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rand_core-0.6.4",
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand_core/0.6.4/download"],
        strip_prefix = "rand_core-0.6.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rand_core-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rayon-1.7.0",
        sha256 = "1d2df5196e37bcc87abebc0053e20787d73847bb33134a69841207dd0a47f03b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rayon/1.7.0/download"],
        strip_prefix = "rayon-1.7.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rayon-1.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rayon-core-1.11.0",
        sha256 = "4b8f95bd6966f5c87776639160a66bd8ab9895d9d4ab01ddba9fc60661aebe8d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rayon-core/1.11.0/download"],
        strip_prefix = "rayon-core-1.11.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rayon-core-1.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__redis-0.23.2",
        sha256 = "ffd6543a7bc6428396845f6854ccf3d1ae8823816592e2cbe74f20f50f209d02",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redis/0.23.2/download"],
        strip_prefix = "redis-0.23.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.redis-0.23.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__redox_syscall-0.2.16",
        sha256 = "fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redox_syscall/0.2.16/download"],
        strip_prefix = "redox_syscall-0.2.16",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.redox_syscall-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__redox_syscall-0.3.5",
        sha256 = "567664f262709473930a4bf9e51bf2ebf3348f2e748ccc50dea20646858f8f29",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redox_syscall/0.3.5/download"],
        strip_prefix = "redox_syscall-0.3.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.redox_syscall-0.3.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__redox_users-0.4.3",
        sha256 = "b033d837a7cf162d7993aded9304e30a83213c648b6e389db233191f891e5c2b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redox_users/0.4.3/download"],
        strip_prefix = "redox_users-0.4.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.redox_users-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__regex-1.9.3",
        sha256 = "81bc1d4caf89fac26a70747fe603c130093b53c773888797a6329091246d651a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex/1.9.3/download"],
        strip_prefix = "regex-1.9.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.regex-1.9.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__regex-automata-0.3.6",
        sha256 = "fed1ceff11a1dddaee50c9dc8e4938bd106e9d89ae372f192311e7da498e3b69",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex-automata/0.3.6/download"],
        strip_prefix = "regex-automata-0.3.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.regex-automata-0.3.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__regex-syntax-0.7.4",
        sha256 = "e5ea92a5b6195c6ef2a0295ea818b312502c6fc94dde986c5553242e18fd4ce2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex-syntax/0.7.4/download"],
        strip_prefix = "regex-syntax-0.7.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.regex-syntax-0.7.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__remi-core-0.4.0",
        sha256 = "725c5277d588ebd55ad50286dde8a5f33109ba7a073e0f64b092fa23e49ccff7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/remi-core/0.4.0/download"],
        strip_prefix = "remi-core-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.remi-core-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__remi-fs-0.4.0",
        sha256 = "1a3716357346b7d62e9a194ea3af2b23ccbc4cbe82bdcb4b82e22eb996aa5c32",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/remi-fs/0.4.0/download"],
        strip_prefix = "remi-fs-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.remi-fs-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__remi-s3-0.4.0",
        sha256 = "a781b3f53995a8b5d4eb64c0ffe62297c2276c49d0bc707c2c64cff4a0a496b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/remi-s3/0.4.0/download"],
        strip_prefix = "remi-s3-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.remi-s3-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__reqwest-0.11.18",
        sha256 = "cde824a14b7c14f85caff81225f411faacc04a2013f41670f41443742b1c1c55",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/reqwest/0.11.18/download"],
        strip_prefix = "reqwest-0.11.18",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.reqwest-0.11.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ring-0.16.20",
        sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ring/0.16.20/download"],
        strip_prefix = "ring-0.16.20",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ring-0.16.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rsa-0.9.2",
        sha256 = "6ab43bb47d23c1a631b4b680199a45255dce26fa9ab2fa902581f624ff13e6a8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rsa/0.9.2/download"],
        strip_prefix = "rsa-0.9.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rsa-0.9.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rust-embed-8.0.0",
        sha256 = "b1e7d90385b59f0a6bf3d3b757f3ca4ece2048265d70db20a2016043d4509a40",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rust-embed/8.0.0/download"],
        strip_prefix = "rust-embed-8.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rust-embed-8.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rust-embed-impl-8.0.0",
        sha256 = "3c3d8c6fd84090ae348e63a84336b112b5c3918b3bf0493a581f7bd8ee623c29",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rust-embed-impl/8.0.0/download"],
        strip_prefix = "rust-embed-impl-8.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rust-embed-impl-8.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rust-embed-utils-8.0.0",
        sha256 = "873feff8cb7bf86fdf0a71bb21c95159f4e4a37dd7a4bd1855a940909b583ada",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rust-embed-utils/8.0.0/download"],
        strip_prefix = "rust-embed-utils-8.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rust-embed-utils-8.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustc-demangle-0.1.23",
        sha256 = "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustc-demangle/0.1.23/download"],
        strip_prefix = "rustc-demangle-0.1.23",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustc-demangle-0.1.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustc_version-0.2.3",
        sha256 = "138e3e0acb6c9fb258b19b67cb8abd63c00679d2851805ea151465464fe9030a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustc_version/0.2.3/download"],
        strip_prefix = "rustc_version-0.2.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustc_version-0.2.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustc_version-0.4.0",
        sha256 = "bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustc_version/0.4.0/download"],
        strip_prefix = "rustc_version-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustc_version-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustix-0.38.8",
        sha256 = "19ed4fa021d81c8392ce04db050a3da9a60299050b7ae1cf482d862b54a7218f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustix/0.38.8/download"],
        strip_prefix = "rustix-0.38.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustix-0.38.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustls-0.20.8",
        sha256 = "fff78fc74d175294f4e83b28343315ffcfb114b156f0185e9741cb5570f50e2f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustls/0.20.8/download"],
        strip_prefix = "rustls-0.20.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustls-0.20.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustls-native-certs-0.6.3",
        sha256 = "a9aace74cb666635c918e9c12bc0d348266037aa8eb599b5cba565709a8dff00",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustls-native-certs/0.6.3/download"],
        strip_prefix = "rustls-native-certs-0.6.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustls-native-certs-0.6.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustls-pemfile-1.0.3",
        sha256 = "2d3987094b1d07b653b7dfdc3f70ce9a1da9c51ac18c1b06b662e4f9a0e9f4b2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustls-pemfile/1.0.3/download"],
        strip_prefix = "rustls-pemfile-1.0.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustls-pemfile-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustversion-1.0.14",
        sha256 = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustversion/1.0.14/download"],
        strip_prefix = "rustversion-1.0.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustversion-1.0.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__rustyline-9.1.2",
        sha256 = "db7826789c0e25614b03e5a54a0717a86f9ff6e6e5247f92b369472869320039",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustyline/9.1.2/download"],
        strip_prefix = "rustyline-9.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.rustyline-9.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ryu-1.0.15",
        sha256 = "1ad4cc8da4ef723ed60bced201181d83791ad433213d8c24efffda1eec85d741",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ryu/1.0.15/download"],
        strip_prefix = "ryu-1.0.15",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ryu-1.0.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__same-file-1.0.6",
        sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/same-file/1.0.6/download"],
        strip_prefix = "same-file-1.0.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.same-file-1.0.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__schannel-0.1.22",
        sha256 = "0c3733bf4cf7ea0880754e19cb5a462007c4a8c1914bff372ccc95b464f1df88",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/schannel/0.1.22/download"],
        strip_prefix = "schannel-0.1.22",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.schannel-0.1.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__scopeguard-1.2.0",
        sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/scopeguard/1.2.0/download"],
        strip_prefix = "scopeguard-1.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.scopeguard-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sct-0.7.0",
        sha256 = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sct/0.7.0/download"],
        strip_prefix = "sct-0.7.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sct-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__security-framework-2.9.2",
        sha256 = "05b64fb303737d99b81884b2c63433e9ae28abebe5eb5045dcdd175dc2ecf4de",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/security-framework/2.9.2/download"],
        strip_prefix = "security-framework-2.9.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.security-framework-2.9.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__security-framework-sys-2.9.1",
        sha256 = "e932934257d3b408ed8f30db49d85ea163bfe74961f017f405b025af298f0c7a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/security-framework-sys/2.9.1/download"],
        strip_prefix = "security-framework-sys-2.9.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.security-framework-sys-2.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__semver-0.9.0",
        sha256 = "1d7eb9ef2c18661902cc47e535f9bc51b78acd254da71d375c2f6720d9a40403",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/semver/0.9.0/download"],
        strip_prefix = "semver-0.9.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.semver-0.9.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__semver-1.0.18",
        sha256 = "b0293b4b29daaf487284529cc2f5675b8e57c61f70167ba415a463651fd6a918",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/semver/1.0.18/download"],
        strip_prefix = "semver-1.0.18",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.semver-1.0.18.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__semver-parser-0.7.0",
        sha256 = "388a1df253eca08550bef6c72392cfe7c30914bf41df5269b68cbd6ff8f570a3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/semver-parser/0.7.0/download"],
        strip_prefix = "semver-parser-0.7.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.semver-parser-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-0.31.5",
        sha256 = "01b0ad16faa5d12372f914ed40d00bda21a6d1bdcc99264c5e5e1c9495cf3654",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry/0.31.5/download"],
        strip_prefix = "sentry-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-backtrace-0.31.5",
        sha256 = "11f2ee8f147bb5f22ac59b5c35754a759b9a6f6722402e2a14750b2a63fc59bd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-backtrace/0.31.5/download"],
        strip_prefix = "sentry-backtrace-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-backtrace-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-contexts-0.31.5",
        sha256 = "dcd133362c745151eeba0ac61e3ba8350f034e9fe7509877d08059fe1d7720c6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-contexts/0.31.5/download"],
        strip_prefix = "sentry-contexts-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-contexts-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-core-0.31.5",
        sha256 = "7163491708804a74446642ff2c80b3acd668d4b9e9f497f85621f3d250fd012b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-core/0.31.5/download"],
        strip_prefix = "sentry-core-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-core-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-debug-images-0.31.5",
        sha256 = "6a5003d7ff08aa3b2b76994080b183e8cfa06c083e280737c9cee02ca1c70f5e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-debug-images/0.31.5/download"],
        strip_prefix = "sentry-debug-images-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-debug-images-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-eyre-0.1.0",
        sha256 = "1bf7116dfbdedbbe62ac93edca9b453069013aec2a0917c482a526fcbf4d700b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-eyre/0.1.0/download"],
        strip_prefix = "sentry-eyre-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-eyre-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-panic-0.31.5",
        sha256 = "c4dfe8371c9b2e126a8b64f6fefa54cef716ff2a50e63b5558a48b899265bccd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-panic/0.31.5/download"],
        strip_prefix = "sentry-panic-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-panic-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-tower-0.31.5",
        sha256 = "01c59d3325570b637cc844fef4e7cd9b3f997ffe4e5e83d5ccb85759c9df3bf2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-tower/0.31.5/download"],
        strip_prefix = "sentry-tower-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-tower-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-tracing-0.31.5",
        sha256 = "5aca8b88978677a27ee1a91beafe4052306c474c06f582321fde72d2e2cc2f7f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-tracing/0.31.5/download"],
        strip_prefix = "sentry-tracing-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-tracing-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sentry-types-0.31.5",
        sha256 = "9e7a88e0c1922d19b3efee12a8215f6a8a806e442e665ada71cc222cab72985f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sentry-types/0.31.5/download"],
        strip_prefix = "sentry-types-0.31.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sentry-types-0.31.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde-1.0.186",
        sha256 = "9f5db24220c009de9bd45e69fb2938f4b6d2df856aa9304ce377b3180f83b7c1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde/1.0.186/download"],
        strip_prefix = "serde-1.0.186",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde-1.0.186.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_derive-1.0.186",
        sha256 = "5ad697f7e0b65af4983a4ce8f56ed5b357e8d3c36651bf6a7e13639c17b8e670",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_derive/1.0.186/download"],
        strip_prefix = "serde_derive-1.0.186",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_derive-1.0.186.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_json-1.0.105",
        sha256 = "693151e1ac27563d6dbcec9dee9fbd5da8539b20fa14ad3752b2e6d363ace360",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_json/1.0.105/download"],
        strip_prefix = "serde_json-1.0.105",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_json-1.0.105.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_path_to_error-0.1.14",
        sha256 = "4beec8bce849d58d06238cb50db2e1c417cfeafa4c63f692b15c82b7c80f8335",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_path_to_error/0.1.14/download"],
        strip_prefix = "serde_path_to_error-0.1.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_path_to_error-0.1.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_spanned-0.6.3",
        sha256 = "96426c9936fd7a0124915f9185ea1d20aa9445cc9821142f0a73bc9207a2e186",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_spanned/0.6.3/download"],
        strip_prefix = "serde_spanned-0.6.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_spanned-0.6.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_urlencoded-0.7.1",
        sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_urlencoded/0.7.1/download"],
        strip_prefix = "serde_urlencoded-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_urlencoded-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_with-1.14.0",
        sha256 = "678b5a069e50bf00ecd22d0cd8ddf7c236f68581b03db652061ed5eb13a312ff",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_with/1.14.0/download"],
        strip_prefix = "serde_with-1.14.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_with-1.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_with_macros-1.5.2",
        sha256 = "e182d6ec6f05393cc0e5ed1bf81ad6db3a8feedf8ee515ecdd369809bcce8082",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_with_macros/1.5.2/download"],
        strip_prefix = "serde_with_macros-1.5.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_with_macros-1.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__serde_yaml-0.9.25",
        sha256 = "1a49e178e4452f45cb61d0cd8cebc1b0fafd3e41929e996cef79aa3aca91f574",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde_yaml/0.9.25/download"],
        strip_prefix = "serde_yaml-0.9.25",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.serde_yaml-0.9.25.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sha1-0.10.5",
        sha256 = "f04293dc80c3993519f2d7f6f511707ee7094fe0c6d3406feb330cdb3540eba3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sha1/0.10.5/download"],
        strip_prefix = "sha1-0.10.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sha1-0.10.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sha1_smol-1.0.0",
        sha256 = "ae1a47186c03a32177042e55dbc5fd5aee900b8e0069a8d70fba96a9375cd012",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sha1_smol/1.0.0/download"],
        strip_prefix = "sha1_smol-1.0.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sha1_smol-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sha2-0.10.7",
        sha256 = "479fb9d862239e610720565ca91403019f2f00410f1864c5aa7479b950a76ed8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sha2/0.10.7/download"],
        strip_prefix = "sha2-0.10.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sha2-0.10.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sharded-slab-0.1.4",
        sha256 = "900fba806f70c630b0a382d0d825e17a0f19fcd059a2ade1ff237bcddf446b31",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sharded-slab/0.1.4/download"],
        strip_prefix = "sharded-slab-0.1.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sharded-slab-0.1.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__signal-hook-registry-1.4.1",
        sha256 = "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/signal-hook-registry/1.4.1/download"],
        strip_prefix = "signal-hook-registry-1.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.signal-hook-registry-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__signature-2.1.0",
        sha256 = "5e1788eed21689f9cf370582dfc467ef36ed9c707f073528ddafa8d83e3b8500",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/signature/2.1.0/download"],
        strip_prefix = "signature-2.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.signature-2.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__simple_asn1-0.6.2",
        sha256 = "adc4e5204eb1910f40f9cfa375f6f05b68c3abac4b6fd879c8ff5e7ae8a0a085",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/simple_asn1/0.6.2/download"],
        strip_prefix = "simple_asn1-0.6.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.simple_asn1-0.6.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__simple_tables-0.3.0",
        sha256 = "a1248aa113774f3193c5ad090ee8a429005d32fcdb722f114dce7a74356cce4c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/simple_tables/0.3.0/download"],
        strip_prefix = "simple_tables-0.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.simple_tables-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__simple_tables-core-0.3.0",
        sha256 = "3e7d16173bdde70a696f9eaf1b49bb38f41ea7445c800ab46e6d8ac08c157551",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/simple_tables-core/0.3.0/download"],
        strip_prefix = "simple_tables-core-0.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.simple_tables-core-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__simple_tables-derive-0.3.0",
        sha256 = "add2dda7ba63477aabd1ff151a8f570ebbea9c12444d07bf6ec1a7c5858bd0e7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/simple_tables-derive/0.3.0/download"],
        strip_prefix = "simple_tables-derive-0.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.simple_tables-derive-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__slab-0.4.8",
        sha256 = "6528351c9bc8ab22353f9d776db39a20288e8d6c37ef8cfe3317cf875eecfc2d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/slab/0.4.8/download"],
        strip_prefix = "slab-0.4.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.slab-0.4.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sluice-0.5.5",
        sha256 = "6d7400c0eff44aa2fcb5e31a5f24ba9716ed90138769e4977a2ba6014ae63eb5",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sluice/0.5.5/download"],
        strip_prefix = "sluice-0.5.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sluice-0.5.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__smallvec-1.11.0",
        sha256 = "62bb4feee49fdd9f707ef802e22365a35de4b7b299de4763d44bfea899442ff9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/smallvec/1.11.0/download"],
        strip_prefix = "smallvec-1.11.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.smallvec-1.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__socket2-0.4.9",
        sha256 = "64a4a911eed85daf18834cfaa86a79b7d266ff93ff5ba14005426219480ed662",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/socket2/0.4.9/download"],
        strip_prefix = "socket2-0.4.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.socket2-0.4.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__socket2-0.5.3",
        sha256 = "2538b18701741680e0322a2302176d3253a35388e2e62f172f64f4f16605f877",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/socket2/0.5.3/download"],
        strip_prefix = "socket2-0.5.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.socket2-0.5.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__spin-0.5.2",
        sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/spin/0.5.2/download"],
        strip_prefix = "spin-0.5.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.spin-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__spin-0.9.8",
        sha256 = "6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/spin/0.9.8/download"],
        strip_prefix = "spin-0.9.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.spin-0.9.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__spki-0.7.2",
        sha256 = "9d1e996ef02c474957d681f1b05213dfb0abab947b446a62d37770b23500184a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/spki/0.7.2/download"],
        strip_prefix = "spki-0.7.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.spki-0.7.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlformat-0.2.1",
        sha256 = "0c12bc9199d1db8234678b7051747c07f517cdcf019262d1847b94ec8b1aee3e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlformat/0.2.1/download"],
        strip_prefix = "sqlformat-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlformat-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-0.7.1",
        sha256 = "8e58421b6bc416714d5115a2ca953718f6c621a51b68e4f4922aea5a4391a721",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx/0.7.1/download"],
        strip_prefix = "sqlx-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-core-0.7.1",
        sha256 = "dd4cef4251aabbae751a3710927945901ee1d97ee96d757f6880ebb9a79bfd53",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-core/0.7.1/download"],
        strip_prefix = "sqlx-core-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-core-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-macros-0.7.1",
        sha256 = "208e3165167afd7f3881b16c1ef3f2af69fa75980897aac8874a0696516d12c2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-macros/0.7.1/download"],
        strip_prefix = "sqlx-macros-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-macros-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-macros-core-0.7.1",
        sha256 = "8a4a8336d278c62231d87f24e8a7a74898156e34c1c18942857be2acb29c7dfc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-macros-core/0.7.1/download"],
        strip_prefix = "sqlx-macros-core-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-macros-core-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-mysql-0.7.1",
        sha256 = "8ca69bf415b93b60b80dc8fda3cb4ef52b2336614d8da2de5456cc942a110482",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-mysql/0.7.1/download"],
        strip_prefix = "sqlx-mysql-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-mysql-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-postgres-0.7.1",
        sha256 = "a0db2df1b8731c3651e204629dd55e52adbae0462fa1bdcbed56a2302c18181e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-postgres/0.7.1/download"],
        strip_prefix = "sqlx-postgres-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-postgres-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sqlx-sqlite-0.7.1",
        sha256 = "be4c21bf34c7cae5b283efb3ac1bcc7670df7561124dc2f8bdc0b59be40f79a2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sqlx-sqlite/0.7.1/download"],
        strip_prefix = "sqlx-sqlite-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sqlx-sqlite-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__str-buf-1.0.6",
        sha256 = "9e08d8363704e6c71fc928674353e6b7c23dcea9d82d7012c8faf2a3a025f8d0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/str-buf/1.0.6/download"],
        strip_prefix = "str-buf-1.0.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.str-buf-1.0.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__stringprep-0.1.3",
        sha256 = "db3737bde7edce97102e0e2b15365bf7a20bfdb5f60f4f9e8d7004258a51a8da",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/stringprep/0.1.3/download"],
        strip_prefix = "stringprep-0.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.stringprep-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__strsim-0.10.0",
        sha256 = "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/strsim/0.10.0/download"],
        strip_prefix = "strsim-0.10.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.strsim-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__subtle-2.5.0",
        sha256 = "81cdd64d312baedb58e21336b31bc043b77e01cc99033ce76ef539f78e965ebc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/subtle/2.5.0/download"],
        strip_prefix = "subtle-2.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.subtle-2.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__syn-1.0.109",
        sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/syn/1.0.109/download"],
        strip_prefix = "syn-1.0.109",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.syn-1.0.109.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__syn-2.0.29",
        sha256 = "c324c494eba9d92503e6f1ef2e6df781e78f6a7705a0202d9801b198807d518a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/syn/2.0.29/download"],
        strip_prefix = "syn-2.0.29",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.syn-2.0.29.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sync_wrapper-0.1.2",
        sha256 = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sync_wrapper/0.1.2/download"],
        strip_prefix = "sync_wrapper-0.1.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sync_wrapper-0.1.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__sysinfo-0.29.8",
        sha256 = "d10ed79c22663a35a255d289a7fdcb43559fc77ff15df5ce6c341809e7867528",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sysinfo/0.29.8/download"],
        strip_prefix = "sysinfo-0.29.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.sysinfo-0.29.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tar-0.4.40",
        sha256 = "b16afcea1f22891c49a00c751c7b63b2233284064f11a200fc624137c51e2ddb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tar/0.4.40/download"],
        strip_prefix = "tar-0.4.40",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tar-0.4.40.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tempfile-3.8.0",
        sha256 = "cb94d2f3cc536af71caac6b6fcebf65860b347e7ce0cc9ebe8f70d3e521054ef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tempfile/3.8.0/download"],
        strip_prefix = "tempfile-3.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tempfile-3.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__testcontainers-0.14.0",
        sha256 = "0e2b1567ca8a2b819ea7b28c92be35d9f76fb9edb214321dcc86eb96023d1f87",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/testcontainers/0.14.0/download"],
        strip_prefix = "testcontainers-0.14.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.testcontainers-0.14.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__thiserror-1.0.47",
        sha256 = "97a802ec30afc17eee47b2855fc72e0c4cd62be9b4efe6591edde0ec5bd68d8f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/thiserror/1.0.47/download"],
        strip_prefix = "thiserror-1.0.47",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.thiserror-1.0.47.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__thiserror-impl-1.0.47",
        sha256 = "6bb623b56e39ab7dcd4b1b98bb6c8f8d907ed255b18de254088016b27a8ee19b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/thiserror-impl/1.0.47/download"],
        strip_prefix = "thiserror-impl-1.0.47",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.thiserror-impl-1.0.47.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__thread_local-1.1.7",
        sha256 = "3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/thread_local/1.1.7/download"],
        strip_prefix = "thread_local-1.1.7",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.thread_local-1.1.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__time-0.1.45",
        sha256 = "1b797afad3f312d1c66a56d11d0316f916356d11bd158fbc6ca6389ff6bf805a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/time/0.1.45/download"],
        strip_prefix = "time-0.1.45",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.time-0.1.45.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__time-0.3.25",
        sha256 = "b0fdd63d58b18d663fbdf70e049f00a22c8e42be082203be7f26589213cd75ea",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/time/0.3.25/download"],
        strip_prefix = "time-0.3.25",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.time-0.3.25.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__time-core-0.1.1",
        sha256 = "7300fbefb4dadc1af235a9cef3737cea692a9d97e1b9cbcd4ebdae6f8868e6fb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/time-core/0.1.1/download"],
        strip_prefix = "time-core-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.time-core-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__time-macros-0.2.11",
        sha256 = "eb71511c991639bb078fd5bf97757e03914361c48100d52878b8e52b46fb92cd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/time-macros/0.2.11/download"],
        strip_prefix = "time-macros-0.2.11",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.time-macros-0.2.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tinyvec-1.6.0",
        sha256 = "87cc5ceb3875bb20c2890005a4e226a4651264a5c75edb2421b52861a0a0cb50",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tinyvec/1.6.0/download"],
        strip_prefix = "tinyvec-1.6.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tinyvec-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tinyvec_macros-0.1.1",
        sha256 = "1f3ccbac311fea05f86f61904b462b55fb3df8837a366dfc601a0161d0532f20",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tinyvec_macros/0.1.1/download"],
        strip_prefix = "tinyvec_macros-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tinyvec_macros-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-1.32.0",
        sha256 = "17ed6077ed6cd6c74735e21f37eb16dc3935f96878b1fe961074089cc80893f9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio/1.32.0/download"],
        strip_prefix = "tokio-1.32.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-1.32.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-macros-2.1.0",
        sha256 = "630bdcf245f78637c13ec01ffae6187cca34625e8c63150d424b59e55af2675e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-macros/2.1.0/download"],
        strip_prefix = "tokio-macros-2.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-macros-2.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-native-tls-0.3.1",
        sha256 = "bbae76ab933c85776efabc971569dd6119c580d8f5d448769dec1764bf796ef2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-native-tls/0.3.1/download"],
        strip_prefix = "tokio-native-tls-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-native-tls-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-retry-0.3.0",
        sha256 = "7f57eb36ecbe0fc510036adff84824dd3c24bb781e21bfa67b69d556aa85214f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-retry/0.3.0/download"],
        strip_prefix = "tokio-retry-0.3.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-retry-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-rustls-0.23.4",
        sha256 = "c43ee83903113e03984cb9e5cebe6c04a5116269e900e3ddba8f068a62adda59",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-rustls/0.23.4/download"],
        strip_prefix = "tokio-rustls-0.23.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-rustls-0.23.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-stream-0.1.14",
        sha256 = "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-stream/0.1.14/download"],
        strip_prefix = "tokio-stream-0.1.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-stream-0.1.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-util-0.6.10",
        sha256 = "36943ee01a6d67977dd3f84a5a1d2efeb4ada3a1ae771cadfaa535d9d9fc6507",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-util/0.6.10/download"],
        strip_prefix = "tokio-util-0.6.10",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-util-0.6.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tokio-util-0.7.8",
        sha256 = "806fe8c2c87eccc8b3267cbae29ed3ab2d0bd37fca70ab622e46aaa9375ddb7d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-util/0.7.8/download"],
        strip_prefix = "tokio-util-0.7.8",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tokio-util-0.7.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__toml-0.7.6",
        sha256 = "c17e963a819c331dcacd7ab957d80bc2b9a9c1e71c804826d2f283dd65306542",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/toml/0.7.6/download"],
        strip_prefix = "toml-0.7.6",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.toml-0.7.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__toml_datetime-0.6.3",
        sha256 = "7cda73e2f1397b1262d6dfdcef8aafae14d1de7748d66822d3bfeeb6d03e5e4b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/toml_datetime/0.6.3/download"],
        strip_prefix = "toml_datetime-0.6.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.toml_datetime-0.6.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__toml_edit-0.19.14",
        sha256 = "f8123f27e969974a3dfba720fdb560be359f57b44302d280ba72e76a74480e8a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/toml_edit/0.19.14/download"],
        strip_prefix = "toml_edit-0.19.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.toml_edit-0.19.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tower-0.4.13",
        sha256 = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower/0.4.13/download"],
        strip_prefix = "tower-0.4.13",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tower-0.4.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tower-http-0.4.3",
        sha256 = "55ae70283aba8d2a8b411c695c437fe25b8b5e44e23e780662002fc72fb47a82",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-http/0.4.3/download"],
        strip_prefix = "tower-http-0.4.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tower-http-0.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tower-layer-0.3.2",
        sha256 = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-layer/0.3.2/download"],
        strip_prefix = "tower-layer-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tower-layer-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tower-service-0.3.2",
        sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-service/0.3.2/download"],
        strip_prefix = "tower-service-0.3.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tower-service-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-0.1.37",
        sha256 = "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing/0.1.37/download"],
        strip_prefix = "tracing-0.1.37",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-0.1.37.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-attributes-0.1.26",
        sha256 = "5f4f31f56159e98206da9efd823404b79b6ef3143b4a7ab76e67b1751b25a4ab",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-attributes/0.1.26/download"],
        strip_prefix = "tracing-attributes-0.1.26",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-attributes-0.1.26.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-core-0.1.31",
        sha256 = "0955b8137a1df6f1a2e9a37d8a6656291ff0297c1a97c24e0d8425fe2312f79a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-core/0.1.31/download"],
        strip_prefix = "tracing-core-0.1.31",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-core-0.1.31.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-error-0.2.0",
        sha256 = "d686ec1c0f384b1277f097b2f279a2ecc11afe8c133c1aabf036a27cb4cd206e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-error/0.2.0/download"],
        strip_prefix = "tracing-error-0.2.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-error-0.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-futures-0.2.5",
        sha256 = "97d095ae15e245a057c8e8451bab9b3ee1e1f68e9ba2b4fbc18d0ac5237835f2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-futures/0.2.5/download"],
        strip_prefix = "tracing-futures-0.2.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-futures-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-log-0.1.3",
        sha256 = "78ddad33d2d10b1ed7eb9d1f518a5674713876e97e5bb9b7345a7984fbb4f922",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-log/0.1.3/download"],
        strip_prefix = "tracing-log-0.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-log-0.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__tracing-subscriber-0.3.17",
        sha256 = "30a651bc37f915e81f087d86e62a18eec5f79550c7faff886f7090b4ea757c77",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-subscriber/0.3.17/download"],
        strip_prefix = "tracing-subscriber-0.3.17",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.tracing-subscriber-0.3.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__try-lock-0.2.4",
        sha256 = "3528ecfd12c466c6f163363caf2d02a71161dd5e1cc6ae7b34207ea2d42d81ed",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/try-lock/0.2.4/download"],
        strip_prefix = "try-lock-0.2.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.try-lock-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__typenum-1.16.0",
        sha256 = "497961ef93d974e23eb6f433eb5fe1b7930b659f06d12dec6fc44a8f554c0bba",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/typenum/1.16.0/download"],
        strip_prefix = "typenum-1.16.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.typenum-1.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__uname-0.1.1",
        sha256 = "b72f89f0ca32e4db1c04e2a72f5345d59796d4866a1ee0609084569f73683dc8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/uname/0.1.1/download"],
        strip_prefix = "uname-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.uname-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode-bidi-0.3.13",
        sha256 = "92888ba5573ff080736b3648696b70cafad7d250551175acbaa4e0385b3e1460",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-bidi/0.3.13/download"],
        strip_prefix = "unicode-bidi-0.3.13",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode-bidi-0.3.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode-ident-1.0.11",
        sha256 = "301abaae475aa91687eb82514b328ab47a211a533026cb25fc3e519b86adfc3c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-ident/1.0.11/download"],
        strip_prefix = "unicode-ident-1.0.11",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode-ident-1.0.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode-normalization-0.1.22",
        sha256 = "5c5713f0fc4b5db668a2ac63cdb7bb4469d8c9fed047b1d0292cc7b0ce2ba921",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-normalization/0.1.22/download"],
        strip_prefix = "unicode-normalization-0.1.22",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode-normalization-0.1.22.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode-segmentation-1.10.1",
        sha256 = "1dd624098567895118886609431a7c3b8f516e41d30e0643f03d94592a147e36",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-segmentation/1.10.1/download"],
        strip_prefix = "unicode-segmentation-1.10.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode-segmentation-1.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode-width-0.1.10",
        sha256 = "c0edd1e5b14653f783770bce4a4dabb4a5108a5370a5f5d8cfe8710c361f6c8b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-width/0.1.10/download"],
        strip_prefix = "unicode-width-0.1.10",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode-width-0.1.10.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unicode_categories-0.1.1",
        sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode_categories/0.1.1/download"],
        strip_prefix = "unicode_categories-0.1.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unicode_categories-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__unsafe-libyaml-0.2.9",
        sha256 = "f28467d3e1d3c6586d8f25fa243f544f5800fec42d97032474e17222c2b75cfa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unsafe-libyaml/0.2.9/download"],
        strip_prefix = "unsafe-libyaml-0.2.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.unsafe-libyaml-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__untrusted-0.7.1",
        sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/untrusted/0.7.1/download"],
        strip_prefix = "untrusted-0.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.untrusted-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__ureq-2.7.1",
        sha256 = "0b11c96ac7ee530603dcdf68ed1557050f374ce55a5a07193ebf8cbc9f8927e9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ureq/2.7.1/download"],
        strip_prefix = "ureq-2.7.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.ureq-2.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__url-2.4.0",
        sha256 = "50bff7831e19200a85b17131d085c25d7811bc4e186efdaf54bbd132994a88cb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/url/2.4.0/download"],
        strip_prefix = "url-2.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.url-2.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__urlencoding-2.1.3",
        sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/urlencoding/2.1.3/download"],
        strip_prefix = "urlencoding-2.1.3",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.urlencoding-2.1.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__utf8parse-0.2.1",
        sha256 = "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/utf8parse/0.2.1/download"],
        strip_prefix = "utf8parse-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.utf8parse-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__utoipa-3.5.0",
        sha256 = "d82b1bc5417102a73e8464c686eef947bdfb99fcdfc0a4f228e81afa9526470a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/utoipa/3.5.0/download"],
        strip_prefix = "utoipa-3.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.utoipa-3.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__utoipa-gen-3.5.0",
        sha256 = "05d96dcd6fc96f3df9b3280ef480770af1b7c5d14bc55192baa9b067976d920c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/utoipa-gen/3.5.0/download"],
        strip_prefix = "utoipa-gen-3.5.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.utoipa-gen-3.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__uuid-1.4.1",
        sha256 = "79daa5ed5740825c40b389c5e50312b9c86df53fccd33f281df655642b43869d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/uuid/1.4.1/download"],
        strip_prefix = "uuid-1.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.uuid-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__validator-0.16.1",
        sha256 = "b92f40481c04ff1f4f61f304d61793c7b56ff76ac1469f1beb199b1445b253bd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/validator/0.16.1/download"],
        strip_prefix = "validator-0.16.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.validator-0.16.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__validator_derive-0.16.0",
        sha256 = "bc44ca3088bb3ba384d9aecf40c6a23a676ce23e09bdaca2073d99c207f864af",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/validator_derive/0.16.0/download"],
        strip_prefix = "validator_derive-0.16.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.validator_derive-0.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__validator_types-0.16.0",
        sha256 = "111abfe30072511849c5910134e8baf8dc05de4c0e5903d681cbd5c9c4d611e3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/validator_types/0.16.0/download"],
        strip_prefix = "validator_types-0.16.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.validator_types-0.16.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__valuable-0.1.0",
        sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/valuable/0.1.0/download"],
        strip_prefix = "valuable-0.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.valuable-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__vcpkg-0.2.15",
        sha256 = "accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/vcpkg/0.2.15/download"],
        strip_prefix = "vcpkg-0.2.15",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.vcpkg-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__version_check-0.9.4",
        sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/version_check/0.9.4/download"],
        strip_prefix = "version_check-0.9.4",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.version_check-0.9.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__void-1.0.2",
        sha256 = "6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/void/1.0.2/download"],
        strip_prefix = "void-1.0.2",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.void-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__vsimd-0.8.0",
        sha256 = "5c3082ca00d5a5ef149bb8b555a72ae84c9c59f7250f013ac822ac2e49b19c64",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/vsimd/0.8.0/download"],
        strip_prefix = "vsimd-0.8.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.vsimd-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__waker-fn-1.1.0",
        sha256 = "9d5b2c62b4012a3e1eca5a7e077d13b3bf498c4073e33ccd58626607748ceeca",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/waker-fn/1.1.0/download"],
        strip_prefix = "waker-fn-1.1.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.waker-fn-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__walkdir-2.4.0",
        sha256 = "d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/walkdir/2.4.0/download"],
        strip_prefix = "walkdir-2.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.walkdir-2.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__want-0.3.1",
        sha256 = "bfa7760aed19e106de2c7c0b581b509f2f25d3dacaf737cb82ac61bc6d760b0e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/want/0.3.1/download"],
        strip_prefix = "want-0.3.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.want-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasi-0.10.0-wasi-snapshot-preview1",
        sha256 = "1a143597ca7c7793eff794def352d41792a93c481eb1042423ff7ff72ba2c31f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasi/0.10.0+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.10.0+wasi-snapshot-preview1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasi-0.10.0+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasi-0.11.0-wasi-snapshot-preview1",
        sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.11.0+wasi-snapshot-preview1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-0.2.87",
        sha256 = "7706a72ab36d8cb1f80ffbf0e071533974a60d0a308d01a5d0375bf60499a342",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen/0.2.87/download"],
        strip_prefix = "wasm-bindgen-0.2.87",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-0.2.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-backend-0.2.87",
        sha256 = "5ef2b6d3c510e9625e5fe6f509ab07d66a760f0885d858736483c32ed7809abd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.87/download"],
        strip_prefix = "wasm-bindgen-backend-0.2.87",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-backend-0.2.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-futures-0.4.37",
        sha256 = "c02dbc21516f9f1f04f187958890d7e6026df8d16540b7ad9492bc34a67cea03",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-futures/0.4.37/download"],
        strip_prefix = "wasm-bindgen-futures-0.4.37",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-futures-0.4.37.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-macro-0.2.87",
        sha256 = "dee495e55982a3bd48105a7b947fd2a9b4a8ae3010041b9e0faab3f9cd028f1d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.87/download"],
        strip_prefix = "wasm-bindgen-macro-0.2.87",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-macro-0.2.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-macro-support-0.2.87",
        sha256 = "54681b18a46765f095758388f2d0cf16eb8d4169b639ab575a8f5693af210c7b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.87/download"],
        strip_prefix = "wasm-bindgen-macro-support-0.2.87",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-macro-support-0.2.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__wasm-bindgen-shared-0.2.87",
        sha256 = "ca6ad05a4870b2bf5fe995117d3728437bd27d7cd5f06f13c17443ef369775a1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.87/download"],
        strip_prefix = "wasm-bindgen-shared-0.2.87",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.wasm-bindgen-shared-0.2.87.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__web-sys-0.3.64",
        sha256 = "9b85cbef8c220a6abc02aefd892dfc0fc23afb1c6a426316ec33253a3877249b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/web-sys/0.3.64/download"],
        strip_prefix = "web-sys-0.3.64",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.web-sys-0.3.64.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__webpki-0.22.0",
        sha256 = "f095d78192e208183081cc07bc5515ef55216397af48b873e5edcd72637fa1bd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/webpki/0.22.0/download"],
        strip_prefix = "webpki-0.22.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.webpki-0.22.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__which-4.4.0",
        sha256 = "2441c784c52b289a054b7201fc93253e288f094e2f4be9058343127c4226a269",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/which/4.4.0/download"],
        strip_prefix = "which-4.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.which-4.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__whoami-1.4.1",
        sha256 = "22fc3756b8a9133049b26c7f61ab35416c130e8c09b660f5b3958b446f52cc50",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/whoami/1.4.1/download"],
        strip_prefix = "whoami-1.4.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.whoami-1.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winapi-0.3.9",
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi/0.3.9/download"],
        strip_prefix = "winapi-0.3.9",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winapi-0.3.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winapi-i686-pc-windows-gnu-0.4.0",
        sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-i686-pc-windows-gnu-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winapi-util-0.1.5",
        sha256 = "70ec6ce85bb158151cae5e5c87f95a8e97d2c0c4b001223f33a334e3ce5de178",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-util/0.1.5/download"],
        strip_prefix = "winapi-util-0.1.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winapi-util-0.1.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winapi-x86_64-pc-windows-gnu-0.4.0",
        sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-x86_64-pc-windows-gnu-0.4.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows-0.48.0",
        sha256 = "e686886bc078bc1b0b600cac0147aadb815089b6e4da64016cbd754b6342700f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows/0.48.0/download"],
        strip_prefix = "windows-0.48.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows-0.48.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows-sys-0.48.0",
        sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-sys/0.48.0/download"],
        strip_prefix = "windows-sys-0.48.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows-sys-0.48.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows-targets-0.48.5",
        sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-targets/0.48.5/download"],
        strip_prefix = "windows-targets-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows-targets-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_aarch64_gnullvm-0.48.5",
        sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_aarch64_gnullvm/0.48.5/download"],
        strip_prefix = "windows_aarch64_gnullvm-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_aarch64_gnullvm-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_aarch64_msvc-0.48.5",
        sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_aarch64_msvc/0.48.5/download"],
        strip_prefix = "windows_aarch64_msvc-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_aarch64_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_i686_gnu-0.48.5",
        sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_gnu/0.48.5/download"],
        strip_prefix = "windows_i686_gnu-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_i686_gnu-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_i686_msvc-0.48.5",
        sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_msvc/0.48.5/download"],
        strip_prefix = "windows_i686_msvc-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_i686_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_x86_64_gnu-0.48.5",
        sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_gnu/0.48.5/download"],
        strip_prefix = "windows_x86_64_gnu-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_x86_64_gnu-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_x86_64_gnullvm-0.48.5",
        sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_gnullvm/0.48.5/download"],
        strip_prefix = "windows_x86_64_gnullvm-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_x86_64_gnullvm-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__windows_x86_64_msvc-0.48.5",
        sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_msvc/0.48.5/download"],
        strip_prefix = "windows_x86_64_msvc-0.48.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.windows_x86_64_msvc-0.48.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winnow-0.5.14",
        sha256 = "d09770118a7eb1ccaf4a594a221334119a44a814fcb0d31c5b85e83e97227a97",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winnow/0.5.14/download"],
        strip_prefix = "winnow-0.5.14",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winnow-0.5.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__winreg-0.10.1",
        sha256 = "80d0f4e272c85def139476380b12f9ac60926689dd2e01d4923222f40580869d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winreg/0.10.1/download"],
        strip_prefix = "winreg-0.10.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.winreg-0.10.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__xattr-1.0.1",
        sha256 = "f4686009f71ff3e5c4dbcf1a282d0a44db3f021ba69350cd42086b3e5f1c6985",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/xattr/1.0.1/download"],
        strip_prefix = "xattr-1.0.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.xattr-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__xmlparser-0.13.5",
        sha256 = "4d25c75bf9ea12c4040a97f829154768bbbce366287e2dc044af160cd79a13fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/xmlparser/0.13.5/download"],
        strip_prefix = "xmlparser-0.13.5",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.xmlparser-0.13.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__yaup-0.2.1",
        sha256 = "a59e7d27bed43f7c37c25df5192ea9d435a8092a902e02203359ac9ce3e429d9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/yaup/0.2.1/download"],
        strip_prefix = "yaup-0.2.1",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.yaup-0.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crate_index__zeroize-1.6.0",
        sha256 = "2a0956f1ba7c7909bfb66c2e9e4124ab6f6482560f6628b5aaeba39207c9aad9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/zeroize/1.6.0/download"],
        strip_prefix = "zeroize-1.6.0",
        build_file = Label("@org_noelware_charted_server//thirdparty/crates:BUILD.zeroize-1.6.0.bazel"),
    )
