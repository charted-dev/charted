###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # MIT
# ])

rust_library(
    name = "curl_sys",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "default",
        "http2",
        "libnghttp2-sys",
        "openssl-sys",
        "ssl",
        "static-curl",
    ],
    crate_root = "lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=curl-sys",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.4.65+curl-8.2.1",
    deps = [
        "@crate_index__curl-sys-0.4.65-curl-8.2.1//:build_script_build",
        "@crate_index__libc-0.2.149//:libc",
        "@crate_index__libnghttp2-sys-0.1.8-1.55.1//:libnghttp2_sys",
        "@crate_index__libz-sys-1.1.12//:libz_sys",
    ] + select({
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(all(unix, not(target_os = "macos")))
        ],
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@crate_index__winapi-0.3.9//:winapi",  # cfg(windows)
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(all(unix, not(target_os = "macos")))
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "curl-sys_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = select({
        "@org_noelware_charted_server//build/settings:nixos": {
            "DEP_OPENSSL_INCLUDE": "../openssl-static/include",  # @org_noelware_charted_server//build/settings:nixos
        },
        "//conditions:default": {},
    }),
    crate_features = [
        "default",
        "http2",
        "libnghttp2-sys",
        "openssl-sys",
        "ssl",
        "static-curl",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + select({
        "@org_noelware_charted_server//build/settings:nixos": [
            "@openssl-static//:include",  # @org_noelware_charted_server//build/settings:nixos
        ],
        "//conditions:default": [],
    }),
    edition = "2018",
    link_deps = [
        "@crate_index__libnghttp2-sys-0.1.8-1.55.1//:libnghttp2_sys",
        "@crate_index__libz-sys-1.1.12//:libz_sys",
    ] + select({
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(all(unix, not(target_os = "macos")))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__openssl-sys-0.9.97//:openssl_sys",  # cfg(all(unix, not(target_os = "macos")))
        ],
        "//conditions:default": [],
    }),
    links = "curl",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=curl-sys",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.4.65+curl-8.2.1",
    visibility = ["//visibility:private"],
    deps = [
        "@crate_index__cc-1.0.83//:cc",
        "@crate_index__pkg-config-0.3.27//:pkg_config",
    ] + select({
        "@rules_rust//rust/platform:x86_64-pc-windows-msvc": [
            "@crate_index__vcpkg-0.2.15//:vcpkg",  # cfg(target_env = "msvc")
        ],
        "//conditions:default": [],
    }),
)

alias(
    name = "build_script_build",
    actual = "curl-sys_build_script",
    tags = ["manual"],
)
