###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//thirdparty:crate_index
###############################################################################

load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # Apache-2.0
# ])

rust_library(
    name = "sentry_core",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            ".tmp_git_root/**/*",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "build_id",
        "client",
        "debug-logs",
        "default",
        "findshlibs",
        "indexmap",
        "libc",
        "pprof",
        "profiling",
        "rand",
        "rustc_version_runtime",
        "sys-info",
        "uuid",
    ],
    crate_root = "src/lib.rs",
    edition = "2021",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=sentry-core",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.31.5",
    deps = [
        "@crate_index__build_id-0.2.1//:build_id",
        "@crate_index__findshlibs-0.10.2//:findshlibs",
        "@crate_index__indexmap-1.9.3//:indexmap",
        "@crate_index__log-0.4.20//:log",
        "@crate_index__once_cell-1.18.0//:once_cell",
        "@crate_index__rand-0.8.5//:rand",
        "@crate_index__rustc_version_runtime-0.2.1//:rustc_version_runtime",
        "@crate_index__sentry-types-0.31.5//:sentry_types",
        "@crate_index__serde-1.0.171//:serde",
        "@crate_index__serde_json-1.0.105//:serde_json",
        "@crate_index__sys-info-0.9.1//:sys_info",
        "@crate_index__uuid-1.4.1//:uuid",
    ] + select({
        "@rules_rust//rust/platform:aarch64-apple-darwin": [
            "@crate_index__libc-0.2.147//:libc",  # cfg(target_family = "unix")
            "@crate_index__pprof-0.11.1//:pprof",  # cfg(target_family = "unix")
        ],
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crate_index__libc-0.2.147//:libc",  # cfg(target_family = "unix")
            "@crate_index__pprof-0.11.1//:pprof",  # cfg(target_family = "unix")
        ],
        "@rules_rust//rust/platform:x86_64-apple-darwin": [
            "@crate_index__libc-0.2.147//:libc",  # cfg(target_family = "unix")
            "@crate_index__pprof-0.11.1//:pprof",  # cfg(target_family = "unix")
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crate_index__libc-0.2.147//:libc",  # cfg(target_family = "unix")
            "@crate_index__pprof-0.11.1//:pprof",  # cfg(target_family = "unix")
        ],
        "//conditions:default": [],
    }),
)
