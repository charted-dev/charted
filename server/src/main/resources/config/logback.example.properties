# ? charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the configuration to configure Logback, the logging facade we use to have proper logging.
# All keys in this properties file must be started with "charted" to continue.

# This sets the log level to use. It can only have the properties:
# - ERROR
# - WARN
# - INFO
# - DEBUG
# - TRACE
charted.log.level=INFO

# This configures the use to enable the JSON logger for specific use cases.
charted.console.json=yes

# Returns the timezone to use to format the timestamp.
# Defaults to UTC
# charted.console.json.timezone=UTC

# Returns the timestamp format to format the timestamp.
# charted.console.json.timestamp.format=yyyy-MM-dd'T'HH:mm:ss.SSSX

# This configures the format the formatter the console will use.
charted.console.format=[%d{yyyy-MM-dd | HH:mm:ss, +10}] %boldCyan([%thread]) %highlight([%logger{36}]) %boldMagenta(%-5level) :: %msg%n

# This configures the appenders that Logback will use to send data. By default, only the
# console appender is only added. This can configure:
#    - Sentry
#    - Logstash
#
# The "sentry" appender implements the use of Sentry in the ERROR log level. The property `charted.sentry.dsn`
# must be configured before using it.
#
# The "logstash" appender implements the use to use the Elastic Stack with Logstash. The properties must be configured:
#     - charted.logstash.endpoint
#     - charted.logstash.type
charted.appenders=

# This is the Sentry DSN to use when the `sentry` encoder is present in `charted.encoders`. It must be a valid DSN.
# charted.sentry.dsn=

# This configures what type of LS input the Logstash appender should use. We only support the following Logstash inputs:
# - tcp
# - udp
# charted.logstash.type=

# This configures the URL that Logstash is on.
# charted.logstash.endpoint=
