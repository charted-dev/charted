# ðŸ“¦ charted-server: Free, open source, and reliable Helm Chart registry made in Kotlin.
# Copyright 2022 Noelware <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

fullNameOverride: ""
nameOverride: ""
replicas: 3
jvmOptions: "-Xmx4096 -Xms1024m"
debugMode: false
nodeSelector: {}
tolerations: []
affinity: {}
serviceName: ""
extraEnvVars: []
initContainers: []

jwtSecret:
  generate: true
  # secretName: ""
  # secret: ""

image:
  repository: ghcr.io/charted-dev/charted
  tag: 1.1.1-nightly
  pullPolicy: IfNotPresent

config:
  mapName: charted-config
  path: /app/noelware/charted/server/config.yml
  config: |
  # refer to https://charts.noelware.org/docs/self-hosting#configuration

logback:
  mapName: charted-logback
  path: /app/noelware/charted/server/logback.properties
  config: |
  # refer to https://charts.noelware.org/docs/self-hosting#logging

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}
securityContext: {}
service:
  type: ClusterIP
  port: 4321
  protocol: TCP
  targetPort: 4321

frontend:
  enabled: true
  config:
    mapName: pak-config
    path: /app/noelware/charted/pak/config.yml
    config: |
    # refer to https://charts.noelware.org/docs/pak/self-hosting#configuration
  service:
    type: ClusterIP
    port: 6731
    protocol: TCP
    targetPort: 6731
  ingress:
    enabled: false
    annotations: {}
    className: ""
    hosts:
      - host: pak-chart.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    # - secretName: pak-tls
    #   hosts:
    #   - pak-chart.local

ingress:
  enabled: false
  annotations: {}
  className: ""
  hosts:
    - host: charted.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  # - secretName: charted-tls
  #   hosts:
  #   - charted.local

# Configuration for the PostgreSQL instance for charted-server. This is completely
# optional if you have a PostgreSQL instance already!
postgres:
  enabled: false

# Configuration for the Redis instance for charted-server. This is completely optional if you
# have a Redis instance already!
redis:
  enabled: false

# Allows you to have a local Cassandra instance for charted-server. This is mainly for the Audit Logs
# and Webhooks features.
cassandra:
  enabled: false

# Allows you to have a local Elasticsearch + Kibana instance for charted-server. This is mainly for
# advanced search and metrics with Metricbeat. This is not compatible with `meilisearch`.
#
# If `elasticsearch.metricbeat.enabled` is set to true, this will enable the Prometheus metrics endpoint (GET /metrics)
# on the server!
elasticsearch:
  enabled: false
  metricbeat:
    enabled: false
    environment:
      existingSecret: true
      username: ''
      password: ''
      hosts: 'elasticsearch:9200'
    config: |
      metricbeat.config:
        modules:
          path: ${path.config}/modules.d/*.yml
          reload.enabled: false
      metricbeat.modules:
      - module: prometheus
        period: 10s
        metricsets: ["collector"]
        hosts: ["localhost:3651"]
        metrics_path: /metrics
      outputs.elasticsearch:
        hosts: '${ELASTICSEARCH_HOSTS:elasticsearch:9200}'
        username: '${ELASTICSEARCH_USERNAME:}'
        password: '${ELASTICSEARCH_PASSWORD:}'
      http:
        enabled: true
        host: 0.0.0.0
        port: 5066
    image:
      repository: docker.elastic.co/beats/metricbeat
      tag: 8.5.2
      pullPolicy: IfNotPresent

# Allows you to have a local Kibana instance to analyze the data that charted-server is pushing out. You can also
# see the metrics that Metricbeat collects if elasticsearch.metricbeat.enabled is true. This is not compatible
# with `meilisearch`.
kibana:
  enabled: false

# Allows you to have Meilisearch as another search backend. This is not compatible with `elasticsearch` or `kibana`.
meilisearch:
  enabled: false

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 780Mi
  # requests:
  #   cpu: 100m
  #   memory: 780Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5
