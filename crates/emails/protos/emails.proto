// üêª‚Äç‚ùÑÔ∏èüíå email-service: charted's email service built in Rust that can be connected via gRPC
// Copyright 2023 Noelware, LLC. <team@noelware.org>
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package noelware.charted.emails;
option java_multiple_files = true;
option java_package = "org.noelware.charted.emails.protobufs.v1";

import "google/protobuf/struct.proto";

service Emails {
    rpc Send(SendEmailRequest) returns (SendEmailResponse);
    rpc Ping(PingRequest) returns (PingResponse);
}

// Represents a request to ping the server to check if it is alive or not.
message PingRequest {}

// Represents the response to the Ping call.
message PingResponse {
    // Pong!
    bool pong = 1;
}

// Represents a request to send a email
message SendEmailRequest {
    // The address to send the content to
    string to = 1;

    // The subject of the email
    string subject = 2;

    // Optional content to send, this will not be processed by a template
    // and will be directly sent.
    optional string content = 3;

    // The template name that is available in the ./templates directory.
    optional string template = 4;

    // The template context if the template has variables.
    optional google.protobuf.Struct context = 5;
}

// Represents a response from sending a email
message SendEmailResponse {
    // If the request was a success or not. If not, the `error_message` property
    // will be available, and to see if you can retry with the `should_retry` property.
    bool success = 1;

    // If the email should be retried due to an error.
    bool should_retry = 2;

    // Optional error message of the reason why it was not successful.
    optional string error_message = 3;
}
