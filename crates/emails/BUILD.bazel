# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2023 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("//:build/rust.bzl", "rust_project")

exports_files([
    "Cargo.toml",
    "protos/emails.proto",
    "protos/google/protobuf/struct.proto",
])

rust_project(
    name = "emails",
    deps = [
        ":buildscript",
        "@crate_index//:prost",
        "@crate_index//:tonic",
        "@crate_index//:tracing",
    ],
)

_DEFAULT_BUILD_SCRIPT_ENV = {
    "PROTOS": "$(location //crates/emails:protos/emails.proto)",
    "PROTOC": "$(execpath @com_google_protobuf//:protoc)",
}

_DEFAULT_BUILD_SCRIPT_DATA = [
    "//crates/emails:protos/emails.proto",
    "//crates/emails:protos/google/protobuf/struct.proto",
    "@com_google_protobuf//:protoc",
]

# For NixOS, we have to compile `protoc` that it can be auto-patched, we could've
# done it with a patch on the `rules_proto` itself, but ambiguitious `select`s are
# not allowed.
#
# So, we do it here and do a bunch of `select` hacks. Do I like this? No not really,
# but does it work? Yeah!
cargo_build_script(
    name = "buildscript",
    srcs = ["build.rs"],
    build_script_env = select({
        "//build/settings:nixos": {
            "PROTOS": _DEFAULT_BUILD_SCRIPT_ENV["PROTOS"],
            "PROTOC": "$(execpath @com_github_protocolbuffers_protobuf//:protoc)",
        },
        "//conditions:default": _DEFAULT_BUILD_SCRIPT_ENV,
    }),
    data = select({
        "//build/settings:nixos": [
            _DEFAULT_BUILD_SCRIPT_DATA[0],
            _DEFAULT_BUILD_SCRIPT_DATA[1],
            "@com_github_protocolbuffers_protobuf//:protoc",
        ],
        "//conditions:default": _DEFAULT_BUILD_SCRIPT_DATA,
    }),
    rustc_flags = [
        "--cfg",
        "bazel",
    ],
    visibility = [":__pkg__"],
    deps = all_crate_deps(build = True),
)
