/*
 * üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
 * Copyright 2022-2024 Noelware, LLC. <team@noelware.org>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { fileURLToPath } from 'node:url';
import { resolve } from 'node:path';
import * as log from './util/logging';
import openapi from 'openapi-typescript';

const SCHEMA_FILE = resolve(fileURLToPath(new URL('../..', import.meta.url)), 'assets/openapi.json');

async function main() {
    log.startGroup('generating `openapi.ts`...');
    const file = Bun.file(SCHEMA_FILE);
    const dts = await openapi(file.name!, {
        supportArrayLength: true,
        immutableTypes: true,
        commentHeader: [
            '/* eslint-disable */',
            '/*',
            ' * üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust',
            ' * Copyright 2022-2024 Noelware, LLC. <team@noelware.org>',
            ' *',
            ' * Licensed under the Apache License, Version 2.0 (the "License");',
            ' * you may not use this file except in compliance with the License.',
            ' * You may obtain a copy of the License at',
            ' *',
            ' *    http://www.apache.org/licenses/LICENSE-2.0',
            ' *',
            ' * Unless required by applicable law or agreed to in writing, software',
            ' * distributed under the License is distributed on an "AS IS" BASIS,',
            ' * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.',
            ' * See the License for the specific language governing permissions and',
            ' * limitations under the License.',
            ' */',
            '',
            `// This file was generated by \`bun generate:openapi\` at ${new Date().toISOString()}`,
            `// Do not make edits to this file as it won't reflect on the next \`bun generate:openapi\` invocation`,
            ''
        ].join('\n')
    });

    const generated = Bun.file('./src/@types/openapi.generated.d.ts');
    await Bun.write(generated, dts);
    log.endGroup();
}

main().catch((ex) => {
    log.error(ex);
    process.exit(1);
});
