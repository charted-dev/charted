# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2025 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[workspace]
resolver = "3"
members = [
    "crates/authz",
    "crates/authz/*",
    "crates/cli",
    "crates/client",
    "crates/configuration",
    "crates/core",
    "crates/database",
    "crates/datastore",
    "crates/helm/charts",
    "crates/helm/types",
    "crates/metrics",
    #"crates/server",
    "crates/serverv2",
    "crates/types",

    "crates/workers/apikeys",
    "crates/workers/storage",

    "src/charted",
    "src/internals",

    "features",
    "features/garbage-collection",
    "features/members",
    "features/totp",
]

[workspace.package]
version = "0.1.0"
authors = [
    "John Burke <winter@winterfox.tech>",
    "Noel Towa <cutie@floofy.dev>",
    "Spotlight <spotlight@joscomputing.space>",
]
documentation = "https://charts.noelware.org/docs"
edition = "2024"
homepage = "https://charts.noelware.org"
license = "Apache-2.0"
publish = false
repository = "https://github.com/charted-dev/charted"
rust-version = "1.85"

[workspace.dependencies]
charted-authz.path = "./crates/authz"
charted-authz-local.path = "./crates/authz/local"
charted-authz-static.path = "./crates/authz/static"
charted-cli.path = "./crates/cli"
charted-config.path = "./crates/configuration"
charted-core = { path = "./crates/core", version = "0.1.0", features = [
    "collect-backtrace-frames",
] }
charted-database.path = "./crates/database"
charted-datastore.path = "./crates/datastore"
charted-feature.path = "./features"
charted-feature-gc.path = "./features/garbage-collection"
charted-feature-members.path = "./features/members"
charted-feature-totp.path = "./features/totp"
charted-helm-charts.path = "./crates/helm/charts"
charted-helm-types = { path = "./crates/helm/types", version = "0.1.0" }
charted-metrics.path = "./crates/metrics"
charted-server.path = "./crates/server"
charted-types = { path = "./crates/types", version = "0.1.0" }

argon2 = "0.5.3"
axum = { version = "0.8.4", features = ["http2", "macros"] }
base64 = "0.22.1"
chrono = { version = "0.4.40", features = ["serde"] }
clap = { version = "4.5.36", features = ["derive", "env"] }
clap_complete = "4.5.47"
color-eyre = { version = "0.6.3", features = ["issue-url"] }
derive_more = "2.0.1"
dotenvy = "0.15.7"
eyre = "0.6.12"
metrics-exporter-prometheus = { version = "0.16.2", default-features = false, features = [
    "tracing",
] }
mimalloc = "0.1.46"
multer = { version = "3.1.0", features = ["log", "tokio"] }
num_cpus = "1.16.0"
rand = "0.9.0"
reqwest = { version = "0.12.15", default-features = false, features = [
    "__rustls",
    "charset",
    "gzip",
    "http2",
    "json",
    "macos-system-configuration",
    "rustls-tls-webpki-roots-no-provider",
] }
rustc_version = "0.4.1"
schemars = { version = "0.8.22", features = ["chrono", "semver", "url"] }
sea-orm = { version = "1.1.8", default-features = false, features = [
    "macros",
    "sqlx-postgres",
    "sqlx-sqlite",
    "with-chrono",
] }
sea-orm-migration = { version = "1.1.8", default-features = false, features = [
    "sqlx-postgres",
    "sqlx-sqlite",
    "with-chrono",
] }
semver = { version = "1.0.26", features = ["serde"] }
sentry = { version = "0.37.0", default-features = false, features = [
    "backtrace",
    "contexts",
    "debug-images",
    "panic",
    "release-health",
    "reqwest",
    "rustls",
] }
serde = { version = "1.0.219", features = ["derive", "rc"] }
serde_json = "1.0.140"
serde_yaml_ng = "0.10.0"
sqlx = { version = "0.8.3", features = [
    "postgres",
    "runtime-tokio",
    "runtime-tokio-rustls",
    "sqlite",
] }
tempfile = "3.19.1"
tracing = "0.1.41"
tracing-subscriber = "0.3.19"
toml = "0.8.20"
tokio = "1.44.2"
ulid = { version = "1.2.1", features = ["serde"] }
utoipa = { version = "5.3.1", features = [
    "chrono",
    "non_strict_integers",
    "ulid",
    "url",
] }
url = "2.5.4"

[workspace.dependencies.azalia]
version = "0.1.6"
features = ["remi+tracing"]

[profile.release]
codegen-units = 1 # use a single codegen unit
opt-level = "s" # optimize for size
panic = "abort" # abort the process when a panic occurs
strip = true # strip all debug symbols
debug = 0 # disable debug information
lto = true # perform LTO on all crates (even our own)
