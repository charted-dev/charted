# üêª‚Äç‚ùÑÔ∏èüì¶ charted-server: Free, open source, and reliable Helm Chart registry made in Rust
# Copyright 2022-2024 Noelware, LLC. <team@noelware.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[workspace]
resolver = "2"
members = [
    "features/gc",
    "features/oci",
    "proc-macros",
    "tools/devtools",
    "tools/helm-plugin",
]

[features]
vendored = ["openssl/vendored"]
default = []

[workspace.package]
version = "0.1.0-beta"
authors = [
    "Noel Towa <cutie@floofy.dev>",
    "Spotlight <spotlight@joscomputing.space>",
    "John Burke <winter@winterfox.tech>",
]
documentation = "https://charts.noelware.org/docs"
edition = "2021"
homepage = "https://charts.noelware.org"
license = "Apache-2.0"
publish = false
repository = "https://github.com/charted-dev/charted"
rust-version = "1.73"

[workspace.dependencies]
async-trait = "0.1.78"
chrono = { version = "0.4.35", features = ["serde"] }
clap = { version = "4.5.3", features = ["derive", "env"] }
cli-table = "0.4.7"
clap_complete = "4.5.1"
color-eyre = { version = "0.6.3", features = ["issue-url", "tracing-error"] }
dotenvy = "0.15.7"
eyre = "0.6.12"
owo-colors = { version = "4.0.0", features = ["supports-color"] }
semver = { version = "1.0.22", features = ["serde"] }
serde = { version = "1.0.197", features = ["derive"] }
serde_json = "1.0.114"
which = "6.0.0"

[workspace.dependencies.noelware-config]
version = "0.1.0"
git = "https://github.com/Noelware/core-rs"
rev = "f190efd883e61f0b630a14a5e1cc20da648fb38a"
features = ["derive"]

[package]
name = "charted"
description = "üêª‚Äç‚ùÑÔ∏èüì¶ Free, open source, and reliable Helm Chart registry made in Rust"
version.workspace = true
authors.workspace = true
homepage.workspace = true
edition.workspace = true
rust-version.workspace = true
documentation.workspace = true
license.workspace = true
repository.workspace = true
publish.workspace = true

[dependencies]
argon2 = "0.5.3"
async-recursion = "1.1.0"
async-trait = "0.1.78"
aws-sdk-s3 = "1.19.1"
axum = { version = "0.7.4", features = ["macros", "http2"] }
axum-extra = { version = "0.9.2", features = ["typed-header"] }
axum-server = { version = "0.6.0", features = ["tls-rustls"] }
azalia = { version = "0.1.0", git = "https://github.com/Noelware/core-rs", rev = "f190efd883e61f0b630a14a5e1cc20da648fb38a" }
azure_storage = "0.19.0"
base64 = "0.22.0"
charted-proc-macros = { version = "0.0.0-devel.0", path = "./proc-macros" }
chrono.workspace = true
clap.workspace = true
clap_complete = "4.5.1"
cli-table.workspace = true
color-eyre.workspace = true
dotenvy = "0.15.7"
elasticsearch = "8.5.0-alpha.1"
erased-serde = "0.4.4"
eyre = "0.6.12"
flate2 = "1.0.28"
futures-util = "0.3.30"
hex = "0.4.3"
humantime = "2.1.0"
itertools = "0.12.1"
jsonwebtoken = "9.2.0"
ldap3 = "0.11.3"
mac_address = "1.1.5"
md-5 = "0.10.6"
meilisearch-sdk = "0.25.0"
mimalloc = "0.1.39"
mime = "0.3.17"
moka = { version = "0.12.5", features = ["future"] }
multer = "3.0.0"
num_cpus = "1.16.0"
noelware-config.workspace = true
once_cell = "1.19.0"
openssl = "0.10.64" # only here for the `vendored` feature
owo-colors.workspace = true
paste = "1.0.14"
prometheus-client = "0.22.2"
prost = "0.12.3"
prost-types = "0.12.3"
rand = "0.8.5"
redis = { version = "0.25.2", features = [
    "sentinel",
    "tokio-comp",
    "connection-manager",
] }
regex = "1.10.3"
remi = "0.6.3"
remi-azure = { version = "0.6.3", features = ["serde", "tracing"] }
remi-fs = { version = "0.6.3", features = ["serde", "tracing"] }
remi-s3 = { version = "0.6.3", features = ["serde", "tracing"] }
reqwest = "0.11.26"
semver.workspace = true
sentry = "0.32.2"
sentry-eyre = "0.1.0"
sentry-tower = { version = "0.32.2", features = ["axum", "http"] }
sentry-tracing = "0.32.2"
serde.workspace = true
serde_json.workspace = true
serde_path_to_error = "0.1.16"
serde_repr = "0.1.18"
sqlx = { version = "0.7.4", features = [
    "postgres",
    "runtime-tokio",
    "tls-native-tls",
    "chrono",
] }
tar = "0.4.40"
tokio = { version = "1.36.0", features = [
    "rt",
    "rt-multi-thread",
    "macros",
    "io-util",
    "fs",
    "signal",
] }
tokio-util = "0.7.10"
tonic = "0.11.0"
tower = "0.4.13"
tower-http = { version = "0.5.2", features = [
    "compression-full",
    "auth",
    "cors",
    "catch-panic",
    "limit",
] }
tracing = "0.1.40"
tracing-log = "0.2.0"
tracing-opentelemetry = "0.23.0"
tracing-subscriber = "0.3.18"
ubyte = { version = "0.10.4", features = ["serde"] }
utoipa = { version = "4.2.0", features = ["uuid"] }
uuid = { version = "1.7.0", features = ["serde", "v4"] }
validator = { version = "0.16.1", features = ["derive"] }
toml = "0.8.11"
serde_yaml = "0.9.33"

[dependencies.noelware-log]
version = "0.1.0"
git = "https://github.com/Noelware/core-rs"
rev = "f190efd883e61f0b630a14a5e1cc20da648fb38a"
features = ["log"]

[dependencies.noelware-remi]
version = "0.1.0"
git = "https://github.com/Noelware/core-rs"
rev = "f190efd883e61f0b630a14a5e1cc20da648fb38a"
features = ["azure", "fs", "s3"]

[dependencies.noelware-serde]
version = "0.1.0"
git = "https://github.com/Noelware/core-rs"
rev = "f190efd883e61f0b630a14a5e1cc20da648fb38a"
features = ["tracing"]

[dev-dependencies]
remi-fs = "0.6.3"
tempfile = "3.10.1"
tokio = { version = "1.36.0", features = ["rt", "macros"] }

[build-dependencies]
chrono.workspace = true
rustc_version = "0.4.0"
tonic-build = "0.11.0"
which.workspace = true

[package.metadata.cargo-machete]
ignored = [
    "md-5",                  # md-5 is actually used but it is under the `md5` module.
    "openssl",               # this is mainly for releases since we have `--features=vendored`, which will vender OpenSSL
    "prost",                 # Prost is used when we send messages to charted-emails, but as of 02/03/24, it is not implemented
    "prost-types",           # ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    "tracing-log",           # We enable the `log` feature to get logs from crates that use the `log` library, but we don't ever use it
    "tracing-opentelemetry", # we plan to have logs and traces be reported to any OpenTelemetry-supported protocol, not implemented yet
]

[profile.release]
opt-level = "z"
lto = true
codegen-units = 1
strip = true

[[bin]]
path = "./src/bin/main.rs"
name = "charted"
edition = "2021"
